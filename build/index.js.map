{
  "version": 3,
  "sources": ["../node_modules/remix/dist/index.js", "<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/basket/index.tsx", "../app/components/basket/cache.tsx", "../app/components/basket/reducer.ts", "../app/components/basket/shared-channel.ts", "../app/components/basket/get-basket-query.ts", "../app/service-api.ts", "../app/config/locale.ts", "../app/components/basket/basket-button.tsx", "../app/components/404.tsx", "../app/routes/confirmation/$orderId.tsx", "../app/clients.ts", "../app/service-api/get-order.generated.ts", "../app/components/confirmation.tsx", "../app/routes/shop/$product.tsx", "../app/crystallize/fragments/content.generated.ts", "../app/crystallize/queries/product.generated.ts", "../app/crystallize/utils/normalizeDocumentNode.ts", "../app/components/product.tsx", "../app/crystallize/utils/componentContent.ts", "../app/components/product-body.tsx", "../app/components/variant-selector.tsx", "../app/components/related-products.tsx", "../app/http-cache-header-tagger.ts", "../app/routes/checkout.tsx", "../app/components/payments/payments.tsx", "../app/components/payments/invoice.tsx", "../app/service-api/invoice-create-order.generated.ts", "../app/routes/index.tsx", "../app/crystallize/queries/frontpage.generated.ts", "../app/components/grid-item.tsx", "../app/components/products.tsx", "../app/routes/cart.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * @remix-run/node v1.7.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar node = require('@remix-run/node');\nObject.defineProperty(exports, 'createCookie', {\n  enumerable: true,\n  get: function () { return node.createCookie; }\n});\nObject.defineProperty(exports, 'createCookieSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createCookieSessionStorage; }\n});\nObject.defineProperty(exports, 'createFileSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createFileSessionStorage; }\n});\nObject.defineProperty(exports, 'createMemorySessionStorage', {\n  enumerable: true,\n  get: function () { return node.createMemorySessionStorage; }\n});\nObject.defineProperty(exports, 'createSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createSessionStorage; }\n});\nObject.defineProperty(exports, 'unstable_createFileUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createFileUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_createMemoryUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createMemoryUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_parseMultipartFormData', {\n  enumerable: true,\n  get: function () { return node.unstable_parseMultipartFormData; }\n});\n\n/**\n * @remix-run/server-runtime v1.7.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar serverRuntime = require('@remix-run/server-runtime');\nObject.defineProperty(exports, 'createSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.createSession; }\n});\nObject.defineProperty(exports, 'isCookie', {\n  enumerable: true,\n  get: function () { return serverRuntime.isCookie; }\n});\nObject.defineProperty(exports, 'isSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.isSession; }\n});\nObject.defineProperty(exports, 'json', {\n  enumerable: true,\n  get: function () { return serverRuntime.json; }\n});\nObject.defineProperty(exports, 'redirect', {\n  enumerable: true,\n  get: function () { return serverRuntime.redirect; }\n});\n\n/**\n * @remix-run/react v1.7.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar react = require('@remix-run/react');\nObject.defineProperty(exports, 'Form', {\n  enumerable: true,\n  get: function () { return react.Form; }\n});\nObject.defineProperty(exports, 'Link', {\n  enumerable: true,\n  get: function () { return react.Link; }\n});\nObject.defineProperty(exports, 'Links', {\n  enumerable: true,\n  get: function () { return react.Links; }\n});\nObject.defineProperty(exports, 'LiveReload', {\n  enumerable: true,\n  get: function () { return react.LiveReload; }\n});\nObject.defineProperty(exports, 'Meta', {\n  enumerable: true,\n  get: function () { return react.Meta; }\n});\nObject.defineProperty(exports, 'NavLink', {\n  enumerable: true,\n  get: function () { return react.NavLink; }\n});\nObject.defineProperty(exports, 'PrefetchPageLinks', {\n  enumerable: true,\n  get: function () { return react.PrefetchPageLinks; }\n});\nObject.defineProperty(exports, 'RemixBrowser', {\n  enumerable: true,\n  get: function () { return react.RemixBrowser; }\n});\nObject.defineProperty(exports, 'RemixServer', {\n  enumerable: true,\n  get: function () { return react.RemixServer; }\n});\nObject.defineProperty(exports, 'Scripts', {\n  enumerable: true,\n  get: function () { return react.Scripts; }\n});\nObject.defineProperty(exports, 'ScrollRestoration', {\n  enumerable: true,\n  get: function () { return react.ScrollRestoration; }\n});\nObject.defineProperty(exports, 'useActionData', {\n  enumerable: true,\n  get: function () { return react.useActionData; }\n});\nObject.defineProperty(exports, 'useBeforeUnload', {\n  enumerable: true,\n  get: function () { return react.useBeforeUnload; }\n});\nObject.defineProperty(exports, 'useCatch', {\n  enumerable: true,\n  get: function () { return react.useCatch; }\n});\nObject.defineProperty(exports, 'useFetcher', {\n  enumerable: true,\n  get: function () { return react.useFetcher; }\n});\nObject.defineProperty(exports, 'useFetchers', {\n  enumerable: true,\n  get: function () { return react.useFetchers; }\n});\nObject.defineProperty(exports, 'useFormAction', {\n  enumerable: true,\n  get: function () { return react.useFormAction; }\n});\nObject.defineProperty(exports, 'useLoaderData', {\n  enumerable: true,\n  get: function () { return react.useLoaderData; }\n});\nObject.defineProperty(exports, 'useMatches', {\n  enumerable: true,\n  get: function () { return react.useMatches; }\n});\nObject.defineProperty(exports, 'useSubmit', {\n  enumerable: true,\n  get: function () { return react.useSubmit; }\n});\nObject.defineProperty(exports, 'useTransition', {\n  enumerable: true,\n  get: function () { return react.useTransition; }\n});\nObject.defineProperty(exports, 'Outlet', {\n  enumerable: true,\n  get: function () { return react.Outlet; }\n});\nObject.defineProperty(exports, 'useHref', {\n  enumerable: true,\n  get: function () { return react.useHref; }\n});\nObject.defineProperty(exports, 'useLocation', {\n  enumerable: true,\n  get: function () { return react.useLocation; }\n});\nObject.defineProperty(exports, 'useNavigate', {\n  enumerable: true,\n  get: function () { return react.useNavigate; }\n});\nObject.defineProperty(exports, 'useNavigationType', {\n  enumerable: true,\n  get: function () { return react.useNavigationType; }\n});\nObject.defineProperty(exports, 'useOutlet', {\n  enumerable: true,\n  get: function () { return react.useOutlet; }\n});\nObject.defineProperty(exports, 'useOutletContext', {\n  enumerable: true,\n  get: function () { return react.useOutletContext; }\n});\nObject.defineProperty(exports, 'useParams', {\n  enumerable: true,\n  get: function () { return react.useParams; }\n});\nObject.defineProperty(exports, 'useResolvedPath', {\n  enumerable: true,\n  get: function () { return react.useResolvedPath; }\n});\nObject.defineProperty(exports, 'useSearchParams', {\n  enumerable: true,\n  get: function () { return react.useSearchParams; }\n});\n\n", "export * from \"@remix-run/dev/server-build\";", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nconst dotenv = require(\"dotenv\");\ndotenv.config();\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  });\n}\n", "import {\n  Link,\n  Links,\n  LiveReload,\n  LoaderFunction,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData,\n} from \"remix\";\nimport type { MetaFunction } from \"remix\";\nimport tailwindStyles from \"./styles/tailwind.css\";\nimport { BasketProvider } from \"./components/basket\";\nimport { locale } from \"./config/locale\";\nimport { BasketButton } from \"./components/basket/basket-button\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ErrorComponent } from \"./components/404\";\n\nconst queryClient = new QueryClient();\n\nexport const meta: MetaFunction = () => {\n  return { title: \"Dounut\" };\n};\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: tailwindStyles }];\n}\n\nexport const loader: LoaderFunction = () => {\n  return {\n    ENV: {\n      SERVICE_API_URL: process.env.SERVICE_API_URL,\n      TENANT_IDENTIFIER: process.env.CRYSTALLIZE_TENANT_IDENTIFIER,\n      NODE_EXECUTION_MODE: process.env.NODE_EXECUTION_MODE,\n    },\n  };\n};\n\nexport default function App() {\n  const data = useLoaderData();\n\n  if (typeof window !== \"undefined\") {\n    window.addEventListener(\"load\", function () {\n      navigator.serviceWorker.register(\"/sw.js\").then(\n        function (registration) {\n          console.log(\n            \"ServiceWorker registration successful with scope: \",\n            registration.scope\n          );\n        },\n        function (err) {\n          console.log(\"ServiceWorker registration failed: \", err);\n        }\n      );\n    });\n  }\n\n  return (\n    <html lang=\"ru\" className=\"relative z-10\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n        <meta name=\"mobile-web-app-capable\" content=\"yes\" />\n        <link\n          rel=\"apple-touch-icon\"\n          href=\"/icons/windows11/Square150x150Logo.scale-100.png\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href=\"/icons/windows11/Square150x150Logo.scale-100.png\"\n        />\n        <meta name=\"msapplication-TileColor\" content=\"#ffffff\" />\n        <meta\n          name=\"msapplication-TileImage\"\n          content=\"/icons/windows11/Square150x150Logo.scale-100.png\"\n        />\n        <meta name=\"theme-color\" content=\"#ffffff\" />\n        <link\n          rel=\"apple-touch-startup-image\"\n          href=\"/images/icons/windows11/Square150x150Logo.scale-100.png\"\n        />\n        <meta name=\"apple-mobile-web-app-title\" content=\"Dounot\" />\n        <link rel=\"manifest\" href=\"/manifest.json\" />\n\n        <Meta />\n        <Links />\n\n        <script suppressHydrationWarning={true} type=\"text/css\">\n          {\n            '*,:after,:before{box-sizing:border-box;border:0 solid}:after,:before{--tw-content:\"\"}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}body{margin:0;line-height:inherit}h2{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}figure,h2,p{margin:0}img,svg{display:block;vertical-align:middle}img{max-width:100%;height:auto}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-date-and-time-value{min-height:1.5em}*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:#3b82f680;--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (max-width:1024px){#grid-item{grid-column:span 1!important}}.absolute{position:absolute}.relative{position:relative}.-right-2{right:-.5rem}.-top-2{top:-.5rem}.z-10{z-index:10}.mx-auto{margin-left:auto;margin-right:auto}.mt-4{margin-top:1rem}.flex{display:flex}.h-80{height:20rem}.h-full{height:100%}.h-5{height:1.25rem}.w-full{width:100%}.w-60{width:15rem}.w-5{width:1.25rem}.flex-col{flex-direction:column}.items-start{align-items:flex-start}.items-center{align-items:center}.justify-between{justify-content:space-between}.justify-evenly{justify-content:space-evenly}.gap-5{gap:1.25rem}.gap-1{gap:.25rem}.self-end{align-self:flex-end}.overflow-hidden{overflow:hidden}.rounded-xl{border-radius:.75rem}.rounded-2xl{border-radius:1rem}.rounded-full{border-radius:1000px}.rounded-r-xl{border-top-right-radius:.75rem;border-bottom-right-radius:.75rem}.bg-primary{--tw-bg-opacity:1;background-color:rgb(255 247 240/var(--tw-bg-opacity))}.bg-background1{--tw-bg-opacity:1;background-color:rgb(240 239 235/var(--tw-bg-opacity))}.bg-grey{background-color:#00000008}.bg-text{--tw-bg-opacity:1;background-color:rgb(55 53 103/var(--tw-bg-opacity))}.p-8{padding:2rem}.p-5{padding:1.25rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.px-2{padding-left:.5rem;padding-right:.5rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-7{padding-top:1.75rem;padding-bottom:1.75rem}.py-20{padding-top:5rem;padding-bottom:5rem}.text-center{text-align:center}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-sm{font-size:.875rem;line-height:1.25rem}.font-bold{font-weight:700}.text-primary{--tw-text-opacity:1;color:rgb(255 247 240/var(--tw-text-opacity))}'\n          }\n        </script>\n        <script\n          defer\n          src=\"https://pim.crystallize.com/static/frontend-preview-listener.js\"\n        />\n      </head>\n      <body>\n        <QueryClientProvider client={queryClient}>\n          <BasketProvider locale={locale}>\n            <Layout>\n              <Outlet />\n              <script\n                dangerouslySetInnerHTML={{\n                  __html: `window.ENV = ${JSON.stringify(data.ENV)}`,\n                }}\n              ></script>\n\n              <ScrollRestoration />\n              {data.ENV.NODE_EXECUTION_MODE === \"development\" && <LiveReload />}\n            </Layout>\n          </BasketProvider>\n        </QueryClientProvider>\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n\nfunction Layout({ children }) {\n  return (\n    <div className=\"remix-app lg:w-content w-full mx-auto p-3 sm:px-3\">\n      <header className=\"remix-app__header\">\n        <div className=\"container remix-app__header-content flex justify-between\">\n          <Link\n            prefetch=\"intent\"\n            to=\"/\"\n            title=\"Remix\"\n            className=\"remix-app__header-home-link\"\n          >\n            <Logo />\n          </Link>\n          <Link\n            prefetch=\"intent\"\n            to=\"/cart\"\n            title=\"Your cart\"\n            className=\"remix-app__header-link\"\n          >\n            <BasketButton />\n          </Link>\n        </div>\n      </header>\n      <div className=\"remix-app__main\">\n        <div className=\"container remix-app__main-content\">{children}</div>\n      </div>\n      <footer className=\"remix-app__footer\">\n        <div className=\"container remix-app__footer-content mt-40\">\n          <Link\n            prefetch=\"intent\"\n            to=\"/\"\n            title=\"Remix\"\n            className=\"remix-app__header-home-link\"\n          >\n            <Logo />\n          </Link>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nfunction Logo(props: React.ComponentPropsWithoutRef<\"svg\">) {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Layer_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width=\"35\"\n      height=\"35\"\n      viewBox=\"0 0 512 512\"\n    >\n      <g>\n        <path\n          fill=\"#16153B\"\n          d=\"M282.946,479.473h-53.893c-7.442,0-13.474-6.032-13.474-13.474c0-7.442,6.032-13.474,13.474-13.474\n\t\th53.893c7.442,0,13.474,6.032,13.474,13.474C296.42,473.441,290.388,479.473,282.946,479.473z\"\n        />\n        <path\n          fill=\"#16153B\"\n          d=\"M498.526,479.473h-53.893c-7.442,0-13.474-6.032-13.474-13.474c0-7.442,6.032-13.474,13.474-13.474\n\t\th53.893c7.442,0,13.474,6.032,13.474,13.474C512,473.441,505.968,479.473,498.526,479.473z\"\n        />\n        <path\n          fill=\"#16153B\"\n          d=\"M67.366,479.473H13.474C6.032,479.473,0,473.441,0,465.999c0-7.442,6.032-13.474,13.474-13.474\n\t\th53.893c7.442,0,13.474,6.032,13.474,13.474C80.84,473.441,74.808,479.473,67.366,479.473z\"\n        />\n        <path\n          fill=\"#16153B\"\n          d=\"M471.581,479.473h-68.083c-37.574,0-71.907-22.098-87.468-56.298l-29.442-64.708\n\t\tc-3.081-6.773-0.089-14.763,6.683-17.845c6.773-3.083,14.762-0.09,17.845,6.683l29.443,64.707\n\t\tc11.197,24.61,35.902,40.51,62.939,40.51h51.287l-42.099-189.445c-4.626-20.812-16.117-39.877-32.363-53.685L256,103.721\n\t\tL131.677,209.393c-16.245,13.808-27.737,32.872-32.363,53.685L57.215,452.526h51.287c27.037,0,51.742-15.902,62.939-40.51\n\t\tl72.109-158.48c2.025-4.879,6.834-8.309,12.446-8.309c4.582,0,8.854,2.328,11.334,6.182c2.479,3.852,2.835,8.701,0.938,12.873\n\t\tL195.97,423.176c-15.561,34.199-49.894,56.298-87.468,56.298H40.419c-4.087,0-7.952-1.854-10.51-5.043\n\t\tc-2.557-3.189-3.53-7.365-2.642-11.354l45.742-205.841c5.889-26.504,20.527-50.787,41.215-68.372l133.05-113.09\n\t\tc5.031-4.277,12.422-4.277,17.453,0l133.05,113.09c20.688,17.585,35.326,41.867,41.215,68.372l45.742,205.841\n\t\tc0.887,3.99-0.085,8.166-2.642,11.354C479.535,477.618,475.668,479.473,471.581,479.473z\"\n        />\n        <path\n          fill=\"#16153B\"\n          d=\"M236.176,116.642c-3.448,0-6.897-1.315-9.527-3.946c-5.262-5.262-5.262-13.793,0-19.056\n\t\tl57.167-57.167c5.262-5.262,13.793-5.262,19.056,0c5.262,5.262,5.262,13.793,0,19.056l-57.167,57.167\n\t\tC243.072,115.327,239.624,116.642,236.176,116.642z\"\n        />\n        <path\n          fill=\"#16153B\"\n          d=\"M275.824,116.642c-3.448,0-6.897-1.315-9.527-3.946L209.13,55.529\n\t\tc-5.262-5.262-5.262-13.793,0-19.056c5.262-5.262,13.793-5.262,19.056,0l57.167,57.167c5.262,5.262,5.262,13.793,0,19.056\n\t\tC282.721,115.327,279.273,116.642,275.824,116.642z\"\n        />\n      </g>\n      <path\n        fill=\"#97C4E8\"\n        d=\"M425.154,257.352c-5.658-22.679-18.258-43.053-36.106-58.222L255.999,86.04L122.95,199.13\n\tc-17.846,15.169-30.448,35.543-36.106,58.222L425.154,257.352L425.154,257.352z\"\n      />\n      <path\n        fill=\"#16153B\"\n        d=\"M425.156,270.826H86.846c-4.149,0-8.064-1.911-10.617-5.179c-2.555-3.269-3.459-7.532-2.455-11.556\n\tc6.389-25.608,20.378-48.164,40.452-65.228l133.049-113.09c5.031-4.277,12.422-4.277,17.453,0l133.05,113.09\n\tc20.075,17.065,34.063,39.618,40.452,65.228c1.004,4.025,0.098,8.286-2.455,11.556C433.22,268.915,429.303,270.826,425.156,270.826z\n\t M105.71,243.878h300.581c-5.949-13.222-14.747-24.945-25.967-34.482L256.001,103.723L131.678,209.396\n\tC120.456,218.933,111.659,230.658,105.71,243.878z\"\n      />\n    </svg>\n  );\n}\n\nexport function ErrorBoundary() {\n  return (\n    <html className=\"bg-primary\">\n      <head>\n        <title>Oh no!</title>\n        <Meta />\n        <Links />\n      </head>\n      <body style={{ height: \"100vh\" }}>\n        <Layout>\n          <ErrorComponent />\n        </Layout>\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n\nexport function CatchBoundary() {\n  return (\n    <html className=\"bg-primary\">\n      <head>\n        <title>Oh no!</title>\n        <Meta />\n        <Links />\n      </head>\n      <body style={{ height: \"100vh\" }}>\n        <Layout>\n          <ErrorComponent />\n        </Layout>\n        <Scripts />\n      </body>\n    </html>\n  );\n}", "import React, { useEffect, useReducer, useRef, useMemo } from \"react\";\nimport { retrieveFromCache, persistToCache } from \"./cache\";\nimport reducer, { initialState } from \"./reducer\";\nimport { getChannel } from \"./shared-channel\";\nimport GET_BASKET_QUERY from \"./get-basket-query\";\nimport serviceApi from \"../../service-api\"\n\n\nconst BasketContext = React.createContext(undefined);\n\nexport const useBasket = () => React.useContext(BasketContext);\n\nfunction clientCartItemForAPI({ id, sku, path, quantity, priceVariantIdentifier, stock }) {\n  return { id, sku, path, quantity, priceVariantIdentifier, stock };\n}\n\nexport function BasketProvider({ locale, children }) {\n  const [\n    {\n      status,\n      clientBasket,\n      serverBasket,\n      totalQuantity,\n      changeTriggeredByOtherTab,\n      attentionCartItem,\n    },\n    dispatch,\n  ] = useReducer(reducer, initialState);\n\n  const sharedChannelRef = useRef(getChannel());\n\n  useEffect(() => {\n    // Retrieve cached basket\n    (async function init() {\n      const cache = await retrieveFromCache();\n      dispatch({ action: \"hydrate\", ...cache });\n    })();\n\n    // Listen for channel updates\n    if (sharedChannelRef.current) {\n      sharedChannelRef.current.onmessage = function (event) {\n        dispatch({ action: \"channel-update\", ...JSON.parse(event.data) });\n      };\n    }\n  }, []);\n\n  // Persist the basket on the client\n  useEffect(() => {\n    if (status !== \"not-hydrated\") {\n      persistToCache({\n        ...clientBasket,\n        cart: clientBasket.cart.map(clientCartItemForAPI),\n      });\n    }\n  }, [status, clientBasket]);\n\n  /**\n   * Broadcast this change to anyone listening to the channel\n   * This is typically other tabs opened for this site, thus\n   * enabling a synced cart across all open tabs\n   */\n  useEffect(() => {\n    if (status === \"ready\") {\n      if (!changeTriggeredByOtherTab) {\n        sharedChannelRef.current?.postMessage(\n          JSON.stringify({\n            clientBasket,\n            serverBasket,\n          })\n        );\n      }\n    }\n  }, [status, clientBasket, serverBasket, changeTriggeredByOtherTab]);\n\n  /**\n   * Define the basketModel object.\n   * Used here and in the checkout\n   */\n  const basketModel = useMemo(\n    () => ({ \n      locale,\n      cart: clientBasket.cart.map(clientCartItemForAPI),\n      voucherCode: clientBasket.voucherCode,\n      // crystallizeOrderId: ,\n      crystallizeOrderId: clientBasket.crystallizeOrderId,\n      klarnaOrderId: clientBasket.klarnaOrderId,\n    }),\n    [locale, clientBasket]\n  );\n\n  // Get server state on cart change\n  useEffect(() => {\n    let stale = false;\n\n    async function getServerBasket() {\n      try {\n        const response = await serviceApi({\n          query: GET_BASKET_QUERY,\n          variables: {\n            basketModel\n          }\n        });\n\n        if (!stale && response.data) {\n          dispatch({\n            action: \"set-server-basket\",\n            serverBasket: response.data.basket,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        dispatch({\n          action: \"server-update-failed\",\n        });\n      }\n    }\n\n    let timeout;\n    if (status === \"server-basket-is-stale\") {\n      timeout = setTimeout(getServerBasket, 250);\n    }\n\n    return () => {\n      stale = true;\n      clearTimeout(timeout);\n    };\n  }, [status, locale.crystallizeCatalogueLanguage, basketModel]);\n\n  function dispatchCartItemAction(action) {\n    return (data) => dispatch({ action, ...data });\n  }\n\n  function withLocalState(item) {\n    // Exclude voucher codes\n    if (item.sku.startsWith(\"--voucher--\")) {\n      return item;\n    }\n\n    const clientBasketCartItem = clientBasket.cart.find(\n      (c) => c.sku === item.sku\n    );\n\n    /**\n     * Don't show the cart item if it is not in\n     * the client cache.\n     **/\n    if (!clientBasketCartItem) {\n      return null;\n    }\n\n    return {\n      ...item,\n      quantity: clientBasketCartItem.quantity,\n    };\n  }\n\n  const cart = (serverBasket?.cart || []).map(withLocalState).filter(Boolean);\n\n  /**\n   * Something went wrong when fetching the basket from the Service API\n   * You should not show this feedback in production, and rather deal\n   * with Service API errors in a more smooth fashion\n   */\n  if (status === \"server-update-failed\") {\n    return (\n      <div style={{ margin: \"0 auto\", maxWidth: 400, padding: 50 }}>\n        Oh-uh. Something went wrong when getting data from the Service API\n        <br />\n        <br />\n        <button onClick={() => dispatch({ action: \"retry-server-update\" })}>\n          Try again\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <BasketContext.Provider\n      value={{\n        status,\n        basketModel,\n        cart,\n        total: serverBasket?.total || {},\n        totalQuantity,\n        attentionCartItem,\n        actions: {\n          addVoucherCode: (voucherCode) =>\n            dispatch({ action: \"add-voucher\", voucherCode }),\n          removeVoucherCode: () => dispatch({ action: \"remove-voucher\" }),\n          empty: () => dispatch({ action: \"empty\" }),\n          addItem: dispatchCartItemAction(\"add-item\"),\n          removeItem: dispatchCartItemAction(\"remove-item\"),\n          incrementItem: dispatchCartItemAction(\"increment-item\"),\n          decrementItem: dispatchCartItemAction(\"decrement-item\"),\n          drawAttention: (sku) => dispatch({ action: \"draw-attention\", sku }),\n          setCrystallizeOrderId: (crystallizeOrderId) =>\n            dispatch({\n              action: \"set-crystallize-order-id\",\n              crystallizeOrderId,\n            }),\n          setKlarnaOrderId: (klarnaOrderId) =>\n            dispatch({ action: \"set-klarna-order-id\", klarnaOrderId }),\n        },\n      }}\n    >\n      {children}\n    </BasketContext.Provider>\n  );\n}\n", "const cacheKey = 'app-basket';\n\nexport async function retrieveFromCache() {\n  try {\n    const cache = await localStorage.getItem(cacheKey);\n    if (cache) {\n      return JSON.parse(cache);\n    }\n  } catch (error) {\n    // We might not have access to localStorage\n  }\n  return {};\n}\n\nexport function persistToCache(data:any) {\n  try {\n    return localStorage.setItem(cacheKey, JSON.stringify(data));\n  } catch (error) {\n    // We might not have access to localStorage\n  }\n}\n", "import produce from 'immer';\n\nexport const initialState = {\n  status: 'not-hydrated',\n  /**\n   * A simplistic basket which gets stored on client side\n   * Each client cart item consists of these fields:\n   *  - sku\n   *  - path\n   *  - priceVariantIdentifier\n   *  - quantity\n   *  - stock\n   */\n  clientBasket: {\n    cart: [],\n    voucherCode: null,\n\n    /**\n     * In some cases we create an order in Crystallize before\n     * the checkout is completed. Currently, this is done for\n     * Klarna and Vipps payments\n     */\n    crystallizeOrderId: null,\n\n    /**\n     * Track unfinished Klarna order\n     * Only used if you're doing Klarna payments\n     */\n    klarnaOrderId: null\n  },\n\n  // The validated basket sent back from the Service API\n  serverBasket: null,\n\n  // The basket cart item to draw attention to\n  attentionCartItem: {}\n};\n\nexport default produce(function reducer(draft, { action, ...rest }) {\n  /**\n   * This flag helps keeping track of the incoming\n   * change is triggered by _this_ browser tab or a\n   * different browser tab\n   */\n  draft.changeTriggeredByOtherTab = false;\n  switch (action) {\n    case 'hydrate': {\n      if (draft.status === 'not-hydrated') {\n        if (rest.cart) {\n          draft.clientBasket = rest || initialState.clientBasket;\n\n          if (!draft.clientBasket.cart) {\n            draft.clientBasket.cart = initialState.clientBasket.cart;\n          }\n        }\n        draft.status = 'server-basket-is-stale';\n      }\n      break;\n    }\n\n    case 'channel-update': {\n      draft.clientBasket = rest.clientBasket;\n      draft.serverBasket = rest.serverBasket;\n      draft.changeTriggeredByOtherTab = true;\n      draft.status = 'ready';\n      break;\n    }\n\n    case 'set-crystallize-order-id': {\n      draft.clientBasket.crystallizeOrderId = rest.crystallizeOrderId;\n      break;\n    }\n\n    case 'set-klarna-order-id': {\n      draft.clientBasket.klarnaOrderId = rest.klarnaOrderId;\n      break;\n    }\n\n    case 'server-update-failed': {\n      draft.status = 'server-update-failed';\n      break;\n    }\n\n    case 'retry-server-update': {\n      draft.status = 'server-basket-is-stale';\n      break;\n    }\n\n    case 'empty': {\n      draft.clientBasket = initialState.clientBasket;\n      draft.status = 'server-basket-is-stale';\n      break;\n    }\n\n    case 'add-item':\n    case 'remove-item':\n    case 'increment-item':\n    case 'decrement-item': {\n      const { id, sku, path, priceVariantIdentifier = 'default', stock } = rest;\n\n      if (!sku || !path) {\n        throw new Error(`Please provide \"sku\" and \"path\" for ${action}`);\n      }\n\n      const itemIndex = draft.clientBasket.cart.findIndex((i) => i.sku === sku);\n\n      if (itemIndex !== -1) {\n        if (action === 'remove-item') {\n          draft.clientBasket.cart.splice(itemIndex, 1);\n        } else {\n          const item = draft.clientBasket.cart[itemIndex];\n\n          if (action === 'decrement-item') {\n            item.quantity -= 1;\n          } else {\n            item.quantity += 1;\n          }\n        }\n      } else {\n        if (!['remove-item', 'decrement-item'].includes(action)) {\n          draft.clientBasket.cart.push({\n            id,\n            sku,\n            path,\n            priceVariantIdentifier,\n            quantity: 1,\n            stock\n          });\n        }\n      }\n\n      draft.status = 'server-basket-is-stale';\n\n      break;\n    }\n\n    case 'set-server-basket': {\n      draft.serverBasket = rest.serverBasket;\n      draft.status = 'ready';\n\n      /**\n       * If running against the Service API demo, we can only\n       * add products that are registered for the demo Crystallize\n       * tenant, furniture.\n       */\n      if (\n        window.ENV.NEXT_PUBLIC_CRYSTALLIZE_TENANT_IDENTIFIER !== 'furniture' &&\n        window.ENV.SERVICE_API_URL ===\n          'https://remix-service-api.vercel.app/api/graphql'\n      ) {\n        draft.clientBasket.cart = draft.serverBasket.cart.map(\n          ({ id, sku, path, quantity, stock }) => ({\n            id,\n            sku,\n            path,\n            quantity,\n            priceVariantIdentifier: 'default',\n            stock\n          })\n        );\n      }\n\n      break;\n    }\n\n    case 'draw-attention': {\n      draft.attentionCartItem = {\n        time: Date.now(),\n        sku: rest.sku\n      };\n      break;\n    }\n\n    case 'add-voucher': {\n      draft.clientBasket.voucherCode = rest.voucherCode;\n      draft.status = 'server-basket-is-stale';\n      break;\n    }\n\n    case 'remove-voucher': {\n      draft.clientBasket.voucherCode = initialState.clientBasket.voucherCode;\n      draft.status = 'server-basket-is-stale';\n      break;\n    }\n\n    default: {\n      throw new Error(`Action ${action} not supported`);\n    }\n  }\n\n  // A cart item is only valid if we have path and sku\n  if (draft.clientBasket.cart.length > 0) {\n    draft.clientBasket.cart = draft.clientBasket.cart.filter(\n      function validateCartItem({ path, sku }) {\n        return path && sku;\n      }\n    );\n  }\n\n  draft.totalQuantity = draft.clientBasket.cart.reduce(\n    (acc, c) => acc + c.quantity,\n    0\n  );\n});\n", "/**\n * Share basket state across tabs/iframes for browsers\n * that support that\n * https://caniuse.com/#feat=broadcastchannel\n */\n\nlet channel;\n\nif (typeof window !== 'undefined' && 'BroadcastChannel' in window) {\n  channel = new BroadcastChannel('app_basket');\n}\n\nexport function getChannel() {\n  return channel;\n}\n", "const GET_BASKET_QUERY = `\n  query getServerBasket($basketModel: BasketModelInput!) {\n    basket(basketModel: $basketModel) {\n      total {\n        gross\n        net\n        tax {\n          name\n          percent\n        }\n        currency\n        discount\n      }\n      cart {\n        sku\n        name\n        path\n        quantity\n        attributes {\n          attribute\n          value\n        }\n        price {\n          gross\n          currency\n        }\n        images {\n          url\n          variants {\n            url\n            width\n            height\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default GET_BASKET_QUERY;\n", "export default async function serviceApi({\n  uri = `https://remix-service-api.vercel.app/api/graphql`,\n  query,\n  variables,\n}) {\n  const body = JSON.stringify({ query, variables });\n\n  const response = await fetch(uri, {\n    method: \"post\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body,\n  });\n\n  if (!response.ok) {\n    throw new Error(await response.text());\n  }\n\n  const json = await response.json();\n\n  if (json.errors) {\n    console.error(\"Service API encountered an error\", json.errors);\n  }\n\n  return json;\n}\n", "export const locale = {\n  locale: \"en\",\n  displayName: \"English - US\",\n  appLanguage: \"en-US\",\n  crystallizeCatalogueLanguage: \"en\",\n  crystallizePriceVariant: \"default\",\n};\n", "import { useBasket } from \"./index\";\nimport { ShoppingBagIcon } from '@heroicons/react/20/solid'\n\nexport const BasketButton = () => {\n  let totalQuantity;\n  const basket = useBasket();\n\n  if (basket) {\n    totalQuantity = basket.totalQuantity;\n  } else {\n    totalQuantity = \"0\";\n  }\n\n  return (\n    <div className=\"relative\">\n      <svg\n        width=\"35\"\n        height=\"30\"\n        viewBox=\"0 0 46 41\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M39.5255 7.38001H24.4309C23.8251 7.38001 23.2441 7.59599 22.8157 7.98044C22.3873 8.36489 22.1467 8.88631 22.1467 9.43C22.1467 9.9737 22.3873 10.4951 22.8157 10.8796C23.2441 11.264 23.8251 11.48 24.4309 11.48H39.5255C39.7149 11.4785 39.9025 11.5146 40.0746 11.5856C40.2468 11.6566 40.3994 11.7608 40.5216 11.8908C40.6438 12.0207 40.7325 12.1733 40.7814 12.3376C40.8303 12.5019 40.8383 12.6738 40.8047 12.8412L37.3417 27.7406C37.29 28.0092 37.1342 28.2528 36.9018 28.4284C36.6694 28.6039 36.3754 28.7001 36.0716 28.7H21.2695C20.9657 28.7001 20.6717 28.6039 20.4393 28.4284C20.2069 28.2528 20.0511 28.0092 19.9994 27.7406L14.9466 1.64001C14.8448 1.17693 14.5667 0.760047 14.1599 0.46083C13.7532 0.161613 13.2431 -0.00130406 12.7171 7.86192e-06H2.28254C1.93447 0.000245256 1.59105 0.0718674 1.27853 0.209404C0.96601 0.346941 0.692643 0.546755 0.479311 0.793586C0.265979 1.04042 0.118323 1.32774 0.0476204 1.6336C-0.0230824 1.93947 -0.0149621 2.25579 0.0713611 2.55841C0.210204 3.01137 0.514338 3.40944 0.935098 3.68893C1.35586 3.96842 1.86892 4.11316 2.39219 4.10001H10.8532L15.5314 28.4376C15.7668 29.6528 16.4703 30.7553 17.519 31.5526C18.5677 32.3498 19.8951 32.7913 21.2695 32.8H36.0716C37.4523 32.799 38.7884 32.361 39.8446 31.5631C40.9009 30.7651 41.6097 29.6584 41.8463 28.4376L45.3093 13.53C45.4529 12.7745 45.411 12 45.1866 11.2606C44.9621 10.5212 44.5604 9.83463 44.0096 9.24896C43.4588 8.66329 42.7722 8.19261 41.9977 7.86979C41.2231 7.54698 40.3794 7.37983 39.5255 7.38001V7.38001Z\"\n          fill=\"#373567\"\n        />\n        <path\n          d=\"M33.2367 18.8599C33.8425 18.8599 34.4235 18.6439 34.8519 18.2595C35.2803 17.875 35.521 17.3536 35.521 16.8099C35.521 16.2662 35.2803 15.7448 34.8519 15.3603C34.4235 14.9759 33.8425 14.7599 33.2367 14.7599H25.927C25.3212 14.7599 24.7401 14.9759 24.3118 15.3603C23.8834 15.7448 23.6427 16.2662 23.6427 16.8099C23.6427 17.3536 23.8834 17.875 24.3118 18.2595C24.7401 18.6439 25.3212 18.8599 25.927 18.8599H33.2367Z\"\n          fill=\"#373567\"\n        />\n        <path\n          d=\"M22.2723 41.0001C24.0385 41.0001 25.4703 39.7152 25.4703 38.1301C25.4703 36.5451 24.0385 35.2601 22.2723 35.2601C20.5061 35.2601 19.0743 36.5451 19.0743 38.1301C19.0743 39.7152 20.5061 41.0001 22.2723 41.0001Z\"\n          fill=\"#373567\"\n        />\n        <path\n          d=\"M35.0643 41.0001C36.8305 41.0001 38.2623 39.7152 38.2623 38.1301C38.2623 36.5451 36.8305 35.2601 35.0643 35.2601C33.2981 35.2601 31.8663 36.5451 31.8663 38.1301C31.8663 39.7152 33.2981 41.0001 35.0643 41.0001Z\"\n          fill=\"#373567\"\n        />\n      </svg>\n\n      <div className=\"w-4 h-4 absolute bg-text rounded-full text-primary text-center -right-2 -top-2 text-xs\">\n        {totalQuantity}\n      </div>\n    </div>\n  );\n};", "import { Link } from \"remix\";\nimport Error from \"../../assets/error.svg\";\nimport React from \"react\";\n\nexport const ErrorComponent = () => {\n  return (\n    <div className=\"lg:w-content w-full mx-auto flex flex-col mt-20 gap-5 items-center justify-center\">\n      <img src={`${Error}`} />\n      <p className=\"text-text text-center\">\u041F\u043E\u0445\u043E\u0436\u0435 \u044D\u0442\u043E \u043D\u0435 \u0442\u0430 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0430.</p>\n      <Link prefetch=\"intent\" to=\"/\" className=\"bg-white font-semibold px-5 py-3 w-60 text-center\">\n        \u041D\u0430 \u0433\u043B\u0430\u0432\u043D\u0443\u044E\n      </Link>\n    </div>\n  );\n};\n", "import { serviceAPIClient } from \"../../clients\";\nimport {\n  GetOrderDocument,\n  GetOrderQuery,\n  GetOrderQueryVariables,\n} from \"../../service-api/get-order.generated\";\nimport { LoaderFunction, useLoaderData } from \"remix\";\nimport Confirmation from \"../../components/confirmation\";\nimport React from \"react\";\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const data = await serviceAPIClient.request<\n    GetOrderQuery,\n    GetOrderQueryVariables\n  >(GetOrderDocument, { id: params.orderId as string });\n\n  return { data };\n};\n\nexport const ConfirmationInvoice = () => {\n  const data = useLoaderData();\n  const order = data.data?.orders?.get;\n\n  return (\n    <div>\n      {order ? (\n        <Confirmation order={order} success={true} />\n      ) : (\n        <div className=\"w-auth p-20 bg-background3 mx-auto mt-20 text-text\">\n          <p>\u0417\u0430\u043A\u0430\u0437 \u043E\u0444\u043E\u0440\u043C\u043B\u044F\u0435\u0442\u0441\u044F... \u041E\u0431\u043D\u043E\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ConfirmationInvoice;\n", "import { GraphQLClient } from \"graphql-request\";\n\nconst CATALOGUE_API_URL = `https://api.crystallize.com/tsvetochki-test/catalogue`;\n\nexport const catalogueClient = new GraphQLClient(CATALOGUE_API_URL);\n\n// Service API\n// https://crystallize.com/learn/open-source/boilerplates/service-api\nexport const serviceAPIClient = new GraphQLClient(\n    `https://remix-service-api.vercel.app/api/graphql`,\n    {\n      credentials: \"include\",\n      mode: \"cors\",\n    }\n  );", "import * as Types from './types.generated';\n\nimport { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nexport type GetOrderQueryVariables = Types.Exact<{\n  id: Types.Scalars['String'];\n}>;\n\n\nexport type GetOrderQuery = (\n  { __typename?: 'Query' }\n  & { orders: (\n    { __typename?: 'OrderQueries' }\n    & Pick<Types.OrderQueries, 'get'>\n  ) }\n);\n\n\nexport const GetOrderDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GetOrder\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"orders\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"get\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}]}]}}]}}]} as unknown as DocumentNode<GetOrderQuery, GetOrderQueryVariables>;", "import { useEffect } from \"react\";\nimport { useBasket } from \"./basket\";\nimport React from \"react\";\n\nexport default function Confirmation({ order, success }) {\n  const basket = useBasket();\n\n  if (success) {\n    basket.actions.empty();\n  }\n\n  useEffect(() => {\n    if (!order) {\n      const t = setTimeout(() => window.location.reload(), 5000);\n\n      return () => clearTimeout(t);\n    }\n  }, [order]);\n\n  if (!order) {\n    return <p>\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430...</p>;\n  }\n\n  const cart = order.cart.map((item) => ({\n    ...item,\n    image: {\n      url: item.imageUrl,\n    },\n  }));\n\n  const { total } = order;\n\n  return (\n    <div className=\"w-auto md:w-128 lg:w-128 p-10 bg-background3 mx-auto mt-20 text-text\">\n      <div>\n        <h1 className=\"font-bold text-3xl mb-6\">\u0417\u0430\u043A\u0430\u0437 \u043F\u0440\u0438\u043D\u044F\u0442</h1>\n        <p className=\"mb-5\">\u041C\u044B \u0443\u0436\u0435 \u043F\u043E\u043B\u0443\u0447\u0438\u043B\u0438 \u0432\u0430\u0448 \u0437\u0430\u043A\u0430\u0437 \u2116{order.id}.</p>\n        <div>\n          {cart.map((item, index) => {\n            return (\n              <div key={index} className=\"flex justify-between mb-4\">\n                <div>\n                  <p>\n                    {item.name} x {item.quantity}\n                  </p>\n                </div>\n                <p>${item.price.gross * item.quantity}</p>\n              </div>\n            );\n          })}\n          <div className=\"flex flex-col gap-3 border-t-2 pt-5\">\n            <div className=\"flex justify-between\">\n              <p>\u0421\u0443\u043C\u043C\u0430</p>\n              <p>${total.gross}</p>\n            </div>\n            <div className=\"flex justify-between\">\n              <p>\u0414\u043E\u0441\u0442\u0430\u0432\u043A\u0430</p>\n              <p>${total.net - total.gross}</p>\n            </div>\n            <div className=\"flex justify-between\">\n              <p className=\"font-bold\">\u0418\u0442\u043E\u0433\u043E</p>\n              <p>${total.net}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { useLoaderData, json, LoaderFunction, MetaFunction } from \"remix\";\nimport { catalogueClient } from \"../../clients\";\nimport {\n  ProductDocument,\n  ProductQuery,\n} from \"../../crystallize/queries/product.generated\";\nimport { normalizeDocumentNode } from \"../../crystallize/utils/normalizeDocumentNode\";\nimport { Product } from \"../../components/product\";\nimport { componentContent } from \"../../crystallize/utils/componentContent\";\nimport { HttpCacheHeaderTagger } from \"~/http-cache-header-tagger\";\nimport React from \"react\";\n\nexport let loader: LoaderFunction = async ({ params, request }) => {\n  const url = new URL(request.url);\n  // for the preview mode, if the query parameter preview=true is present, ask for the draft version\n  const preview = url.searchParams.get(\"preview\");\n  const version = preview ? \"draft\" : \"published\";\n  const path = \"/shop/\" + params.product;\n  const data = await catalogueClient.request<ProductQuery>(\n    normalizeDocumentNode(ProductDocument),\n    { path, version }\n  );\n\n  return json(\n    { ...data, path },\n    HttpCacheHeaderTagger(\"30s\", \"1w\", [\"product\", \"product-\" + params.product])\n  );\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n  let { product } = data;\n  let description = componentContent(\n    product?.summary?.content,\n    \"RichTextContent\"\n  )?.plainText[0];\n  let image = product?.defaultVariant?.firstImage.url;\n\n  return {\n    title: `${product?.name} | Dounut`,\n    description: `${description}`,\n    \"og:description\": `${description}`,\n    \"og:image\": `${image}`,\n  };\n};\n\nexport function headers() {\n  return HttpCacheHeaderTagger(\"1m\", \"1w\", [\"product\", \"product-index\"])\n    .headers;\n}\n\nexport default function Index() {\n  let data = useLoaderData();\n\n  return (\n    <div>\n      <Product product={data.product} />\n    </div>\n  );\n}\n", "import * as Types from '../types.generated';\n\nimport { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nexport type Content_BooleanContent_Fragment = (\n  { __typename: 'BooleanContent' }\n  & Pick<Types.BooleanContent, 'value'>\n);\n\nexport type Content_ComponentChoiceContent_Fragment = { __typename?: 'ComponentChoiceContent' };\n\nexport type Content_ContentChunkContent_Fragment = { __typename?: 'ContentChunkContent' };\n\nexport type Content_DatetimeContent_Fragment = (\n  { __typename: 'DatetimeContent' }\n  & Pick<Types.DatetimeContent, 'datetime'>\n);\n\nexport type Content_FileContent_Fragment = { __typename?: 'FileContent' };\n\nexport type Content_GridRelationsContent_Fragment = { __typename?: 'GridRelationsContent' };\n\nexport type Content_ImageContent_Fragment = (\n  { __typename: 'ImageContent' }\n  & { images?: Types.Maybe<Array<(\n    { __typename: 'Image' }\n    & Pick<Types.Image, 'url' | 'altText' | 'key'>\n    & { variants?: Types.Maybe<Array<(\n      { __typename?: 'ImageVariant' }\n      & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n    )>> }\n  )>> }\n);\n\nexport type Content_ItemRelationsContent_Fragment = { __typename?: 'ItemRelationsContent' };\n\nexport type Content_LocationContent_Fragment = (\n  { __typename: 'LocationContent' }\n  & Pick<Types.LocationContent, 'lat' | 'long'>\n);\n\nexport type Content_NumericContent_Fragment = (\n  { __typename: 'NumericContent' }\n  & Pick<Types.NumericContent, 'number' | 'unit'>\n);\n\nexport type Content_ParagraphCollectionContent_Fragment = (\n  { __typename: 'ParagraphCollectionContent' }\n  & { paragraphs?: Types.Maybe<Array<(\n    { __typename?: 'ParagraphContent' }\n    & { title?: Types.Maybe<(\n      { __typename: 'SingleLineContent' }\n      & Pick<Types.SingleLineContent, 'text'>\n    )>, body?: Types.Maybe<(\n      { __typename: 'RichTextContent' }\n      & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n    )>, images?: Types.Maybe<Array<(\n      { __typename: 'Image' }\n      & Pick<Types.Image, 'url' | 'altText' | 'key'>\n      & { caption?: Types.Maybe<(\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      )>, variants?: Types.Maybe<Array<(\n        { __typename?: 'ImageVariant' }\n        & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n      )>> }\n    )>>, videos?: Types.Maybe<Array<(\n      { __typename?: 'Video' }\n      & Pick<Types.Video, 'title' | 'playlists'>\n      & { thumbnails?: Types.Maybe<Array<(\n        { __typename: 'Image' }\n        & Pick<Types.Image, 'url' | 'altText' | 'key'>\n        & { caption?: Types.Maybe<(\n          { __typename: 'RichTextContent' }\n          & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n        )>, variants?: Types.Maybe<Array<(\n          { __typename?: 'ImageVariant' }\n          & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n        )>> }\n      )>> }\n    )>> }\n  )>> }\n);\n\nexport type Content_PropertiesTableContent_Fragment = (\n  { __typename: 'PropertiesTableContent' }\n  & { sections?: Types.Maybe<Array<(\n    { __typename: 'PropertiesTableSection' }\n    & Pick<Types.PropertiesTableSection, 'title'>\n    & { properties?: Types.Maybe<Array<(\n      { __typename?: 'PropertiesTableValue' }\n      & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n    )>> }\n  )>> }\n);\n\nexport type Content_RichTextContent_Fragment = (\n  { __typename: 'RichTextContent' }\n  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n);\n\nexport type Content_SelectionContent_Fragment = (\n  { __typename: 'SelectionContent' }\n  & { options?: Types.Maybe<Array<(\n    { __typename?: 'SelectionComponentOption' }\n    & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n  )>> }\n);\n\nexport type Content_SingleLineContent_Fragment = (\n  { __typename: 'SingleLineContent' }\n  & Pick<Types.SingleLineContent, 'text'>\n);\n\nexport type Content_VideoContent_Fragment = (\n  { __typename: 'VideoContent' }\n  & { videos?: Types.Maybe<Array<(\n    { __typename: 'Video' }\n    & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n    & { thumbnails?: Types.Maybe<Array<(\n      { __typename: 'Image' }\n      & Pick<Types.Image, 'url' | 'altText' | 'key'>\n      & { variants?: Types.Maybe<Array<(\n        { __typename?: 'ImageVariant' }\n        & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n      )>> }\n    )>> }\n  )>> }\n);\n\nexport type ContentFragment = Content_BooleanContent_Fragment | Content_ComponentChoiceContent_Fragment | Content_ContentChunkContent_Fragment | Content_DatetimeContent_Fragment | Content_FileContent_Fragment | Content_GridRelationsContent_Fragment | Content_ImageContent_Fragment | Content_ItemRelationsContent_Fragment | Content_LocationContent_Fragment | Content_NumericContent_Fragment | Content_ParagraphCollectionContent_Fragment | Content_PropertiesTableContent_Fragment | Content_RichTextContent_Fragment | Content_SelectionContent_Fragment | Content_SingleLineContent_Fragment | Content_VideoContent_Fragment;\n\nexport type ContentChunkFragment = (\n  { __typename: 'ContentChunkContent' }\n  & { chunks: Array<Array<(\n    { __typename?: 'Component' }\n    & { content?: Types.Maybe<(\n      { __typename: 'BooleanContent' }\n      & Pick<Types.BooleanContent, 'value'>\n    ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n      { __typename: 'DatetimeContent' }\n      & Pick<Types.DatetimeContent, 'datetime'>\n    ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n      { __typename: 'ImageContent' }\n      & { images?: Types.Maybe<Array<(\n        { __typename: 'Image' }\n        & Pick<Types.Image, 'url' | 'altText' | 'key'>\n        & { variants?: Types.Maybe<Array<(\n          { __typename?: 'ImageVariant' }\n          & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n        )>> }\n      )>> }\n    ) | { __typename?: 'ItemRelationsContent' } | (\n      { __typename: 'LocationContent' }\n      & Pick<Types.LocationContent, 'lat' | 'long'>\n    ) | (\n      { __typename: 'NumericContent' }\n      & Pick<Types.NumericContent, 'number' | 'unit'>\n    ) | (\n      { __typename: 'ParagraphCollectionContent' }\n      & { paragraphs?: Types.Maybe<Array<(\n        { __typename?: 'ParagraphContent' }\n        & { title?: Types.Maybe<(\n          { __typename: 'SingleLineContent' }\n          & Pick<Types.SingleLineContent, 'text'>\n        )>, body?: Types.Maybe<(\n          { __typename: 'RichTextContent' }\n          & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n        )>, images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { caption?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>>, videos?: Types.Maybe<Array<(\n          { __typename?: 'Video' }\n          & Pick<Types.Video, 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )>> }\n    ) | (\n      { __typename: 'PropertiesTableContent' }\n      & { sections?: Types.Maybe<Array<(\n        { __typename: 'PropertiesTableSection' }\n        & Pick<Types.PropertiesTableSection, 'title'>\n        & { properties?: Types.Maybe<Array<(\n          { __typename?: 'PropertiesTableValue' }\n          & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n        )>> }\n      )>> }\n    ) | (\n      { __typename: 'RichTextContent' }\n      & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n    ) | (\n      { __typename: 'SelectionContent' }\n      & { options?: Types.Maybe<Array<(\n        { __typename?: 'SelectionComponentOption' }\n        & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n      )>> }\n    ) | (\n      { __typename: 'SingleLineContent' }\n      & Pick<Types.SingleLineContent, 'text'>\n    ) | (\n      { __typename: 'VideoContent' }\n      & { videos?: Types.Maybe<Array<(\n        { __typename: 'Video' }\n        & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n        & { thumbnails?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      )>> }\n    )> }\n  )>> }\n);\n\nexport type ComponentFragment = (\n  { __typename: 'Component' }\n  & { content?: Types.Maybe<(\n    { __typename: 'BooleanContent' }\n    & Pick<Types.BooleanContent, 'value'>\n  ) | { __typename?: 'ComponentChoiceContent' } | (\n    { __typename: 'ContentChunkContent' }\n    & { chunks: Array<Array<(\n      { __typename?: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>> }\n  ) | (\n    { __typename: 'DatetimeContent' }\n    & Pick<Types.DatetimeContent, 'datetime'>\n  ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n    { __typename: 'ImageContent' }\n    & { images?: Types.Maybe<Array<(\n      { __typename: 'Image' }\n      & Pick<Types.Image, 'url' | 'altText' | 'key'>\n      & { variants?: Types.Maybe<Array<(\n        { __typename?: 'ImageVariant' }\n        & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n      )>> }\n    )>> }\n  ) | { __typename?: 'ItemRelationsContent' } | (\n    { __typename: 'LocationContent' }\n    & Pick<Types.LocationContent, 'lat' | 'long'>\n  ) | (\n    { __typename: 'NumericContent' }\n    & Pick<Types.NumericContent, 'number' | 'unit'>\n  ) | (\n    { __typename: 'ParagraphCollectionContent' }\n    & { paragraphs?: Types.Maybe<Array<(\n      { __typename?: 'ParagraphContent' }\n      & { title?: Types.Maybe<(\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      )>, body?: Types.Maybe<(\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      )>, images?: Types.Maybe<Array<(\n        { __typename: 'Image' }\n        & Pick<Types.Image, 'url' | 'altText' | 'key'>\n        & { caption?: Types.Maybe<(\n          { __typename: 'RichTextContent' }\n          & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n        )>, variants?: Types.Maybe<Array<(\n          { __typename?: 'ImageVariant' }\n          & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n        )>> }\n      )>>, videos?: Types.Maybe<Array<(\n        { __typename?: 'Video' }\n        & Pick<Types.Video, 'title' | 'playlists'>\n        & { thumbnails?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { caption?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      )>> }\n    )>> }\n  ) | (\n    { __typename: 'PropertiesTableContent' }\n    & { sections?: Types.Maybe<Array<(\n      { __typename: 'PropertiesTableSection' }\n      & Pick<Types.PropertiesTableSection, 'title'>\n      & { properties?: Types.Maybe<Array<(\n        { __typename?: 'PropertiesTableValue' }\n        & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n      )>> }\n    )>> }\n  ) | (\n    { __typename: 'RichTextContent' }\n    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n  ) | (\n    { __typename: 'SelectionContent' }\n    & { options?: Types.Maybe<Array<(\n      { __typename?: 'SelectionComponentOption' }\n      & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n    )>> }\n  ) | (\n    { __typename: 'SingleLineContent' }\n    & Pick<Types.SingleLineContent, 'text'>\n  ) | (\n    { __typename: 'VideoContent' }\n    & { videos?: Types.Maybe<Array<(\n      { __typename: 'Video' }\n      & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n      & { thumbnails?: Types.Maybe<Array<(\n        { __typename: 'Image' }\n        & Pick<Types.Image, 'url' | 'altText' | 'key'>\n        & { variants?: Types.Maybe<Array<(\n          { __typename?: 'ImageVariant' }\n          & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n        )>> }\n      )>> }\n    )>> }\n  )> }\n);\n\nexport type SingleLineFragment = (\n  { __typename: 'SingleLineContent' }\n  & Pick<Types.SingleLineContent, 'text'>\n);\n\nexport type RichTextFragment = (\n  { __typename: 'RichTextContent' }\n  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n);\n\nexport type BooleanFragment = (\n  { __typename: 'BooleanContent' }\n  & Pick<Types.BooleanContent, 'value'>\n);\n\nexport type NumericFragment = (\n  { __typename: 'NumericContent' }\n  & Pick<Types.NumericContent, 'number' | 'unit'>\n);\n\nexport type LocationFragment = (\n  { __typename: 'LocationContent' }\n  & Pick<Types.LocationContent, 'lat' | 'long'>\n);\n\nexport type DateTimeFragment = (\n  { __typename: 'DatetimeContent' }\n  & Pick<Types.DatetimeContent, 'datetime'>\n);\n\nexport type SelectionFragment = (\n  { __typename: 'SelectionContent' }\n  & { options?: Types.Maybe<Array<(\n    { __typename?: 'SelectionComponentOption' }\n    & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n  )>> }\n);\n\nexport type ImagesFragment = (\n  { __typename: 'ImageContent' }\n  & { images?: Types.Maybe<Array<(\n    { __typename: 'Image' }\n    & Pick<Types.Image, 'url' | 'altText' | 'key'>\n    & { variants?: Types.Maybe<Array<(\n      { __typename?: 'ImageVariant' }\n      & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n    )>> }\n  )>> }\n);\n\nexport type ImageFragment = (\n  { __typename: 'Image' }\n  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n  & { variants?: Types.Maybe<Array<(\n    { __typename?: 'ImageVariant' }\n    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n  )>> }\n);\n\nexport type VideosFragment = (\n  { __typename: 'VideoContent' }\n  & { videos?: Types.Maybe<Array<(\n    { __typename: 'Video' }\n    & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n    & { thumbnails?: Types.Maybe<Array<(\n      { __typename: 'Image' }\n      & Pick<Types.Image, 'url' | 'altText' | 'key'>\n      & { variants?: Types.Maybe<Array<(\n        { __typename?: 'ImageVariant' }\n        & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n      )>> }\n    )>> }\n  )>> }\n);\n\nexport type VideoFragment = (\n  { __typename: 'Video' }\n  & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n  & { thumbnails?: Types.Maybe<Array<(\n    { __typename: 'Image' }\n    & Pick<Types.Image, 'url' | 'altText' | 'key'>\n    & { variants?: Types.Maybe<Array<(\n      { __typename?: 'ImageVariant' }\n      & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n    )>> }\n  )>> }\n);\n\nexport type ParagraphCollectionFragment = (\n  { __typename: 'ParagraphCollectionContent' }\n  & { paragraphs?: Types.Maybe<Array<(\n    { __typename?: 'ParagraphContent' }\n    & { title?: Types.Maybe<(\n      { __typename: 'SingleLineContent' }\n      & Pick<Types.SingleLineContent, 'text'>\n    )>, body?: Types.Maybe<(\n      { __typename: 'RichTextContent' }\n      & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n    )>, images?: Types.Maybe<Array<(\n      { __typename: 'Image' }\n      & Pick<Types.Image, 'url' | 'altText' | 'key'>\n      & { caption?: Types.Maybe<(\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      )>, variants?: Types.Maybe<Array<(\n        { __typename?: 'ImageVariant' }\n        & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n      )>> }\n    )>>, videos?: Types.Maybe<Array<(\n      { __typename?: 'Video' }\n      & Pick<Types.Video, 'title' | 'playlists'>\n      & { thumbnails?: Types.Maybe<Array<(\n        { __typename: 'Image' }\n        & Pick<Types.Image, 'url' | 'altText' | 'key'>\n        & { caption?: Types.Maybe<(\n          { __typename: 'RichTextContent' }\n          & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n        )>, variants?: Types.Maybe<Array<(\n          { __typename?: 'ImageVariant' }\n          & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n        )>> }\n      )>> }\n    )>> }\n  )>> }\n);\n\nexport type PropertiesTableFragment = (\n  { __typename: 'PropertiesTableContent' }\n  & { sections?: Types.Maybe<Array<(\n    { __typename: 'PropertiesTableSection' }\n    & Pick<Types.PropertiesTableSection, 'title'>\n    & { properties?: Types.Maybe<Array<(\n      { __typename?: 'PropertiesTableValue' }\n      & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n    )>> }\n  )>> }\n);\n\nexport const SingleLineFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"singleLine\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"SingleLineContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"text\"}}]}}]} as unknown as DocumentNode<SingleLineFragment, unknown>;\nexport const RichTextFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"richText\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"RichTextContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"json\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"html\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"plainText\"}}]}}]} as unknown as DocumentNode<RichTextFragment, unknown>;\nexport const BooleanFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"boolean\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"BooleanContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"}}]}}]} as unknown as DocumentNode<BooleanFragment, unknown>;\nexport const NumericFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"numeric\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"NumericContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"number\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"unit\"}}]}}]} as unknown as DocumentNode<NumericFragment, unknown>;\nexport const LocationFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"location\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"LocationContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lat\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"long\"}}]}}]} as unknown as DocumentNode<LocationFragment, unknown>;\nexport const DateTimeFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"dateTime\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"DatetimeContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"datetime\"}}]}}]} as unknown as DocumentNode<DateTimeFragment, unknown>;\nexport const SelectionFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"selection\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"SelectionContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"options\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"}}]}}]}}]} as unknown as DocumentNode<SelectionFragment, unknown>;\nexport const ImageFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"image\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Image\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"altText\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"variants\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"width\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"height\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"size\"}}]}}]}}]} as unknown as DocumentNode<ImageFragment, unknown>;\nexport const ImagesFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"images\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ImageContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"images\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"image\"}}]}}]}},...ImageFragmentDoc.definitions]} as unknown as DocumentNode<ImagesFragment, unknown>;\nexport const VideoFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"video\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Video\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"playlists\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"thumbnails\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"image\"}}]}}]}},...ImageFragmentDoc.definitions]} as unknown as DocumentNode<VideoFragment, unknown>;\nexport const VideosFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"videos\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"VideoContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"videos\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"video\"}}]}}]}},...VideoFragmentDoc.definitions]} as unknown as DocumentNode<VideosFragment, unknown>;\nexport const ParagraphCollectionFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"paragraphCollection\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ParagraphCollectionContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"paragraphs\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"singleLine\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"body\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"richText\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"images\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"image\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"caption\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"richText\"}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"videos\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"playlists\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"thumbnails\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"image\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"caption\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"richText\"}}]}}]}}]}}]}}]}},...SingleLineFragmentDoc.definitions,...RichTextFragmentDoc.definitions,...ImageFragmentDoc.definitions]} as unknown as DocumentNode<ParagraphCollectionFragment, unknown>;\nexport const PropertiesTableFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"propertiesTable\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PropertiesTableContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"sections\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PropertiesTableSection\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"properties\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"}}]}}]}}]}}]}}]} as unknown as DocumentNode<PropertiesTableFragment, unknown>;\nexport const ContentFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"content\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ComponentContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"singleLine\"}},{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"richText\"}},{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"boolean\"}},{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"numeric\"}},{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"location\"}},{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"dateTime\"}},{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"selection\"}},{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"images\"}},{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"videos\"}},{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"paragraphCollection\"}},{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"propertiesTable\"}}]}},...SingleLineFragmentDoc.definitions,...RichTextFragmentDoc.definitions,...BooleanFragmentDoc.definitions,...NumericFragmentDoc.definitions,...LocationFragmentDoc.definitions,...DateTimeFragmentDoc.definitions,...SelectionFragmentDoc.definitions,...ImagesFragmentDoc.definitions,...VideosFragmentDoc.definitions,...ParagraphCollectionFragmentDoc.definitions,...PropertiesTableFragmentDoc.definitions]} as unknown as DocumentNode<ContentFragment, unknown>;\nexport const ContentChunkFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"contentChunk\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ContentChunkContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"chunks\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"content\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"content\"}}]}}]}}]}},...ContentFragmentDoc.definitions]} as unknown as DocumentNode<ContentChunkFragment, unknown>;\nexport const ComponentFragmentDoc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"component\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Component\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"content\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"content\"}},{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"contentChunk\"}}]}}]}},...ContentFragmentDoc.definitions,...ContentChunkFragmentDoc.definitions]} as unknown as DocumentNode<ComponentFragment, unknown>;", "import * as Types from '../types.generated';\n\nimport { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nimport { ComponentFragmentDoc, BooleanFragmentDoc, ImageFragmentDoc } from '../fragments/content.generated';\nexport type ProductQueryVariables = Types.Exact<{\n  path: Types.Scalars['String'];\n  version?: Types.InputMaybe<Types.VersionLabel>;\n}>;\n\n\nexport type ProductQuery = (\n  { __typename?: 'Query' }\n  & { product?: Types.Maybe<(\n    { __typename?: 'Document' }\n    & { summary?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, body?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, table?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, related?: Types.Maybe<(\n      { __typename?: 'Component' }\n      & { content?: Types.Maybe<{ __typename: 'BooleanContent' } | { __typename: 'ComponentChoiceContent' } | { __typename: 'ContentChunkContent' } | { __typename: 'DatetimeContent' } | { __typename: 'FileContent' } | { __typename: 'GridRelationsContent' } | { __typename: 'ImageContent' } | (\n        { __typename: 'ItemRelationsContent' }\n        & { items?: Types.Maybe<Array<(\n          { __typename?: 'Document' }\n          & Pick<Types.Document, 'path' | 'name'>\n          & { topics?: Types.Maybe<Array<(\n            { __typename?: 'Topic' }\n            & Pick<Types.Topic, 'name'>\n          )>> }\n        ) | (\n          { __typename?: 'Folder' }\n          & Pick<Types.Folder, 'path' | 'name'>\n          & { topics?: Types.Maybe<Array<(\n            { __typename?: 'Topic' }\n            & Pick<Types.Topic, 'name'>\n          )>> }\n        ) | (\n          { __typename: 'Product' }\n          & Pick<Types.Product, 'path' | 'name'>\n          & { defaultVariant?: Types.Maybe<(\n            { __typename?: 'ProductVariant' }\n            & Pick<Types.ProductVariant, 'price'>\n            & { firstImage?: Types.Maybe<(\n              { __typename?: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )> }\n          )>, topics?: Types.Maybe<Array<(\n            { __typename?: 'Topic' }\n            & Pick<Types.Topic, 'name'>\n          )>> }\n        )>> }\n      ) | { __typename: 'LocationContent' } | { __typename: 'NumericContent' } | { __typename: 'ParagraphCollectionContent' } | { __typename: 'PropertiesTableContent' } | { __typename: 'RichTextContent' } | { __typename: 'SelectionContent' } | { __typename: 'SingleLineContent' } | { __typename: 'VideoContent' }> }\n    )> }\n  ) | (\n    { __typename?: 'Folder' }\n    & { summary?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, body?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, table?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, related?: Types.Maybe<(\n      { __typename?: 'Component' }\n      & { content?: Types.Maybe<{ __typename: 'BooleanContent' } | { __typename: 'ComponentChoiceContent' } | { __typename: 'ContentChunkContent' } | { __typename: 'DatetimeContent' } | { __typename: 'FileContent' } | { __typename: 'GridRelationsContent' } | { __typename: 'ImageContent' } | (\n        { __typename: 'ItemRelationsContent' }\n        & { items?: Types.Maybe<Array<(\n          { __typename?: 'Document' }\n          & Pick<Types.Document, 'path' | 'name'>\n          & { topics?: Types.Maybe<Array<(\n            { __typename?: 'Topic' }\n            & Pick<Types.Topic, 'name'>\n          )>> }\n        ) | (\n          { __typename?: 'Folder' }\n          & Pick<Types.Folder, 'path' | 'name'>\n          & { topics?: Types.Maybe<Array<(\n            { __typename?: 'Topic' }\n            & Pick<Types.Topic, 'name'>\n          )>> }\n        ) | (\n          { __typename: 'Product' }\n          & Pick<Types.Product, 'path' | 'name'>\n          & { defaultVariant?: Types.Maybe<(\n            { __typename?: 'ProductVariant' }\n            & Pick<Types.ProductVariant, 'price'>\n            & { firstImage?: Types.Maybe<(\n              { __typename?: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )> }\n          )>, topics?: Types.Maybe<Array<(\n            { __typename?: 'Topic' }\n            & Pick<Types.Topic, 'name'>\n          )>> }\n        )>> }\n      ) | { __typename: 'LocationContent' } | { __typename: 'NumericContent' } | { __typename: 'ParagraphCollectionContent' } | { __typename: 'PropertiesTableContent' } | { __typename: 'RichTextContent' } | { __typename: 'SelectionContent' } | { __typename: 'SingleLineContent' } | { __typename: 'VideoContent' }> }\n    )> }\n  ) | (\n    { __typename: 'Product' }\n    & Pick<Types.Product, 'id' | 'name' | 'type' | 'path'>\n    & { defaultVariant?: Types.Maybe<(\n      { __typename?: 'ProductVariant' }\n      & { firstImage?: Types.Maybe<(\n        { __typename?: 'Image' }\n        & Pick<Types.Image, 'url' | 'altText'>\n        & { variants?: Types.Maybe<Array<(\n          { __typename?: 'ImageVariant' }\n          & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n        )>> }\n      )> }\n    )>, variants?: Types.Maybe<Array<(\n      { __typename?: 'ProductVariant' }\n      & Pick<Types.ProductVariant, 'id' | 'name' | 'sku' | 'price' | 'stock' | 'isDefault'>\n      & { priceVariants?: Types.Maybe<Array<(\n        { __typename?: 'ProductPriceVariant' }\n        & Pick<Types.ProductPriceVariant, 'identifier' | 'name' | 'price' | 'currency'>\n      )>>, attributes?: Types.Maybe<Array<Types.Maybe<(\n        { __typename?: 'ProductVariantAttribute' }\n        & Pick<Types.ProductVariantAttribute, 'attribute' | 'value'>\n      )>>>, images?: Types.Maybe<Array<(\n        { __typename?: 'Image' }\n        & Pick<Types.Image, 'url' | 'altText' | 'key'>\n        & { variants?: Types.Maybe<Array<(\n          { __typename?: 'ImageVariant' }\n          & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n        )>> }\n      )>> }\n    )>>, vatType?: Types.Maybe<(\n      { __typename?: 'VatInfo' }\n      & Pick<Types.VatInfo, 'name' | 'percent'>\n    )>, summary?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, body?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, table?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, related?: Types.Maybe<(\n      { __typename?: 'Component' }\n      & { content?: Types.Maybe<{ __typename: 'BooleanContent' } | { __typename: 'ComponentChoiceContent' } | { __typename: 'ContentChunkContent' } | { __typename: 'DatetimeContent' } | { __typename: 'FileContent' } | { __typename: 'GridRelationsContent' } | { __typename: 'ImageContent' } | (\n        { __typename: 'ItemRelationsContent' }\n        & { items?: Types.Maybe<Array<(\n          { __typename?: 'Document' }\n          & Pick<Types.Document, 'path' | 'name'>\n          & { topics?: Types.Maybe<Array<(\n            { __typename?: 'Topic' }\n            & Pick<Types.Topic, 'name'>\n          )>> }\n        ) | (\n          { __typename?: 'Folder' }\n          & Pick<Types.Folder, 'path' | 'name'>\n          & { topics?: Types.Maybe<Array<(\n            { __typename?: 'Topic' }\n            & Pick<Types.Topic, 'name'>\n          )>> }\n        ) | (\n          { __typename: 'Product' }\n          & Pick<Types.Product, 'path' | 'name'>\n          & { defaultVariant?: Types.Maybe<(\n            { __typename?: 'ProductVariant' }\n            & Pick<Types.ProductVariant, 'price'>\n            & { firstImage?: Types.Maybe<(\n              { __typename?: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )> }\n          )>, topics?: Types.Maybe<Array<(\n            { __typename?: 'Topic' }\n            & Pick<Types.Topic, 'name'>\n          )>> }\n        )>> }\n      ) | { __typename: 'LocationContent' } | { __typename: 'NumericContent' } | { __typename: 'ParagraphCollectionContent' } | { __typename: 'PropertiesTableContent' } | { __typename: 'RichTextContent' } | { __typename: 'SelectionContent' } | { __typename: 'SingleLineContent' } | { __typename: 'VideoContent' }> }\n    )> }\n  )> }\n);\n\n\nexport const ProductDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"Product\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"version\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"VersionLabel\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"product\"},\"name\":{\"kind\":\"Name\",\"value\":\"catalogue\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"language\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"en\",\"block\":false}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"version\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"version\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"summary\"},\"name\":{\"kind\":\"Name\",\"value\":\"component\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"brief\",\"block\":false}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"component\"}}]}},{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"body\"},\"name\":{\"kind\":\"Name\",\"value\":\"component\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"body\",\"block\":false}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"component\"}}]}},{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"table\"},\"name\":{\"kind\":\"Name\",\"value\":\"component\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"nutrition\",\"block\":false}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"component\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Product\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultVariant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"firstImage\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"altText\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"variants\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"width\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"height\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"size\"}}]}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"variants\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"sku\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"priceVariants\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"identifier\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"currency\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"stock\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isDefault\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attribute\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"images\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"altText\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"variants\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"width\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"height\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"size\"}}]}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"vatType\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"percent\"}}]}}]}},{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"related\"},\"name\":{\"kind\":\"Name\",\"value\":\"component\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"related\",\"block\":false}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"content\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ItemRelationsContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"items\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"topics\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Product\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultVariant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"firstImage\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"altText\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"variants\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"width\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"height\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"size\"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},...ComponentFragmentDoc.definitions]} as unknown as DocumentNode<ProductQuery, ProductQueryVariables>;", "import { DefinitionNode, DocumentNode, FragmentDefinitionNode } from \"graphql\";\nimport filter from \"lodash/fp/filter\";\nimport pipe from \"lodash/fp/pipe\";\nimport uniqBy from \"lodash/fp/uniqBy\";\n\nexport function isFragmentDefinition(\n  def: DefinitionNode\n): def is FragmentDefinitionNode {\n  return def.kind === \"FragmentDefinition\";\n}\n\nexport const notFragments = filter<DefinitionNode>(\n  (def) => def.kind !== \"FragmentDefinition\"\n);\n\nexport const onlyUniqueFragments = pipe(\n  filter<DefinitionNode, FragmentDefinitionNode>(isFragmentDefinition),\n  uniqBy<FragmentDefinitionNode>((def) => def.name)\n);\n\nexport function normalizeDocumentNode(doc: DocumentNode): DocumentNode {\n  if (\"__normalized\" in doc) return doc;\n\n  return Object.assign(doc, {\n    __normalized: true,\n    definitions: [\n      ...notFragments(doc.definitions),\n      ...onlyUniqueFragments(doc.definitions),\n    ],\n  });\n}\n", "import { ContentTransformer } from \"@crystallize/react-content-transformer\";\nimport { Image } from \"@crystallize/react-image\";\nimport { ProductQuery } from \"../crystallize/queries/product.generated\";\nimport { componentContent } from \"../crystallize/utils/componentContent\";\nimport { ProductBody } from \"./product-body\";\nimport { VariantSelector } from \"./variant-selector\";\nimport { RelatedProducts } from \"./related-products\";\nimport { useBasket } from \"./basket\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"remix\";\nimport { StarIcon } from '@heroicons/react/20/solid'\nimport React from \"react\";\n\ninterface ProductProps {\n  product: ProductQuery[\"product\"];\n}\n\nexport const Product = ({ product }: ProductProps) => {\n  let item = componentContent(product, \"Product\");\n  let navigate = useNavigate();\n\n  const [selectedVariant, setSelectedVariant] = useState(item.variants[0]);\n  const basket = useBasket();\n\n  const onVariantChange = (variant) => setSelectedVariant(variant);\n\n  const buy = () => {\n    basket?.actions?.addItem({\n      id: selectedVariant.id,\n      sku: selectedVariant.sku,\n      path: item.path,\n      priceVariantIdentifier: \"default\",\n      stock: selectedVariant.stock,\n    });\n    navigate(\"/cart\", { replace: false });\n  };\n\n  const reviews = { href: '#', average: 4, totalCount: 17 }\n  function classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n  }\n\n  return (\n    <div className=\"py-5\">\n      <nav aria-label=\"Breadcrumb\">\n        <ol\n          role=\"list\"\n          className=\"mx-auto flex items-center space-x-2 lg:max-w-7xl\"\n        >\n          <li>\n            <div className=\"flex items-center\">\n              <a href=\"/\" className=\"mr-2 text-sm font-medium text-gray-900\">\n                \u0413\u043B\u0430\u0432\u043D\u0430\u044F\n              </a>\n              <svg\n                width={16}\n                height={20}\n                viewBox=\"0 0 16 20\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                aria-hidden=\"true\"\n                className=\"w-4 h-5 text-gray-300\"\n              >\n                <path d=\"M5.697 4.34L8.98 16.532h1.327L7.025 4.341H5.697z\" />\n              </svg>\n            </div>\n          </li>\n          <li className=\"text-sm\">\n            <a\n              href={item.path}\n              aria-current=\"page\"\n              className=\"font-medium text-gray-500 hover:text-gray-600\"\n            >\n              {item.name}\n            </a>\n          </li>\n        </ol>\n      </nav>\n\n      {/* Image gallery */}\n      <div className=\"mt-6 mx-auto lg:max-w-7xl\">\n        <div className=\"sm:rounded-lg sm:overflow-hidden\">\n          <Image\n            {...item.defaultVariant.firstImage}\n            className=\"w-full h-full object-center object-cover rounded-md overflow-hidden\"\n          />\n        </div>\n      </div>\n\n      {/* Product info */}\n      <div className=\"mx-auto pt-10 pb-16 lg:max-w-7xl lg:pt-16 lg:pb-24 lg:grid lg:grid-cols-3 lg:grid-rows-[auto,auto,1fr] lg:gap-x-8\">\n        <div className=\"lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8\">\n          <h1 className=\"text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl\">\n            {item.name}\n          </h1>\n        </div>\n\n        {/* Options */}\n        <div className=\"mt-4 lg:mt-0 lg:row-span-3\">\n          <h2 className=\"sr-only\">Product information</h2>\n          <p className=\"tracking-tight text-3xl text-gray-900 font-semibold\">\n            {selectedVariant.price} \u20BD\n          </p>\n\n          {/* Reviews */}\n          <div className=\"mt-6\">\n            <h3 className=\"sr-only\">Reviews</h3>\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center\">\n                {[0, 1, 2, 3, 4].map((rating) => (\n                  <StarIcon\n                    key={rating}\n                    className={classNames(\n                      reviews.average > rating ? 'text-yellow-400' : 'text-gray-200',\n                      'h-5 w-5 flex-shrink-0'\n                    )}\n                    aria-hidden=\"true\"\n                  />\n                ))}\n              </div>\n              <p className=\"sr-only\">{reviews.average} out of 5 stars</p>\n              <a href={reviews.href} className=\"ml-3 text-sm font-medium text-indigo-600 hover:text-indigo-500\">\n                {reviews.totalCount} \u043E\u0442\u0437\u044B\u0432\u043E\u0432\n              </a>\n            </div>\n          </div>\n\n          {/* Variants */}\n          <div className=\"mt-10\">\n            <VariantSelector\n              variants={item.variants}\n              selectedVariant={selectedVariant}\n              onVariantChange={onVariantChange}\n            />\n          </div>\n\n          <button\n            onClick={() => buy()}\n            className=\"mt-10 w-full bg-indigo-600 border border-transparent rounded-md py-3 px-8 flex items-center justify-center text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            \u041A\u0443\u043F\u0438\u0442\u044C\n          </button>\n        </div>\n\n        <div className=\"py-10 lg:pt-6 lg:pb-16 lg:col-start-1 lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8\">\n          {/* Description and details */}\n          <div>\n            <h3 className=\"sr-only\">Description</h3>\n\n            <div className=\"space-y-6 text-base text-gray-900\">\n              <ContentTransformer\n                json={\n                  componentContent(item.summary.content, \"RichTextContent\")\n                    ?.json as [any]\n                }\n              />\n            </div>\n            <ProductBody body={item.body} table={item.table} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <p className=\"text-text mb-4 font-semibold\">\u041F\u043E\u0445\u043E\u0436\u0438\u0435 \u0431\u0443\u043A\u0435\u0442\u044B</p>\n      </div>\n      <RelatedProducts related={item.related} />\n    </div>\n  );\n};", "// TODO: Add JSDoc comment\nexport const componentContent = <\n  T extends { __typename?: string },\n  V extends string & T[\"__typename\"]\n>(\n  o: T,\n  v: V\n): Extract<T, Record<\"__typename\", V>> => {\n  return o && o[\"__typename\"] === v\n    ? (o as Extract<T, Record<\"__typename\", V>>)\n    : null;\n};\n", "import { ContentTransformer } from \"@crystallize/react-content-transformer\";\nimport { componentContent } from \"../crystallize/utils/componentContent\";\nimport { ProductQuery } from \"../crystallize/queries/product.generated\";\nimport { Image } from \"@crystallize/react-image\";\nimport ReactPlayer from \"react-player\";\nimport React from \"react\";\n\ninterface ProductBodyProps {\n  body: ProductQuery[\"product\"][\"body\"];\n  table: ProductQuery[\"product\"][\"table\"];\n}\n\nexport const ProductBody = ({ body, table }: ProductBodyProps) => {\n  return (\n    <div className=\"flex flex-col gap-3 w-full mx-auto z-10\">\n      {componentContent(\n        body?.content,\n        \"ParagraphCollectionContent\"\n      ).paragraphs.map((paragraph, index) => (\n        <div key={index} className=\"flex flex-col justify-between\">\n          <div className=\"my-3 text-text\">\n            {paragraph.title && (\n              <h2 className=\"font-semibold text-2xl mb-4\">\n                {paragraph?.title.text}\n              </h2>\n            )}\n            {paragraph.body && (\n              <div>\n                <ContentTransformer json={paragraph.body?.json as [any]} />\n              </div>\n            )}\n          </div>\n          {paragraph.images && (\n            <div className=\"my-5\">\n              {paragraph?.images?.map((image) => (\n                <Image\n                  {...image}\n                  sizes=\"200px\"\n                  className=\"rounded-xl overflow-hidden\"\n                  loading=\"lazy\"\n                />\n              ))}\n            </div>\n          )}\n          {paragraph.videos && (\n            <div className=\"my-5\">\n              <ReactPlayer\n                controls\n                url={\n                  paragraph?.videos &&\n                  paragraph?.videos.length > 0 &&\n                  paragraph?.videos[0].playlists[1]\n                }\n                width=\"100%\"\n                height=\"100%\"\n                light={\n                  paragraph?.videos &&\n                  paragraph?.videos.length > 0 &&\n                  paragraph?.videos[0].thumbnails &&\n                  paragraph?.videos[0].thumbnails.length > 0 &&\n                  paragraph?.videos[0].thumbnails[0].url\n                }\n                playing={true}\n              />\n            </div>\n          )}\n        </div>\n      ))}\n      {componentContent(table?.content, \"PropertiesTableContent\").sections.map(\n        (section, index) => (\n          <div\n            key={index}\n            className=\"flex lg:flex-row flex-col justify-between text-text my-20\"\n          >\n            <div>\n              <h3 className=\"font-bold text-2xl py-2\">{section?.title}</h3>\n              <p className=\"italic\">\u0431\u0443\u043A\u0435\u0442\u0430</p>\n            </div>\n            <div className=\"lg:w-7/12 w-full\">\n              {section.properties.map((property, index) => (\n                <div\n                  key={index}\n                  className=\"flex justify-between my-3 even:bg-grey px-5 py-2\"\n                >\n                  <p>{property.key}</p>\n                  <p>{property.value}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )\n      )}\n    </div>\n  );\n};", "import isEqual from \"lodash/isEqual\";\nimport React from \"react\";\n\nfunction reduceAttributes(variants) {\n  return variants.reduce((acc, variant) => {\n    const attrs = acc;\n    variant.attributes.forEach(({ attribute, value }) => {\n      const currentAttribute = attrs[attribute];\n      if (!currentAttribute) {\n        attrs[attribute] = [value];\n        return;\n      }\n\n      const valueExists = currentAttribute.find((str) => str === value);\n      if (!valueExists) {\n        attrs[attribute].push(value);\n      }\n    });\n\n    return attrs;\n  }, {});\n}\n\nfunction attributesToObject({ attributes }) {\n  return Object.assign(\n    {},\n    ...attributes.map(({ attribute, value }) => ({ [attribute]: value }))\n  );\n}\n\nexport const VariantSelector = ({\n  variants,\n  selectedVariant,\n  onVariantChange,\n}) => {\n  const attributes = reduceAttributes(variants);\n\n  function onAttributeSelect({ attribute, value, e }) {\n    const selectedAttributes = attributesToObject(selectedVariant);\n\n    selectedAttributes[attribute] = value;\n    // Get the most suitable variant\n    let variant = variants.find((variant) => {\n      if (isEqual(selectedAttributes, attributesToObject(variant))) {\n        return true;\n      }\n      return false;\n    });\n\n    if (variant) {\n      onVariantChange(variant);\n    }\n  }\n\n  return (\n    <div>\n      {Object.keys(attributes).map((attribute) => {\n        const attr = attributes[attribute];\n        const selectedAttr = selectedVariant.attributes.find(\n          (a) => a.attribute === attribute\n        );\n\n        if (!selectedAttr) {\n          return null;\n        }\n\n        return (\n          <div key={attribute} className=\"mt-10\">\n            <div>\n              <h3 className=\"text-sm text-gray-900 font-medium\">{attribute}</h3>\n            </div>\n\n            <div className=\"flex justify-between mb-5\">\n              {attr.map((value) => (\n                <button\n                  key={value}\n                  onClick={(e) =>\n                    onAttributeSelect({\n                      attribute,\n                      value,\n                      e,\n                    })\n                  }\n                  type=\"button\"\n                  className=\"m-1 bg-white shadow-sm text-gray-900 cursor-pointer group relative border rounded-md py-3 px-4 flex items-center justify-center text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none flex-1\"\n                  style={{\n                    border:\n                      value === selectedAttr.value\n                        ? \"2px solid rgb(99 102 241)\"\n                        : \"1px solid rgb(197 222 221)\",\n                  }}\n                >\n                  {value}\n                </button>\n              ))}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};", "import { componentContent } from \"../crystallize/utils/componentContent\";\nimport { ProductQuery } from \"../crystallize/queries/product.generated\";\nimport { Image } from \"@crystallize/react-image\";\nimport { Link } from \"remix\";\nimport React from \"react\";\n\ninterface RelatedProductProps {\n  related: ProductQuery[\"product\"][\"related\"];\n}\n\nexport const RelatedProducts = ({ related }: RelatedProductProps) => {\n\n  return (\n    <div className=\"flex w-full items-start flex-wrap gap-2\">\n      {componentContent(related.content, \"ItemRelationsContent\").items.map(\n        (item, index) => (\n          <Link\n            prefetch=\"intent\"\n            to={item.path}\n            key={index}\n            className=\"bg-primary px-4 py-3 rounded-xl border-2 border-grey md:w-80 w-full h-80\"\n          >\n            <div className=\"flex flex-col\">\n              <div className=\"flex justify-between\">\n                <div className=\"flex gap-1\">\n                  {item.topics?.map((topic) => (\n                    <div\n                      className=\"text-sm bg-grey px-2 py-1 rounded-2xl\"\n                      key={topic.name}\n                    >\n                      {topic.name}\n                    </div>\n                  ))}\n                </div>\n                <div>\n                  ${componentContent(item, \"Product\").defaultVariant.price}\n                </div>\n              </div>\n\n              <Image\n                {...componentContent(item, \"Product\").defaultVariant.firstImage}\n                sizes=\"300px\"\n                loading=\"lazy\"\n              />\n              <h2 className=\"text-l text-center m-auto\">{item.name}</h2>\n            </div>\n          </Link>\n        )\n      )}\n    </div>\n  );\n};\n", "import parse from 'parse-duration';\n\nexport type HttpCacheHeaders = {\n    headers: {\n        'Cache-Control': string;\n    }\n};\n\nexport type VarnishHttpCacheHeaders = Required<HttpCacheHeaders> & {\n    headers: {\n        'xkey': string;\n    }\n}\n\nexport type FastlyHttpCacheHeaders = Required<HttpCacheHeaders> & {\n    headers: {\n        'Surrogate-Key': string; // Fastly cache key\n        'Surrogate-Control': string; // Fastly cache control\n    }\n}\n\n/**\n * Return HTTP Cache headers\n */\nexport function HttpCacheHeaderTagger(maxAge: string, sharedMaxAge: string, tags: string[]): HttpCacheHeaders | VarnishHttpCacheHeaders | FastlyHttpCacheHeaders {\n\n    if (process.env.HTTP_CACHE_SERVICE === 'fastly') {\n\n        // We tell Fastly to cache the response for sharedMaxAge (max-age in Surrogate-Control which has precedence over Cache-Control s-max-age)\n        // We tell Fastly to serve a stale only 2 time the sharedMaxAge\n        // We tell Fastly to serve a stale for sharedMaxAge if the origin is not available\n        // and we tell the browser to cache the response for maxAge\n        // and we tell the browser serve a stale only 2 time the maxAge\n        return {\n            headers: {\n                'Cache-Control': `public, max-age=${parse(maxAge, 's')}, s-maxage=${parse(sharedMaxAge, 's')}, stale-while-revalidate=${parse(maxAge, 's')}, stale-if-error=${parse(sharedMaxAge, 's')}`,\n                'Surrogate-Control': `max-age=${parse(sharedMaxAge, 's')}, stale-while-revalidate=${parse(sharedMaxAge, 's')}`,\n                'Surrogate-Key': tags.join(',')\n            }\n        }\n    }\n\n    if (process.env.HTTP_CACHE_SERVICE === 'varnish') {\n        // We tell Vanish to cache the response for sharedMaxAge\n        // We tell Vanish to serve a stale only 2 time the maxAge\n        // and we tell the browser to cache the response for maxAge\n        // and we tell the browser serve a stale only 2 time the maxAge (same header used for Varnish)\n        return {\n            headers: {\n                'Cache-Control': `public, max-age=${parse(maxAge, 's')}, s-maxage=${parse(sharedMaxAge, 's')}, stale-while-revalidate=${parse(maxAge, 's')}`,\n                'xkey': tags.join(','),\n            }\n        }\n    }\n\n    return {\n        headers: {\n            'Cache-Control': `public, max-age=${parse(maxAge, 's')}, s-maxage=${parse(sharedMaxAge, 's')}, stale-while-revalidate=${parse(maxAge, 's')}`,\n        }\n    }\n}\n", "import { useBasket } from \"../components/basket\";\nimport { Form } from \"remix\";\nimport { Payments } from \"../components/payments\";\nimport { useState } from \"react\";\nimport { CheckoutModelInput } from \"../service-api/types.generated\";\nimport React from \"react\";\n\nexport default function Checkout() {\n  const [state, setState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    street: \"\",\n    city: \"\",\n    postalCode: \"\",\n  });\n\n  const { firstName, lastName, phone, street, city, postalCode } = state;\n\n  const basket = useBasket();\n\n  function getURL(path: string) {\n    if (typeof window === \"undefined\") return \"\";\n    return `${location?.protocol}//${location?.host}${path}`;\n  }\n\n  const checkoutModel: CheckoutModelInput = {\n    basketModel: basket.basketModel,\n    customer: {\n      firstName,\n      lastName,\n      addresses: [\n        { type: \"billing\", phone },\n        {\n          type: \"delivery\",\n          street,\n          city,\n          postalCode,\n        },\n      ],\n    },\n    confirmationURL: getURL(`/confirmation/{crystallizeOrderId}`),\n    checkoutURL: getURL(`/checkout`),\n    termsURL: getURL(`/terms`),\n  };\n\n  return (\n    <div className=\"p-10 mx-auto bg-background1 w-auto md:w-128 lg:w-128 mt-20\">\n      <h1 className=\"text-text text-3xl font-bold mb-10 text-center\">\n        \u041E\u0444\u043E\u0440\u043C\u043B\u0435\u043D\u0438\u0435 \u0437\u0430\u043A\u0430\u0437\u0430\n      </h1>\n      <div className=\"mx-auto\">\n        <Form method=\"post\" className=\"flex flex-wrap gap-5\">\n          <input\n            type=\"text\"\n            name=\"\u0418\u043C\u044F\"\n            placeholder=\"\u0418\u043C\u044F\"\n            className=\"w-full\"\n            onChange={(e) => setState({ ...state, firstName: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            name=\"\u0424\u0430\u043C\u0438\u043B\u0438\u044F\"\n            placeholder=\"\u0424\u0430\u043C\u0438\u043B\u0438\u044F\"\n            className=\"w-full\"\n            onChange={(e) => setState({ ...state, lastName: e.target.value })}\n          />\n          <input\n            type=\"tel\"\n            name=\"\u0422\u0435\u043B\u0435\u0444\u043E\u043D\"\n            placeholder=\"\u0422\u0435\u043B\u0435\u0444\u043E\u043D\"\n            className=\"w-full\"\n            onChange={(e) => setState({ ...state, phone: e.target.value })}\n          />\n           <input\n            type=\"text\"\n            name=\"\u0410\u0434\u0440\u0435\u0441 \u0434\u043E\u0441\u0442\u0430\u0432\u043A\u0438\"\n            placeholder=\"\u0410\u0434\u0440\u0435\u0441 \u0434\u043E\u0441\u0442\u0430\u0432\u043A\u0438\"\n            className=\"w-full\"\n            onChange={(e) => setState({ ...state, street: e.target.value })}\n          />\n        </Form>\n      </div>\n      <Payments\n        checkoutModel={checkoutModel}\n        onSuccess={() => console.log(\"success\")}\n        onError={() => {}}\n      />\n    </div>\n  );\n}\n", "import { useState } from \"react\";\n\nimport { Invoice } from \"./invoice\";\nimport { PaymentProps } from \"./types\";\nimport React from \"react\";\n\nexport const Payments = (props: PaymentProps) => {\n  const [payment, setPayment] = useState(\"\");\n\n  return (\n    <>\n      {<Invoice {...props} />}\n    </>\n  );\n};\n", "import { FormEventHandler, useState } from \"react\";\nimport { serviceAPIClient } from \"../../clients\";\nimport { CheckoutModelInput } from \"../../service-api/types.generated\";\nimport {\n\tInoicevCreateOrderDocument,\n\tInoicevCreateOrderMutation,\n\tInoicevCreateOrderMutationVariables,\n} from \"../../service-api/invoice-create-order.generated\";\nimport { PaymentProps } from \"./types\";\nimport { Form, useSubmit } from \"remix\";\nimport React from \"react\";\n\n\ninterface FormProps extends PaymentProps {\n\tcheckoutModel: CheckoutModelInput;\n}\n\nexport const InvoiceForm = ({\n\tcheckoutModel,\n\tonError = (error) => console.log(error),\n}: FormProps) => {\n\n\tconst [status, setStatus] = useState<\"idle\" | \"submitting\">(\"idle\");\n\n\tconst handleSubmit: FormEventHandler<HTMLFormElement> = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tgo();\n\n\t\tasync function go() {\n\t\t\tsetStatus(\"submitting\");\n\n\t\t\t// Show a success message to your customer\n\t\t\t// There's a risk of the customer closing the window before callback\n\t\t\t// execution. Set up a webhook or plugin to listen for the\n\t\t\t// payment_intent.succeeded event that handles any business critical\n\t\t\t// post-payment actions.\n\t\t\tconst response = await serviceAPIClient.request<\n\t\t\t\tInoicevCreateOrderMutation,\n\t\t\t\tInoicevCreateOrderMutationVariables\n\t\t\t>(InoicevCreateOrderDocument, {\n\t\t\t\tcheckoutModel,\n\t\t\t});\n\n\t\t\tconst { success, orderId } =\n\t\t\t\tresponse.paymentProviders.invoice.createInvoice;\n\n\t\t\tif (success) {\n\t\t\t\twindow.location.replace(`/confirmation/${orderId}`);\n\t\t\t} else {\n\t\t\t\tsetStatus(\"idle\");\n\t\t\t\tonError(new Error(\"Unknown\"));\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<Form method=\"post\" onSubmit={handleSubmit}>\n\n\t\t\t<button\n\t\t\t\ttype=\"submit\"\n\t\t\t\tdisabled={status !== \"idle\"}\n\t\t\t\tclassName=\"w-full bg-text text-primary py-3 font-semibold mt-5\"\n\t\t\t>\n\t\t\t\t{status === \"idle\" ? \"\u041E\u0444\u043E\u0440\u043C\u0438\u0442\u044C \u0437\u0430\u043A\u0430\u0437\" : \"\u041F\u043E\u0434\u043E\u0436\u0434\u0438\u0442\u0435...\"}\n\t\t\t</button>\n\t\t</Form>\n\t);\n};\n\nexport const StripePayment = ({ checkoutModel, onSuccess }: PaymentProps) => {\n\n\treturn (\n\t\t<InvoiceForm\n\t\t\tcheckoutModel={checkoutModel}\n\t\t\tonSuccess={onSuccess}\n\t\t/>\n\t);\n};\n\nexport const Invoice = ({ checkoutModel, onSuccess }: PaymentProps) => {\n\treturn <StripePayment checkoutModel={checkoutModel} onSuccess={onSuccess} />;\n};\n", "import * as Types from './types.generated';\n\nimport { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nexport type InoicevCreateOrderMutationVariables = Types.Exact<{\n  checkoutModel: Types.CheckoutModelInput;\n}>;\n\n\nexport type InoicevCreateOrderMutation = (\n  { __typename?: 'Mutation' }\n  & { paymentProviders: (\n    { __typename?: 'PaymentProvidersMutations' }\n    & { invoice: (\n      { __typename?: 'InvoiceMutation' }\n      & { createInvoice: (\n        { __typename?: 'CreateInvoiceMutation' }\n        & Pick<Types.CreateInvoiceMutation, 'success' | 'orderId'>\n      ) }\n    ) }\n  ) }\n);\n\n\nexport const InoicevCreateOrderDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"InoicevCreateOrder\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"checkoutModel\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CheckoutModelInput\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"paymentProviders\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"invoice\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createInvoice\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"checkoutModel\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"checkoutModel\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"success\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"orderId\"}}]}}]}}]}}]}}]} as unknown as DocumentNode<InoicevCreateOrderMutation, InoicevCreateOrderMutationVariables>;", "import { useLoaderData, json, LoaderFunction, MetaFunction } from \"remix\";\nimport { catalogueClient } from \"../clients\";\nimport {\n  FrontpageDocument,\n  FrontpageQuery,\n} from \"../crystallize/queries/frontpage.generated\";\nimport { normalizeDocumentNode } from \"../crystallize/utils/normalizeDocumentNode\";\nimport Grid from \"@crystallize/grid-renderer/react\";\nimport { GridItem } from \"../components/grid-item\";\nimport { Products } from \"../components/products\";\nimport { componentContent } from \"../crystallize/utils/componentContent\";\nimport { HttpCacheHeaderTagger } from \"~/http-cache-header-tagger\";\nimport React from \"react\";\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url);\n  // for the preview mode, if the query parameter preview=true is present, ask for the draft version\n  const preview = url.searchParams.get(\"preview\");\n  const version = preview ? \"draft\" : \"published\";\n  const path = \"/frontpage\";\n  const data = await catalogueClient.request<FrontpageQuery>(\n    normalizeDocumentNode(FrontpageDocument),\n    { path, version }\n  );\n\n  return json(\n    { ...data, path },\n    HttpCacheHeaderTagger(\"30s\", \"1w\", [\"frontpage\"])\n  );\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n  let {\n    catalogue: { meta },\n  } = data;\n  let metaData = componentContent(meta.content, \"ContentChunkContent\")\n    .chunks[0];\n\n  return {\n    title: `${componentContent(metaData[0].content, \"SingleLineContent\").text}`,\n    description: `${\n      componentContent(metaData[1].content, \"RichTextContent\").plainText[0]\n    }`,\n    \"og:image\": `${\n      componentContent(metaData[2].content, \"ImageContent\")?.images[0]?.url\n    }`,\n  };\n};\n\nexport function headers() {\n  return HttpCacheHeaderTagger(\"1m\", \"1w\", [\"index\"]).headers;\n}\n\nexport default function Index() {\n  let { catalogue, donuts } = useLoaderData();\n  let { grid } = catalogue;\n\n  const children = ({ cells }) => {\n    return cells.map((cell, index) => (\n      <div\n        style={{\n          gridColumn: `span ${cell.layout.colspan}`,\n          gridRow: `span ${cell.layout.rowspan}`,\n        }}\n        id=\"grid-item\"\n        key={\"cell\" + index}\n      >\n        <GridItem cell={cell} />\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"py-20\">\n      <Grid model={grid.content.grids[0]} className=\"gap-3 sm:gap-5\">\n        {children}\n      </Grid>\n      <Products donuts={donuts} />\n    </div>\n  );\n}", "import * as Types from '../types.generated';\n\nimport { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nimport { ComponentFragmentDoc, BooleanFragmentDoc, ImageFragmentDoc } from '../fragments/content.generated';\nexport type FrontpageQueryVariables = Types.Exact<{\n  path: Types.Scalars['String'];\n  version?: Types.InputMaybe<Types.VersionLabel>;\n}>;\n\n\nexport type FrontpageQuery = (\n  { __typename?: 'Query' }\n  & { catalogue?: Types.Maybe<(\n    { __typename?: 'Document' }\n    & { meta?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, grid?: Types.Maybe<(\n      { __typename?: 'Component' }\n      & { content?: Types.Maybe<{ __typename?: 'BooleanContent' } | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | (\n        { __typename?: 'GridRelationsContent' }\n        & { grids?: Types.Maybe<Array<(\n          { __typename?: 'Grid' }\n          & { rows: Array<(\n            { __typename?: 'GridRow' }\n            & { columns: Array<(\n              { __typename?: 'GridColumn' }\n              & { layout?: Types.Maybe<(\n                { __typename?: 'GridColumnLayout' }\n                & Pick<Types.GridColumnLayout, 'rowspan' | 'colspan'>\n              )>, item?: Types.Maybe<(\n                { __typename?: 'Document' }\n                & Pick<Types.Document, 'name' | 'path'>\n                & { topics?: Types.Maybe<Array<(\n                  { __typename?: 'Topic' }\n                  & Pick<Types.Topic, 'name'>\n                )>> }\n              ) | (\n                { __typename?: 'Folder' }\n                & Pick<Types.Folder, 'name' | 'path'>\n                & { topics?: Types.Maybe<Array<(\n                  { __typename?: 'Topic' }\n                  & Pick<Types.Topic, 'name'>\n                )>> }\n              ) | (\n                { __typename?: 'Product' }\n                & Pick<Types.Product, 'name' | 'path'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ProductVariant' }\n                  & Pick<Types.ProductVariant, 'price'>\n                  & { images?: Types.Maybe<Array<(\n                    { __typename: 'Image' }\n                    & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                    & { variants?: Types.Maybe<Array<(\n                      { __typename?: 'ImageVariant' }\n                      & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                    )>> }\n                  )>> }\n                )>>, topics?: Types.Maybe<Array<(\n                  { __typename?: 'Topic' }\n                  & Pick<Types.Topic, 'name'>\n                )>> }\n              )> }\n            )> }\n          )> }\n        )>> }\n      ) | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n    )> }\n  ) | (\n    { __typename?: 'Folder' }\n    & { meta?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, grid?: Types.Maybe<(\n      { __typename?: 'Component' }\n      & { content?: Types.Maybe<{ __typename?: 'BooleanContent' } | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | (\n        { __typename?: 'GridRelationsContent' }\n        & { grids?: Types.Maybe<Array<(\n          { __typename?: 'Grid' }\n          & { rows: Array<(\n            { __typename?: 'GridRow' }\n            & { columns: Array<(\n              { __typename?: 'GridColumn' }\n              & { layout?: Types.Maybe<(\n                { __typename?: 'GridColumnLayout' }\n                & Pick<Types.GridColumnLayout, 'rowspan' | 'colspan'>\n              )>, item?: Types.Maybe<(\n                { __typename?: 'Document' }\n                & Pick<Types.Document, 'name' | 'path'>\n                & { topics?: Types.Maybe<Array<(\n                  { __typename?: 'Topic' }\n                  & Pick<Types.Topic, 'name'>\n                )>> }\n              ) | (\n                { __typename?: 'Folder' }\n                & Pick<Types.Folder, 'name' | 'path'>\n                & { topics?: Types.Maybe<Array<(\n                  { __typename?: 'Topic' }\n                  & Pick<Types.Topic, 'name'>\n                )>> }\n              ) | (\n                { __typename?: 'Product' }\n                & Pick<Types.Product, 'name' | 'path'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ProductVariant' }\n                  & Pick<Types.ProductVariant, 'price'>\n                  & { images?: Types.Maybe<Array<(\n                    { __typename: 'Image' }\n                    & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                    & { variants?: Types.Maybe<Array<(\n                      { __typename?: 'ImageVariant' }\n                      & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                    )>> }\n                  )>> }\n                )>>, topics?: Types.Maybe<Array<(\n                  { __typename?: 'Topic' }\n                  & Pick<Types.Topic, 'name'>\n                )>> }\n              )> }\n            )> }\n          )> }\n        )>> }\n      ) | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n    )> }\n  ) | (\n    { __typename?: 'Product' }\n    & { meta?: Types.Maybe<(\n      { __typename: 'Component' }\n      & { content?: Types.Maybe<(\n        { __typename: 'BooleanContent' }\n        & Pick<Types.BooleanContent, 'value'>\n      ) | { __typename?: 'ComponentChoiceContent' } | (\n        { __typename: 'ContentChunkContent' }\n        & { chunks: Array<Array<(\n          { __typename?: 'Component' }\n          & { content?: Types.Maybe<(\n            { __typename: 'BooleanContent' }\n            & Pick<Types.BooleanContent, 'value'>\n          ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | (\n            { __typename: 'DatetimeContent' }\n            & Pick<Types.DatetimeContent, 'datetime'>\n          ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n            { __typename: 'ImageContent' }\n            & { images?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          ) | { __typename?: 'ItemRelationsContent' } | (\n            { __typename: 'LocationContent' }\n            & Pick<Types.LocationContent, 'lat' | 'long'>\n          ) | (\n            { __typename: 'NumericContent' }\n            & Pick<Types.NumericContent, 'number' | 'unit'>\n          ) | (\n            { __typename: 'ParagraphCollectionContent' }\n            & { paragraphs?: Types.Maybe<Array<(\n              { __typename?: 'ParagraphContent' }\n              & { title?: Types.Maybe<(\n                { __typename: 'SingleLineContent' }\n                & Pick<Types.SingleLineContent, 'text'>\n              )>, body?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, images?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { caption?: Types.Maybe<(\n                  { __typename: 'RichTextContent' }\n                  & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                )>, variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>>, videos?: Types.Maybe<Array<(\n                { __typename?: 'Video' }\n                & Pick<Types.Video, 'title' | 'playlists'>\n                & { thumbnails?: Types.Maybe<Array<(\n                  { __typename: 'Image' }\n                  & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                  & { caption?: Types.Maybe<(\n                    { __typename: 'RichTextContent' }\n                    & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n                  )>, variants?: Types.Maybe<Array<(\n                    { __typename?: 'ImageVariant' }\n                    & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                  )>> }\n                )>> }\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'PropertiesTableContent' }\n            & { sections?: Types.Maybe<Array<(\n              { __typename: 'PropertiesTableSection' }\n              & Pick<Types.PropertiesTableSection, 'title'>\n              & { properties?: Types.Maybe<Array<(\n                { __typename?: 'PropertiesTableValue' }\n                & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n              )>> }\n            )>> }\n          ) | (\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          ) | (\n            { __typename: 'SelectionContent' }\n            & { options?: Types.Maybe<Array<(\n              { __typename?: 'SelectionComponentOption' }\n              & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n            )>> }\n          ) | (\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          ) | (\n            { __typename: 'VideoContent' }\n            & { videos?: Types.Maybe<Array<(\n              { __typename: 'Video' }\n              & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n              & { thumbnails?: Types.Maybe<Array<(\n                { __typename: 'Image' }\n                & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ImageVariant' }\n                  & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                )>> }\n              )>> }\n            )>> }\n          )> }\n        )>> }\n      ) | (\n        { __typename: 'DatetimeContent' }\n        & Pick<Types.DatetimeContent, 'datetime'>\n      ) | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | (\n        { __typename: 'ImageContent' }\n        & { images?: Types.Maybe<Array<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )>> }\n      ) | { __typename?: 'ItemRelationsContent' } | (\n        { __typename: 'LocationContent' }\n        & Pick<Types.LocationContent, 'lat' | 'long'>\n      ) | (\n        { __typename: 'NumericContent' }\n        & Pick<Types.NumericContent, 'number' | 'unit'>\n      ) | (\n        { __typename: 'ParagraphCollectionContent' }\n        & { paragraphs?: Types.Maybe<Array<(\n          { __typename?: 'ParagraphContent' }\n          & { title?: Types.Maybe<(\n            { __typename: 'SingleLineContent' }\n            & Pick<Types.SingleLineContent, 'text'>\n          )>, body?: Types.Maybe<(\n            { __typename: 'RichTextContent' }\n            & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n          )>, images?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { caption?: Types.Maybe<(\n              { __typename: 'RichTextContent' }\n              & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n            )>, variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>>, videos?: Types.Maybe<Array<(\n            { __typename?: 'Video' }\n            & Pick<Types.Video, 'title' | 'playlists'>\n            & { thumbnails?: Types.Maybe<Array<(\n              { __typename: 'Image' }\n              & Pick<Types.Image, 'url' | 'altText' | 'key'>\n              & { caption?: Types.Maybe<(\n                { __typename: 'RichTextContent' }\n                & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n              )>, variants?: Types.Maybe<Array<(\n                { __typename?: 'ImageVariant' }\n                & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n              )>> }\n            )>> }\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'PropertiesTableContent' }\n        & { sections?: Types.Maybe<Array<(\n          { __typename: 'PropertiesTableSection' }\n          & Pick<Types.PropertiesTableSection, 'title'>\n          & { properties?: Types.Maybe<Array<(\n            { __typename?: 'PropertiesTableValue' }\n            & Pick<Types.PropertiesTableValue, 'key' | 'value'>\n          )>> }\n        )>> }\n      ) | (\n        { __typename: 'RichTextContent' }\n        & Pick<Types.RichTextContent, 'json' | 'html' | 'plainText'>\n      ) | (\n        { __typename: 'SelectionContent' }\n        & { options?: Types.Maybe<Array<(\n          { __typename?: 'SelectionComponentOption' }\n          & Pick<Types.SelectionComponentOption, 'key' | 'value'>\n        )>> }\n      ) | (\n        { __typename: 'SingleLineContent' }\n        & Pick<Types.SingleLineContent, 'text'>\n      ) | (\n        { __typename: 'VideoContent' }\n        & { videos?: Types.Maybe<Array<(\n          { __typename: 'Video' }\n          & Pick<Types.Video, 'id' | 'title' | 'playlists'>\n          & { thumbnails?: Types.Maybe<Array<(\n            { __typename: 'Image' }\n            & Pick<Types.Image, 'url' | 'altText' | 'key'>\n            & { variants?: Types.Maybe<Array<(\n              { __typename?: 'ImageVariant' }\n              & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n            )>> }\n          )>> }\n        )>> }\n      )> }\n    )>, grid?: Types.Maybe<(\n      { __typename?: 'Component' }\n      & { content?: Types.Maybe<{ __typename?: 'BooleanContent' } | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | (\n        { __typename?: 'GridRelationsContent' }\n        & { grids?: Types.Maybe<Array<(\n          { __typename?: 'Grid' }\n          & { rows: Array<(\n            { __typename?: 'GridRow' }\n            & { columns: Array<(\n              { __typename?: 'GridColumn' }\n              & { layout?: Types.Maybe<(\n                { __typename?: 'GridColumnLayout' }\n                & Pick<Types.GridColumnLayout, 'rowspan' | 'colspan'>\n              )>, item?: Types.Maybe<(\n                { __typename?: 'Document' }\n                & Pick<Types.Document, 'name' | 'path'>\n                & { topics?: Types.Maybe<Array<(\n                  { __typename?: 'Topic' }\n                  & Pick<Types.Topic, 'name'>\n                )>> }\n              ) | (\n                { __typename?: 'Folder' }\n                & Pick<Types.Folder, 'name' | 'path'>\n                & { topics?: Types.Maybe<Array<(\n                  { __typename?: 'Topic' }\n                  & Pick<Types.Topic, 'name'>\n                )>> }\n              ) | (\n                { __typename?: 'Product' }\n                & Pick<Types.Product, 'name' | 'path'>\n                & { variants?: Types.Maybe<Array<(\n                  { __typename?: 'ProductVariant' }\n                  & Pick<Types.ProductVariant, 'price'>\n                  & { images?: Types.Maybe<Array<(\n                    { __typename: 'Image' }\n                    & Pick<Types.Image, 'url' | 'altText' | 'key'>\n                    & { variants?: Types.Maybe<Array<(\n                      { __typename?: 'ImageVariant' }\n                      & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n                    )>> }\n                  )>> }\n                )>>, topics?: Types.Maybe<Array<(\n                  { __typename?: 'Topic' }\n                  & Pick<Types.Topic, 'name'>\n                )>> }\n              )> }\n            )> }\n          )> }\n        )>> }\n      ) | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n    )> }\n  )>, donuts?: Types.Maybe<(\n    { __typename?: 'Document' }\n    & { children?: Types.Maybe<Array<(\n      { __typename?: 'Document' }\n      & Pick<Types.Document, 'id'>\n      & { topics?: Types.Maybe<Array<(\n        { __typename?: 'Topic' }\n        & Pick<Types.Topic, 'name'>\n      )>>, bundle?: Types.Maybe<(\n        { __typename?: 'Component' }\n        & { content?: Types.Maybe<(\n          { __typename: 'BooleanContent' }\n          & Pick<Types.BooleanContent, 'value'>\n        ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n      )> }\n    ) | (\n      { __typename?: 'Folder' }\n      & Pick<Types.Folder, 'id'>\n      & { topics?: Types.Maybe<Array<(\n        { __typename?: 'Topic' }\n        & Pick<Types.Topic, 'name'>\n      )>>, bundle?: Types.Maybe<(\n        { __typename?: 'Component' }\n        & { content?: Types.Maybe<(\n          { __typename: 'BooleanContent' }\n          & Pick<Types.BooleanContent, 'value'>\n        ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n      )> }\n    ) | (\n      { __typename: 'Product' }\n      & Pick<Types.Product, 'name' | 'path' | 'id'>\n      & { topics?: Types.Maybe<Array<(\n        { __typename?: 'Topic' }\n        & Pick<Types.Topic, 'name'>\n      )>>, defaultVariant?: Types.Maybe<(\n        { __typename?: 'ProductVariant' }\n        & Pick<Types.ProductVariant, 'price'>\n        & { firstImage?: Types.Maybe<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )> }\n      )>, bundle?: Types.Maybe<(\n        { __typename?: 'Component' }\n        & { content?: Types.Maybe<(\n          { __typename: 'BooleanContent' }\n          & Pick<Types.BooleanContent, 'value'>\n        ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n      )> }\n    )>> }\n  ) | (\n    { __typename?: 'Folder' }\n    & { children?: Types.Maybe<Array<(\n      { __typename?: 'Document' }\n      & Pick<Types.Document, 'id'>\n      & { topics?: Types.Maybe<Array<(\n        { __typename?: 'Topic' }\n        & Pick<Types.Topic, 'name'>\n      )>>, bundle?: Types.Maybe<(\n        { __typename?: 'Component' }\n        & { content?: Types.Maybe<(\n          { __typename: 'BooleanContent' }\n          & Pick<Types.BooleanContent, 'value'>\n        ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n      )> }\n    ) | (\n      { __typename?: 'Folder' }\n      & Pick<Types.Folder, 'id'>\n      & { topics?: Types.Maybe<Array<(\n        { __typename?: 'Topic' }\n        & Pick<Types.Topic, 'name'>\n      )>>, bundle?: Types.Maybe<(\n        { __typename?: 'Component' }\n        & { content?: Types.Maybe<(\n          { __typename: 'BooleanContent' }\n          & Pick<Types.BooleanContent, 'value'>\n        ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n      )> }\n    ) | (\n      { __typename: 'Product' }\n      & Pick<Types.Product, 'name' | 'path' | 'id'>\n      & { topics?: Types.Maybe<Array<(\n        { __typename?: 'Topic' }\n        & Pick<Types.Topic, 'name'>\n      )>>, defaultVariant?: Types.Maybe<(\n        { __typename?: 'ProductVariant' }\n        & Pick<Types.ProductVariant, 'price'>\n        & { firstImage?: Types.Maybe<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )> }\n      )>, bundle?: Types.Maybe<(\n        { __typename?: 'Component' }\n        & { content?: Types.Maybe<(\n          { __typename: 'BooleanContent' }\n          & Pick<Types.BooleanContent, 'value'>\n        ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n      )> }\n    )>> }\n  ) | (\n    { __typename?: 'Product' }\n    & { children?: Types.Maybe<Array<(\n      { __typename?: 'Document' }\n      & Pick<Types.Document, 'id'>\n      & { topics?: Types.Maybe<Array<(\n        { __typename?: 'Topic' }\n        & Pick<Types.Topic, 'name'>\n      )>>, bundle?: Types.Maybe<(\n        { __typename?: 'Component' }\n        & { content?: Types.Maybe<(\n          { __typename: 'BooleanContent' }\n          & Pick<Types.BooleanContent, 'value'>\n        ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n      )> }\n    ) | (\n      { __typename?: 'Folder' }\n      & Pick<Types.Folder, 'id'>\n      & { topics?: Types.Maybe<Array<(\n        { __typename?: 'Topic' }\n        & Pick<Types.Topic, 'name'>\n      )>>, bundle?: Types.Maybe<(\n        { __typename?: 'Component' }\n        & { content?: Types.Maybe<(\n          { __typename: 'BooleanContent' }\n          & Pick<Types.BooleanContent, 'value'>\n        ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n      )> }\n    ) | (\n      { __typename: 'Product' }\n      & Pick<Types.Product, 'name' | 'path' | 'id'>\n      & { topics?: Types.Maybe<Array<(\n        { __typename?: 'Topic' }\n        & Pick<Types.Topic, 'name'>\n      )>>, defaultVariant?: Types.Maybe<(\n        { __typename?: 'ProductVariant' }\n        & Pick<Types.ProductVariant, 'price'>\n        & { firstImage?: Types.Maybe<(\n          { __typename: 'Image' }\n          & Pick<Types.Image, 'url' | 'altText' | 'key'>\n          & { variants?: Types.Maybe<Array<(\n            { __typename?: 'ImageVariant' }\n            & Pick<Types.ImageVariant, 'url' | 'key' | 'width' | 'height' | 'size'>\n          )>> }\n        )> }\n      )>, bundle?: Types.Maybe<(\n        { __typename?: 'Component' }\n        & { content?: Types.Maybe<(\n          { __typename: 'BooleanContent' }\n          & Pick<Types.BooleanContent, 'value'>\n        ) | { __typename?: 'ComponentChoiceContent' } | { __typename?: 'ContentChunkContent' } | { __typename?: 'DatetimeContent' } | { __typename?: 'FileContent' } | { __typename?: 'GridRelationsContent' } | { __typename?: 'ImageContent' } | { __typename?: 'ItemRelationsContent' } | { __typename?: 'LocationContent' } | { __typename?: 'NumericContent' } | { __typename?: 'ParagraphCollectionContent' } | { __typename?: 'PropertiesTableContent' } | { __typename?: 'RichTextContent' } | { __typename?: 'SelectionContent' } | { __typename?: 'SingleLineContent' } | { __typename?: 'VideoContent' }> }\n      )> }\n    )>> }\n  )> }\n);\n\n\nexport const FrontpageDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"Frontpage\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"version\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"VersionLabel\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"catalogue\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"language\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"en\",\"block\":false}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"version\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"version\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"meta\"},\"name\":{\"kind\":\"Name\",\"value\":\"component\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"meta\",\"block\":false}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"component\"}}]}},{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"grid\"},\"name\":{\"kind\":\"Name\",\"value\":\"component\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"grid\",\"block\":false}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"content\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"GridRelationsContent\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"grids\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"rows\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"columns\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"layout\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"rowspan\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"colspan\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"item\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"topics\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Product\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"variants\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"images\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"image\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}},{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"donuts\"},\"name\":{\"kind\":\"Name\",\"value\":\"catalogue\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"/shop\",\"block\":false}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"language\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"en\",\"block\":false}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"children\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"topics\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}]}},{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"bundle\"},\"name\":{\"kind\":\"Name\",\"value\":\"component\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"bundle\",\"block\":false}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"content\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"boolean\"}}]}}]}},{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Product\"}},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"__typename\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"topics\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"defaultVariant\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"firstImage\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"image\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"}}]}}]}}]}}]}}]}},...ComponentFragmentDoc.definitions,...ImageFragmentDoc.definitions,...BooleanFragmentDoc.definitions]} as unknown as DocumentNode<FrontpageQuery, FrontpageQueryVariables>;", "import { Image } from \"@crystallize/react-image\";\nimport { Link } from \"remix\";\nimport React from \"react\";\n\nexport const GridItem = ({ cell }) => {\n  return (\n    <Link to={cell.item.path} prefetch=\"intent\">\n      <div className=\"w-full aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8\">\n        <Image\n          {...cell.item.variants[0]?.images[0]}\n          loading=\"lazy\"\n          className=\"w-full h-full object-center object-cover\"\n        />\n        <div className=\"flex justify-between place-items-end\">\n          <div className=\"flex gap-1 mb-1 ml-1\">\n            {cell.item.topics?.map((topic) => (\n              <div\n                className=\"text-xs bg-gray-100 px-2 py-1 rounded-2xl\"\n                key={topic.name}\n              >\n                {topic.name}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <h2 className=\"mt-1 text-sm text-gray-700 truncate \">{cell.item.name}</h2>\n      <p className=\"text-lg font-medium text-gray-900\">\n        {cell.item.variants[0]?.price} \u20BD\n      </p>\n    </Link>\n  );\n};", "import { componentContent } from \"../crystallize/utils/componentContent\";\nimport { FrontpageQuery } from \"../crystallize/queries/frontpage.generated\";\nimport { Image } from \"@crystallize/react-image\";\nimport { Link } from \"remix\";\nimport React from \"react\";\n\ninterface ProductsProps {\n  donuts: FrontpageQuery[\"donuts\"];\n}\n\nexport const Products = ({ donuts }: ProductsProps) => {\n  return (\n    <div className=\"mt-20\">\n      <p className=\"text-lg font-semibold mb-10\">Our do(u)nuts</p>\n      <div className=\"flex items-start flex-wrap lg:gap-1 gap-5\">\n        {donuts?.children?.map((donut, index) =>\n          !componentContent(donut?.bundle?.content, \"BooleanContent\")?.value &&\n          donut.bundle ? (\n            <Link\n              to={componentContent(donut, \"Product\").path}\n              prefetch=\"intent\"\n              className=\"flex flex-col bg-primary rounded-xl lg:h-106 p-5 lg:w-80\"\n              key={index}\n            >\n              <div>\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex gap-1\">\n                    {donut?.topics?.map((topic, index) => (\n                      <div\n                        className=\"text-sm bg-grey px-2 py-1 rounded-2xl\"\n                        key={index}\n                      >\n                        {topic.name}\n                      </div>\n                    ))}\n                  </div>\n                  <p className=\"self-end\">\n                    ${componentContent(donut, \"Product\")?.defaultVariant.price}\n                  </p>\n                </div>\n                <Image\n                  {...componentContent(donut, \"Product\")?.defaultVariant\n                    .firstImage}\n                  sizes=\"(max-width: 1024px) 100vw, 400px\"\n                />\n                <h2 className=\"text-3xl font-bold text-center m-auto w-40\">\n                  {componentContent(donut, \"Product\")?.name}\n                </h2>\n              </div>\n            </Link>\n          ) : null\n        )}\n      </div>\n    </div>\n  );\n};\n", "import { useBasket } from \"../components/basket\";\nimport { Link } from \"remix\";\nimport { ItemSortField } from \"~/crystallize/types.generated\";\nimport React from \"react\";\n\nexport default function Cart() {\n  let basket = useBasket();\n  if (!basket.cart.length) {\n    return (\n      <div className=\"py-20\">\n        <h1 className=\"text-4xl font-bold text-text\">\u041A\u043E\u0440\u0437\u0438\u043D\u0430 \u043F\u0443\u0441\u0442\u0430.</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"py-20 text-text w-auto md:w-128 lg:w-128 mx-auto\">\n      <h1 className=\"text-4xl font-bold  mb-10\">\n        \u0412\u0430\u0448\u0430 \u043A\u043E\u0440\u0437\u0438\u043D\u0430 ({basket.cart.length})\n      </h1>\n      <div className=\"flex flex-col gap-5 bg-background1 p-10\">\n        {basket.cart.map((item, index) => (\n          <div key={index} className=\"flex justify-between items-center\">\n            <div className=\"flex flex-col\">\n              <p className=\"font-semibold text-xl\">\n                {item.name} \u00D7 {item.quantity}\n              </p>\n              <div className=\"flex gap-3\">\n                {item.attributes?.map((attr, index) => (\n                  <div\n                    className=\"even:after:content-['\\00a0-'] even:before:content-['-\\00a0']\"\n                    key={index}\n                  >\n                    {attr.value}\n                  </div>\n                ))}\n              </div>\n            </div>\n            <p>${item.price.gross * item.quantity}</p>\n          </div>\n        ))}\n        <div className=\"flex justify-between items-center border-t-2 border-text pt-4\">\n          <p className=\"font-semibold text-xl\">\u0418\u0442\u043E\u0433\u043E</p>\n          <p>${basket.total.gross}</p>\n        </div>\n        <Link\n          to=\"/checkout\"\n          className=\"bg-text text-primary py-3 mt-10 rounded font-semibold text-center\"\n        >\n          \u041E\u0444\u043E\u0440\u043C\u0438\u0442\u044C \u0437\u0430\u043A\u0430\u0437\n        </Link>\n      </div>\n    </div>\n  );\n}\n", "export default {'version':'500e357e','entry':{'module':'/build/entry.client-JGPSWDHB.js','imports':['/build/_shared/chunk-LF6OR5BN.js','/build/_shared/chunk-AMFLFMGS.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-EYLYLC2Y.js','imports':['/build/_shared/chunk-6E6OLZTB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/cart':{'id':'routes/cart','parentId':'root','path':'cart','index':undefined,'caseSensitive':undefined,'module':'/build/routes/cart-UQQSJDFJ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/checkout':{'id':'routes/checkout','parentId':'root','path':'checkout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/checkout-IQ4WLHVD.js','imports':['/build/_shared/chunk-YZPNLZH7.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/confirmation/$orderId':{'id':'routes/confirmation/$orderId','parentId':'root','path':'confirmation/:orderId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/confirmation/$orderId-IJKTX5YN.js','imports':['/build/_shared/chunk-YZPNLZH7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-LHMIPQMY.js','imports':['/build/_shared/chunk-L2Y367EV.js','/build/_shared/chunk-YZPNLZH7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/shop/$product':{'id':'routes/shop/$product','parentId':'root','path':'shop/:product','index':undefined,'caseSensitive':undefined,'module':'/build/routes/shop/$product-T52LA4R5.js','imports':['/build/_shared/chunk-L2Y367EV.js','/build/_shared/chunk-YZPNLZH7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-500E357E.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/confirmation/$orderId.tsx\";\nimport * as route2 from \"./routes/shop/$product.tsx\";\nimport * as route3 from \"./routes/checkout.tsx\";\nimport * as route4 from \"./routes/index.tsx\";\nimport * as route5 from \"./routes/cart.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/confirmation/$orderId\": {\n      id: \"routes/confirmation/$orderId\",\n      parentId: \"root\",\n      path: \"confirmation/:orderId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/shop/$product\": {\n      id: \"routes/shop/$product\",\n      parentId: \"root\",\n      path: \"shop/:product\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/checkout\": {\n      id: \"routes/checkout\",\n      parentId: \"root\",\n      path: \"checkout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/cart\": {\n      id: \"routes/cart\",\n      parentId: \"root\",\n      path: \"cart\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAWA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,GAAK,CAAC;AAC5D,QAAI,OAAO,QAAQ;AACnB,WAAO,eAAe,SAAS,gBAAgB;AAAA,MAC7C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,KAAK;AAAA,MAAc;AAAA,IAC/C,CAAC;AACD,WAAO,eAAe,SAAS,8BAA8B;AAAA,MAC3D,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,KAAK;AAAA,MAA4B;AAAA,IAC7D,CAAC;AACD,WAAO,eAAe,SAAS,4BAA4B;AAAA,MACzD,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,KAAK;AAAA,MAA0B;AAAA,IAC3D,CAAC;AACD,WAAO,eAAe,SAAS,8BAA8B;AAAA,MAC3D,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,KAAK;AAAA,MAA4B;AAAA,IAC7D,CAAC;AACD,WAAO,eAAe,SAAS,wBAAwB;AAAA,MACrD,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,KAAK;AAAA,MAAsB;AAAA,IACvD,CAAC;AACD,WAAO,eAAe,SAAS,oCAAoC;AAAA,MACjE,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,KAAK;AAAA,MAAkC;AAAA,IACnE,CAAC;AACD,WAAO,eAAe,SAAS,sCAAsC;AAAA,MACnE,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,KAAK;AAAA,MAAoC;AAAA,IACrE,CAAC;AACD,WAAO,eAAe,SAAS,mCAAmC;AAAA,MAChE,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,KAAK;AAAA,MAAiC;AAAA,IAClE,CAAC;AAaD,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,GAAK,CAAC;AAC5D,QAAI,gBAAgB,QAAQ;AAC5B,WAAO,eAAe,SAAS,iBAAiB;AAAA,MAC9C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,cAAc;AAAA,MAAe;AAAA,IACzD,CAAC;AACD,WAAO,eAAe,SAAS,YAAY;AAAA,MACzC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,cAAc;AAAA,MAAU;AAAA,IACpD,CAAC;AACD,WAAO,eAAe,SAAS,aAAa;AAAA,MAC1C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,cAAc;AAAA,MAAW;AAAA,IACrD,CAAC;AACD,WAAO,eAAe,SAAS,QAAQ;AAAA,MACrC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,cAAc;AAAA,MAAM;AAAA,IAChD,CAAC;AACD,WAAO,eAAe,SAAS,YAAY;AAAA,MACzC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,cAAc;AAAA,MAAU;AAAA,IACpD,CAAC;AAaD,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,GAAK,CAAC;AAC5D,QAAI,QAAQ,QAAQ;AACpB,WAAO,eAAe,SAAS,QAAQ;AAAA,MACrC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAM;AAAA,IACxC,CAAC;AACD,WAAO,eAAe,SAAS,QAAQ;AAAA,MACrC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAM;AAAA,IACxC,CAAC;AACD,WAAO,eAAe,SAAS,SAAS;AAAA,MACtC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAO;AAAA,IACzC,CAAC;AACD,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAY;AAAA,IAC9C,CAAC;AACD,WAAO,eAAe,SAAS,QAAQ;AAAA,MACrC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAM;AAAA,IACxC,CAAC;AACD,WAAO,eAAe,SAAS,WAAW;AAAA,MACxC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAS;AAAA,IAC3C,CAAC;AACD,WAAO,eAAe,SAAS,qBAAqB;AAAA,MAClD,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAmB;AAAA,IACrD,CAAC;AACD,WAAO,eAAe,SAAS,gBAAgB;AAAA,MAC7C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAc;AAAA,IAChD,CAAC;AACD,WAAO,eAAe,SAAS,eAAe;AAAA,MAC5C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAa;AAAA,IAC/C,CAAC;AACD,WAAO,eAAe,SAAS,WAAW;AAAA,MACxC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAS;AAAA,IAC3C,CAAC;AACD,WAAO,eAAe,SAAS,qBAAqB;AAAA,MAClD,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAmB;AAAA,IACrD,CAAC;AACD,WAAO,eAAe,SAAS,iBAAiB;AAAA,MAC9C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAe;AAAA,IACjD,CAAC;AACD,WAAO,eAAe,SAAS,mBAAmB;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAiB;AAAA,IACnD,CAAC;AACD,WAAO,eAAe,SAAS,YAAY;AAAA,MACzC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAU;AAAA,IAC5C,CAAC;AACD,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAY;AAAA,IAC9C,CAAC;AACD,WAAO,eAAe,SAAS,eAAe;AAAA,MAC5C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAa;AAAA,IAC/C,CAAC;AACD,WAAO,eAAe,SAAS,iBAAiB;AAAA,MAC9C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAe;AAAA,IACjD,CAAC;AACD,WAAO,eAAe,SAAS,iBAAiB;AAAA,MAC9C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAe;AAAA,IACjD,CAAC;AACD,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAY;AAAA,IAC9C,CAAC;AACD,WAAO,eAAe,SAAS,aAAa;AAAA,MAC1C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAW;AAAA,IAC7C,CAAC;AACD,WAAO,eAAe,SAAS,iBAAiB;AAAA,MAC9C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAe;AAAA,IACjD,CAAC;AACD,WAAO,eAAe,SAAS,UAAU;AAAA,MACvC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAQ;AAAA,IAC1C,CAAC;AACD,WAAO,eAAe,SAAS,WAAW;AAAA,MACxC,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAS;AAAA,IAC3C,CAAC;AACD,WAAO,eAAe,SAAS,eAAe;AAAA,MAC5C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAa;AAAA,IAC/C,CAAC;AACD,WAAO,eAAe,SAAS,eAAe;AAAA,MAC5C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAa;AAAA,IAC/C,CAAC;AACD,WAAO,eAAe,SAAS,qBAAqB;AAAA,MAClD,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAmB;AAAA,IACrD,CAAC;AACD,WAAO,eAAe,SAAS,aAAa;AAAA,MAC1C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAW;AAAA,IAC7C,CAAC;AACD,WAAO,eAAe,SAAS,oBAAoB;AAAA,MACjD,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAkB;AAAA,IACpD,CAAC;AACD,WAAO,eAAe,SAAS,aAAa;AAAA,MAC1C,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAW;AAAA,IAC7C,CAAC;AACD,WAAO,eAAe,SAAS,mBAAmB;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAiB;AAAA,IACnD,CAAC;AACD,WAAO,eAAe,SAAS,mBAAmB;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AAAE,eAAO,MAAM;AAAA,MAAiB;AAAA,IACnD,CAAC;AAAA;AAAA;;;ACxND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA,oBAA+B,6BAC/B,eAA4B,yBAD5B,2DAIM,SAAS,QAAQ;AACvB,OAAO,OAAO;AAEC,SAAR,cACL,SACA,oBACA,iBACA,cACA;AACA,MAAM,aAAS;AAAA,IACb,mDAAC;AAAA,MAAY,SAAS;AAAA,MAAc,KAAK,QAAQ;AAAA,OAAjD;AAAA;AAAA;AAAA;AAAA,WAAsD;AAAA,EACxD;AAEA,yBAAgB,IAAI,gBAAgB,WAAW,GAExC,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA,EACX,CAAC;AACH;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,gBAWO;;;;;;ACXP,mBAA8D;;;ACA9D,IAAM,WAAW;AAEjB,eAAsB,oBAAoB;AACxC,MAAI;AACF,QAAM,QAAQ,MAAM,aAAa,QAAQ,QAAQ;AACjD,QAAI;AACF,aAAO,KAAK,MAAM,KAAK;AAAA,EAE3B,QAAE;AAAA,EAEF;AACA,SAAO,CAAC;AACV;AAEO,SAAS,eAAe,MAAU;AACvC,MAAI;AACF,WAAO,aAAa,QAAQ,UAAU,KAAK,UAAU,IAAI,CAAC;AAAA,EAC5D,QAAE;AAAA,EAEF;AACF;;;ACpBA,mBAAoB,2BAEP,eAAe;AAAA,EAC1B,QAAQ;AAAA,EAUR,cAAc;AAAA,IACZ,MAAM,CAAC;AAAA,IACP,aAAa;AAAA,IAOb,oBAAoB;AAAA,IAMpB,eAAe;AAAA,EACjB;AAAA,EAGA,cAAc;AAAA,EAGd,mBAAmB,CAAC;AACtB,GAEO,sBAAQ,aAAAC,SAAQ,SAAiB,OAAO,EAAE,WAAW,KAAK,GAAG;AAOlE,UADA,MAAM,4BAA4B,IAC1B;AAAA,SACD,WAAW;AACd,MAAI,MAAM,WAAW,mBACf,KAAK,SACP,MAAM,eAAe,QAAQ,aAAa,cAErC,MAAM,aAAa,SACtB,MAAM,aAAa,OAAO,aAAa,aAAa,QAGxD,MAAM,SAAS;AAEjB;AAAA,IACF;AAAA,SAEK,kBAAkB;AACrB,YAAM,eAAe,KAAK,cAC1B,MAAM,eAAe,KAAK,cAC1B,MAAM,4BAA4B,IAClC,MAAM,SAAS;AACf;AAAA,IACF;AAAA,SAEK,4BAA4B;AAC/B,YAAM,aAAa,qBAAqB,KAAK;AAC7C;AAAA,IACF;AAAA,SAEK,uBAAuB;AAC1B,YAAM,aAAa,gBAAgB,KAAK;AACxC;AAAA,IACF;AAAA,SAEK,wBAAwB;AAC3B,YAAM,SAAS;AACf;AAAA,IACF;AAAA,SAEK,uBAAuB;AAC1B,YAAM,SAAS;AACf;AAAA,IACF;AAAA,SAEK,SAAS;AACZ,YAAM,eAAe,aAAa,cAClC,MAAM,SAAS;AACf;AAAA,IACF;AAAA,SAEK;AAAA,SACA;AAAA,SACA;AAAA,SACA,kBAAkB;AACrB,UAAM,EAAE,IAAI,KAAK,MAAM,yBAAyB,WAAW,MAAM,IAAI;AAErE,UAAI,CAAC,OAAO,CAAC;AACX,cAAM,IAAI,MAAM,uCAAuC,QAAQ;AAGjE,UAAM,YAAY,MAAM,aAAa,KAAK,UAAU,CAAC,MAAM,EAAE,QAAQ,GAAG;AAExE,UAAI,cAAc;AAChB,YAAI,WAAW;AACb,gBAAM,aAAa,KAAK,OAAO,WAAW,CAAC;AAAA,aACtC;AACL,cAAM,OAAO,MAAM,aAAa,KAAK;AAErC,UAAI,WAAW,mBACb,KAAK,YAAY,IAEjB,KAAK,YAAY;AAAA,QAErB;AAAA;AAEA,QAAK,CAAC,eAAe,gBAAgB,EAAE,SAAS,MAAM,KACpD,MAAM,aAAa,KAAK,KAAK;AAAA,UAC3B;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,UAAU;AAAA,UACV;AAAA,QACF,CAAC;AAIL,YAAM,SAAS;AAEf;AAAA,IACF;AAAA,SAEK,qBAAqB;AACxB,YAAM,eAAe,KAAK,cAC1B,MAAM,SAAS,SAQb,OAAO,IAAI,8CAA8C,eACzD,OAAO,IAAI,oBACT,uDAEF,MAAM,aAAa,OAAO,MAAM,aAAa,KAAK;AAAA,QAChD,CAAC,EAAE,IAAI,KAAK,MAAM,UAAU,MAAM,OAAO;AAAA,UACvC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,wBAAwB;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AAGF;AAAA,IACF;AAAA,SAEK,kBAAkB;AACrB,YAAM,oBAAoB;AAAA,QACxB,MAAM,KAAK,IAAI;AAAA,QACf,KAAK,KAAK;AAAA,MACZ;AACA;AAAA,IACF;AAAA,SAEK,eAAe;AAClB,YAAM,aAAa,cAAc,KAAK,aACtC,MAAM,SAAS;AACf;AAAA,IACF;AAAA,SAEK,kBAAkB;AACrB,YAAM,aAAa,cAAc,aAAa,aAAa,aAC3D,MAAM,SAAS;AACf;AAAA,IACF;AAAA;AAGE,YAAM,IAAI,MAAM,UAAU,sBAAsB;AAAA;AAKpD,EAAI,MAAM,aAAa,KAAK,SAAS,MACnC,MAAM,aAAa,OAAO,MAAM,aAAa,KAAK;AAAA,IAChD,SAA0B,EAAE,MAAM,IAAI,GAAG;AACvC,aAAO,QAAQ;AAAA,IACjB;AAAA,EACF,IAGF,MAAM,gBAAgB,MAAM,aAAa,KAAK;AAAA,IAC5C,CAAC,KAAK,MAAM,MAAM,EAAE;AAAA,IACpB;AAAA,EACF;AACF,CAAC;;;ACrMD,IAAI;AAEA,OAAO,SAAW,OAAe,sBAAsB,WACzD,UAAU,IAAI,iBAAiB,YAAY;AAGtC,SAAS,aAAa;AAC3B,SAAO;AACT;;;ACdA,IAAM,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAuClB,2BAAQ;;;ACvCf,eAAO,WAAkC;AAAA,EACvC,MAAM;AAAA,EACN;AAAA,EACA;AACF,GAAG;AACD,MAAM,OAAO,KAAK,UAAU,EAAE,OAAO,UAAU,CAAC,GAE1C,WAAW,MAAM,MAAM,KAAK;AAAA,IAChC,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,gBAAgB;AAAA,IAClB;AAAA,IACA;AAAA,EACF,CAAC;AAED,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,MAAM,MAAM,SAAS,KAAK,CAAC;AAGvC,MAAMC,QAAO,MAAM,SAAS,KAAK;AAEjC,SAAIA,MAAK,UACP,QAAQ,MAAM,oCAAoCA,MAAK,MAAM,GAGxDA;AACT;;;AL1BA,+DAQM,gBAAgB,aAAAC,QAAM,cAAc,MAAS,GAEtC,YAAY,MAAM,aAAAA,QAAM,WAAW,aAAa;AAE7D,SAAS,qBAAqB,EAAE,IAAI,KAAK,MAAM,UAAU,wBAAwB,MAAM,GAAG;AACxF,SAAO,EAAE,IAAI,KAAK,MAAM,UAAU,wBAAwB,MAAM;AAClE;AAEO,SAAS,eAAe,EAAE,QAAAC,SAAQ,SAAS,GAAG;AACnD,MAAM;AAAA,IACJ;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF,QAAI,yBAAW,iBAAS,YAAY,GAE9B,uBAAmB,qBAAO,WAAW,CAAC;AAE5C,8BAAU,MAAM;AAEd,KAAC,iBAAsB;AACrB,UAAM,QAAQ,MAAM,kBAAkB;AACtC,eAAS,EAAE,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,IAC1C,GAAG,GAGC,iBAAiB,YACnB,iBAAiB,QAAQ,YAAY,SAAU,OAAO;AACpD,eAAS,EAAE,QAAQ,kBAAkB,GAAG,KAAK,MAAM,MAAM,IAAI,EAAE,CAAC;AAAA,IAClE;AAAA,EAEJ,GAAG,CAAC,CAAC,OAGL,wBAAU,MAAM;AACd,IAAI,WAAW,kBACb,eAAe;AAAA,MACb,GAAG;AAAA,MACH,MAAM,aAAa,KAAK,IAAI,oBAAoB;AAAA,IAClD,CAAC;AAAA,EAEL,GAAG,CAAC,QAAQ,YAAY,CAAC,OAOzB,wBAAU,MAAM;AA7DlB;AA8DI,IAAI,WAAW,YACR,8BACH,sBAAiB,YAAjB,WAA0B;AAAA,MACxB,KAAK,UAAU;AAAA,QACb;AAAA,QACA;AAAA,MACF,CAAC;AAAA;AAAA,EAIT,GAAG,CAAC,QAAQ,cAAc,cAAc,yBAAyB,CAAC;AAMlE,MAAM,kBAAc;AAAA,IAClB,OAAO;AAAA,MACL,QAAAA;AAAA,MACA,MAAM,aAAa,KAAK,IAAI,oBAAoB;AAAA,MAChD,aAAa,aAAa;AAAA,MAE1B,oBAAoB,aAAa;AAAA,MACjC,eAAe,aAAa;AAAA,IAC9B;AAAA,IACA,CAACA,SAAQ,YAAY;AAAA,EACvB;AAGA,8BAAU,MAAM;AACd,QAAI,QAAQ;AAEZ,mBAAe,kBAAkB;AAC/B,UAAI;AACF,YAAM,WAAW,MAAM,WAAW;AAAA,UAChC,OAAO;AAAA,UACP,WAAW;AAAA,YACT;AAAA,UACF;AAAA,QACF,CAAC;AAED,QAAI,CAAC,SAAS,SAAS,QACrB,SAAS;AAAA,UACP,QAAQ;AAAA,UACR,cAAc,SAAS,KAAK;AAAA,QAC9B,CAAC;AAAA,MAEL,SAAS,OAAP;AACA,gBAAQ,IAAI,KAAK,GACjB,SAAS;AAAA,UACP,QAAQ;AAAA,QACV,CAAC;AAAA,MACH;AAAA,IACF;AAEA,QAAI;AACJ,WAAI,WAAW,6BACb,UAAU,WAAW,iBAAiB,GAAG,IAGpC,MAAM;AACX,cAAQ,IACR,aAAa,OAAO;AAAA,IACtB;AAAA,EACF,GAAG,CAAC,QAAQA,QAAO,8BAA8B,WAAW,CAAC;AAE7D,WAAS,uBAAuB,QAAQ;AACtC,WAAO,CAAC,SAAS,SAAS,EAAE,QAAQ,GAAG,KAAK,CAAC;AAAA,EAC/C;AAEA,WAAS,eAAe,MAAM;AAE5B,QAAI,KAAK,IAAI,WAAW,aAAa;AACnC,aAAO;AAGT,QAAM,uBAAuB,aAAa,KAAK;AAAA,MAC7C,CAAC,MAAM,EAAE,QAAQ,KAAK;AAAA,IACxB;AAMA,WAAK,uBAIE;AAAA,MACL,GAAG;AAAA,MACH,UAAU,qBAAqB;AAAA,IACjC,IANS;AAAA,EAOX;AAEA,MAAM,SAAQ,6CAAc,SAAQ,CAAC,GAAG,IAAI,cAAc,EAAE,OAAO,OAAO;AAO1E,SAAI,WAAW,yBAEX,mDAAC;AAAA,IAAI,OAAO,EAAE,QAAQ,UAAU,UAAU,KAAK,SAAS,GAAG;AAAA,IAAG;AAAA;AAAA,MAE5D,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAI;AAAA,MACJ,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAI;AAAA,MACJ,mDAAC;AAAA,QAAO,SAAS,MAAM,SAAS,EAAE,QAAQ,sBAAsB,CAAC;AAAA,QAAG;AAAA,SAApE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KANF;AAAA;AAAA;AAAA;AAAA,SAOA,IAKF,mDAAC,cAAc,UAAd;AAAA,IACC,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAO,6CAAc,UAAS,CAAC;AAAA,MAC/B;AAAA,MACA;AAAA,MACA,SAAS;AAAA,QACP,gBAAgB,CAAC,gBACf,SAAS,EAAE,QAAQ,eAAe,YAAY,CAAC;AAAA,QACjD,mBAAmB,MAAM,SAAS,EAAE,QAAQ,iBAAiB,CAAC;AAAA,QAC9D,OAAO,MAAM,SAAS,EAAE,QAAQ,QAAQ,CAAC;AAAA,QACzC,SAAS,uBAAuB,UAAU;AAAA,QAC1C,YAAY,uBAAuB,aAAa;AAAA,QAChD,eAAe,uBAAuB,gBAAgB;AAAA,QACtD,eAAe,uBAAuB,gBAAgB;AAAA,QACtD,eAAe,CAAC,QAAQ,SAAS,EAAE,QAAQ,kBAAkB,IAAI,CAAC;AAAA,QAClE,uBAAuB,CAAC,uBACtB,SAAS;AAAA,UACP,QAAQ;AAAA,UACR;AAAA,QACF,CAAC;AAAA,QACH,kBAAkB,CAAC,kBACjB,SAAS,EAAE,QAAQ,uBAAuB,cAAc,CAAC;AAAA,MAC7D;AAAA,IACF;AAAA,IAEC;AAAA,KA5BH;AAAA;AAAA;AAAA;AAAA,SA6BA;AAEJ;;;AMhNO,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,aAAa;AAAA,EACb,8BAA8B;AAAA,EAC9B,yBAAyB;AAC3B;;;ACNA,+DAGa,eAAe,MAAM;AAChC,MAAI,eACE,SAAS,UAAU;AAEzB,SAAI,SACF,gBAAgB,OAAO,gBAEvB,gBAAgB,KAIhB,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb;AAAA,yDAAC;AAAA,QACC,OAAM;AAAA,QACN,QAAO;AAAA,QACP,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,OAAM;AAAA,QAEN;AAAA,6DAAC;AAAA,YACC,GAAE;AAAA,YACF,MAAK;AAAA,aAFP;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,mDAAC;AAAA,YACC,GAAE;AAAA,YACF,MAAK;AAAA,aAFP;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,mDAAC;AAAA,YACC,GAAE;AAAA,YACF,MAAK;AAAA,aAFP;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,mDAAC;AAAA,YACC,GAAE;AAAA,YACF,MAAK;AAAA,aAFP;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA;AAAA,SAtBF;AAAA;AAAA;AAAA;AAAA,aAuBA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACZ;AAAA,SADH;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KA5BF;AAAA;AAAA;AAAA;AAAA,SA6BA;AAEJ;;;AR5BA,yBAAiD;;;ASjBjD,IAAAC,gBAAqB;;;;;;AAArB,+DAIa,iBAAiB,MAE1B,mDAAC;AAAA,EAAI,WAAU;AAAA,EACb;AAAA,uDAAC;AAAA,MAAI,KAAK,GAAG;AAAA,OAAb;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,IACtB,mDAAC;AAAA,MAAE,WAAU;AAAA,MAAwB;AAAA,OAArC;AAAA;AAAA;AAAA;AAAA,WAA+D;AAAA,IAC/D,mDAAC;AAAA,MAAK,UAAS;AAAA,MAAS,IAAG;AAAA,MAAI,WAAU;AAAA,MAAoD;AAAA,OAA7F;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA;AAAA,GALF;AAAA;AAAA;AAAA;AAAA,OAMA;;;ATZJ,+DAoBM,cAAc,IAAI,+BAAY,GAEvB,OAAqB,OACzB,EAAE,OAAO,SAAS;AAGpB,SAAS,QAAQ;AACtB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM,iBAAe,CAAC;AACrD;AAEO,IAAM,SAAyB,OAC7B;AAAA,EACL,KAAK;AAAA,IACH,iBAAiB,QAAQ,IAAI;AAAA,IAC7B,mBAAmB,QAAQ,IAAI;AAAA,IAC/B,qBAAqB,QAAQ,IAAI;AAAA,EACnC;AACF;AAGa,SAAR,MAAuB;AAC5B,MAAM,WAAO,6BAAc;AAE3B,SAAI,OAAO,SAAW,OACpB,OAAO,iBAAiB,QAAQ,WAAY;AAC1C,cAAU,cAAc,SAAS,QAAQ,EAAE;AAAA,MACzC,SAAU,cAAc;AACtB,gBAAQ;AAAA,UACN;AAAA,UACA,aAAa;AAAA,QACf;AAAA,MACF;AAAA,MACA,SAAU,KAAK;AACb,gBAAQ,IAAI,uCAAuC,GAAG;AAAA,MACxD;AAAA,IACF;AAAA,EACF,CAAC,GAID,mDAAC;AAAA,IAAK,MAAK;AAAA,IAAK,WAAU;AAAA,IACxB;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YAAK,SAAQ;AAAA,aAAd;AAAA;AAAA;AAAA;AAAA,iBAAsB;AAAA,UACtB,mDAAC;AAAA,YAAK,MAAK;AAAA,YAAW,SAAQ;AAAA,aAA9B;AAAA;AAAA;AAAA;AAAA,iBAAmE;AAAA,UACnE,mDAAC;AAAA,YAAK,MAAK;AAAA,YAA+B,SAAQ;AAAA,aAAlD;AAAA;AAAA;AAAA;AAAA,iBAAwD;AAAA,UACxD,mDAAC;AAAA,YAAK,MAAK;AAAA,YAAyB,SAAQ;AAAA,aAA5C;AAAA;AAAA;AAAA;AAAA,iBAAkD;AAAA,UAClD,mDAAC;AAAA,YACC,KAAI;AAAA,YACJ,MAAK;AAAA,aAFP;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,mDAAC;AAAA,YACC,KAAI;AAAA,YACJ,MAAK;AAAA,YACL,MAAK;AAAA,aAHP;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,mDAAC;AAAA,YAAK,MAAK;AAAA,YAA0B,SAAQ;AAAA,aAA7C;AAAA;AAAA;AAAA;AAAA,iBAAuD;AAAA,UACvD,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,aAFV;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,mDAAC;AAAA,YAAK,MAAK;AAAA,YAAc,SAAQ;AAAA,aAAjC;AAAA;AAAA;AAAA;AAAA,iBAA2C;AAAA,UAC3C,mDAAC;AAAA,YACC,KAAI;AAAA,YACJ,MAAK;AAAA,aAFP;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,mDAAC;AAAA,YAAK,MAAK;AAAA,YAA6B,SAAQ;AAAA,aAAhD;AAAA;AAAA;AAAA;AAAA,iBAAyD;AAAA,UACzD,mDAAC;AAAA,YAAK,KAAI;AAAA,YAAW,MAAK;AAAA,aAA1B;AAAA;AAAA;AAAA;AAAA,iBAA2C;AAAA,UAE3C,mDAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,UACN,mDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,iBAAO;AAAA,UAEP,mDAAC;AAAA,YAAO,0BAA0B;AAAA,YAAM,MAAK;AAAA,YAEzC;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,mDAAC;AAAA,YACC,OAAK;AAAA,YACL,KAAI;AAAA,aAFN;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA;AAAA,SAtCF;AAAA;AAAA;AAAA;AAAA,aAuCA;AAAA,MACA,mDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YAAoB,QAAQ;AAAA,YAC3B,6DAAC;AAAA,cAAe;AAAA,cACd,6DAAC;AAAA,gBACC;AAAA,qEAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,yBAAQ;AAAA,kBACR,mDAAC;AAAA,oBACC,yBAAyB;AAAA,sBACvB,QAAQ,gBAAgB,KAAK,UAAU,KAAK,GAAG;AAAA,oBACjD;AAAA,qBAHF;AAAA;AAAA;AAAA;AAAA,yBAIC;AAAA,kBAED,mDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,yBAAmB;AAAA,kBAClB,KAAK,IAAI,wBAAwB,iBAAiB,mDAAC,8BAAD;AAAA;AAAA;AAAA;AAAA,yBAAY;AAAA;AAAA,iBATjE;AAAA;AAAA;AAAA;AAAA,qBAUA;AAAA,eAXF;AAAA;AAAA;AAAA;AAAA,mBAYA;AAAA,aAbF;AAAA;AAAA;AAAA;AAAA,iBAcA;AAAA,UACA,mDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA;AAAA,SAhBX;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA;AAAA,KA1DF;AAAA;AAAA;AAAA;AAAA,SA2DA;AAEJ;AAEA,SAAS,OAAO,EAAE,SAAS,GAAG;AAC5B,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb;AAAA,yDAAC;AAAA,QAAO,WAAU;AAAA,QAChB,6DAAC;AAAA,UAAI,WAAU;AAAA,UACb;AAAA,+DAAC;AAAA,cACC,UAAS;AAAA,cACT,IAAG;AAAA,cACH,OAAM;AAAA,cACN,WAAU;AAAA,cAEV,6DAAC,UAAD;AAAA;AAAA;AAAA;AAAA,qBAAM;AAAA,eANR;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA,YACA,mDAAC;AAAA,cACC,UAAS;AAAA,cACT,IAAG;AAAA,cACH,OAAM;AAAA,cACN,WAAU;AAAA,cAEV,6DAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,qBAAc;AAAA,eANhB;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA;AAAA,WAhBF;AAAA;AAAA;AAAA;AAAA,eAiBA;AAAA,SAlBF;AAAA;AAAA;AAAA;AAAA,aAmBA;AAAA,MACA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACb,6DAAC;AAAA,UAAI,WAAU;AAAA,UAAqC;AAAA,WAApD;AAAA;AAAA;AAAA;AAAA,eAA6D;AAAA,SAD/D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAO,WAAU;AAAA,QAChB,6DAAC;AAAA,UAAI,WAAU;AAAA,UACb,6DAAC;AAAA,YACC,UAAS;AAAA,YACT,IAAG;AAAA,YACH,OAAM;AAAA,YACN,WAAU;AAAA,YAEV,6DAAC,UAAD;AAAA;AAAA;AAAA;AAAA,mBAAM;AAAA,aANR;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,WARF;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,SAVF;AAAA;AAAA;AAAA;AAAA,aAWA;AAAA;AAAA,KAnCF;AAAA;AAAA;AAAA;AAAA,SAoCA;AAEJ;AAEA,SAAS,KAAK,OAA8C;AAC1D,SACE,mDAAC;AAAA,IACC,SAAQ;AAAA,IACR,IAAG;AAAA,IACH,OAAM;AAAA,IACN,YAAW;AAAA,IACX,OAAM;AAAA,IACN,QAAO;AAAA,IACP,SAAQ;AAAA,IAER;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YACC,MAAK;AAAA,YACL,GAAE;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,GAAE;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,GAAE;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,GAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UACA,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,GAAE;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UACA,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,GAAE;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA;AAAA,SAvCF;AAAA;AAAA;AAAA;AAAA,aAwCA;AAAA,MACA,mDAAC;AAAA,QACC,MAAK;AAAA,QACL,GAAE;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,MAAK;AAAA,QACL,GAAE;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA;AAAA,KA9DF;AAAA;AAAA;AAAA;AAAA,SA+DA;AAEJ;AAEO,SAAS,gBAAgB;AAC9B,SACE,mDAAC;AAAA,IAAK,WAAU;AAAA,IACd;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YAAM;AAAA,aAAP;AAAA;AAAA;AAAA;AAAA,iBAAa;AAAA,UACb,mDAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,UACN,mDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,iBAAO;AAAA;AAAA,SAHT;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QAAK,OAAO,EAAE,QAAQ,QAAQ;AAAA,QAC7B;AAAA,6DAAC;AAAA,YACC,6DAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,mBAAgB;AAAA,aADlB;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA;AAAA,KAXF;AAAA;AAAA;AAAA;AAAA,SAYA;AAEJ;AAEO,SAAS,gBAAgB;AAC9B,SACE,mDAAC;AAAA,IAAK,WAAU;AAAA,IACd;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YAAM;AAAA,aAAP;AAAA;AAAA;AAAA;AAAA,iBAAa;AAAA,UACb,mDAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,UACN,mDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,iBAAO;AAAA;AAAA,SAHT;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QAAK,OAAO,EAAE,QAAQ,QAAQ;AAAA,QAC7B;AAAA,6DAAC;AAAA,YACC,6DAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,mBAAgB;AAAA,aADlB;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA;AAAA,KAXF;AAAA;AAAA;AAAA;AAAA,SAYA;AAEJ;;;AU5QA;AAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA;;;ACAA,6BAA8B,4BAExB,oBAAoB,yDAEb,kBAAkB,IAAI,qCAAc,iBAAiB,GAIrD,mBAAmB,IAAI;AAAA,EAChC;AAAA,EACA;AAAA,IACE,aAAa;AAAA,IACb,MAAM;AAAA,EACR;AACF;;;ACGK,IAAM,mBAAmB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,uBAAsB,WAAY,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,qBAAsB,CAAC,EAAC,MAAO,sBAAqB,UAAW,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,EAAC,GAAE,MAAO,EAAC,MAAO,eAAc,MAAO,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,EAAC,EAAC,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,GAAE,OAAQ,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,EAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC;;;AFX3tB,IAAAC,gBAA8C;;;AGN9C,IAAAC,gBAA0B;AAA1B;AAIe,SAAR,aAA8B,EAAE,OAAO,QAAQ,GAAG;AACvD,MAAM,SAAS,UAAU;AAczB,MAZI,WACF,OAAO,QAAQ,MAAM,OAGvB,yBAAU,MAAM;AACd,QAAI,CAAC,OAAO;AACV,UAAM,IAAI,WAAW,MAAM,OAAO,SAAS,OAAO,GAAG,GAAI;AAEzD,aAAO,MAAM,aAAa,CAAC;AAAA,IAC7B;AAAA,EACF,GAAG,CAAC,KAAK,CAAC,GAEN,CAAC;AACH,WAAO,mDAAC;AAAA,MAAE;AAAA,OAAH;AAAA;AAAA;AAAA;AAAA,WAAc;AAGvB,MAAM,OAAO,MAAM,KAAK,IAAI,CAAC,UAAU;AAAA,IACrC,GAAG;AAAA,IACH,OAAO;AAAA,MACL,KAAK,KAAK;AAAA,IACZ;AAAA,EACF,EAAE,GAEI,EAAE,MAAM,IAAI;AAElB,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb,6DAAC;AAAA,MACC;AAAA,2DAAC;AAAA,UAAG,WAAU;AAAA,UAA0B;AAAA,WAAxC;AAAA;AAAA;AAAA;AAAA,eAAoD;AAAA,QACpD,mDAAC;AAAA,UAAE,WAAU;AAAA,UAAO;AAAA;AAAA,YAA4B,MAAM;AAAA,YAAG;AAAA;AAAA,WAAzD;AAAA;AAAA;AAAA;AAAA,eAA0D;AAAA,QAC1D,mDAAC;AAAA,UACE;AAAA,iBAAK,IAAI,CAAC,MAAM,UAEb,mDAAC;AAAA,cAAgB,WAAU;AAAA,cACzB;AAAA,mEAAC;AAAA,kBACC,6DAAC;AAAA,oBACE;AAAA,2BAAK;AAAA,sBAAK;AAAA,sBAAI,KAAK;AAAA;AAAA,qBADtB;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,mBAHF;AAAA;AAAA;AAAA;AAAA,uBAIA;AAAA,gBACA,mDAAC;AAAA,kBAAE;AAAA;AAAA,oBAAE,KAAK,MAAM,QAAQ,KAAK;AAAA;AAAA,mBAA7B;AAAA;AAAA;AAAA;AAAA,uBAAsC;AAAA;AAAA,eAN9B,OAAV;AAAA;AAAA;AAAA;AAAA,mBAOA,CAEH;AAAA,YACD,mDAAC;AAAA,cAAI,WAAU;AAAA,cACb;AAAA,mEAAC;AAAA,kBAAI,WAAU;AAAA,kBACb;AAAA,uEAAC;AAAA,sBAAE;AAAA,uBAAH;AAAA;AAAA;AAAA;AAAA,2BAAQ;AAAA,oBACR,mDAAC;AAAA,sBAAE;AAAA;AAAA,wBAAE,MAAM;AAAA;AAAA,uBAAX;AAAA;AAAA;AAAA;AAAA,2BAAiB;AAAA;AAAA,mBAFnB;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,gBACA,mDAAC;AAAA,kBAAI,WAAU;AAAA,kBACb;AAAA,uEAAC;AAAA,sBAAE;AAAA,uBAAH;AAAA;AAAA;AAAA;AAAA,2BAAW;AAAA,oBACX,mDAAC;AAAA,sBAAE;AAAA;AAAA,wBAAE,MAAM,MAAM,MAAM;AAAA;AAAA,uBAAvB;AAAA;AAAA;AAAA;AAAA,2BAA6B;AAAA;AAAA,mBAF/B;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,gBACA,mDAAC;AAAA,kBAAI,WAAU;AAAA,kBACb;AAAA,uEAAC;AAAA,sBAAE,WAAU;AAAA,sBAAY;AAAA,uBAAzB;AAAA;AAAA;AAAA;AAAA,2BAA8B;AAAA,oBAC9B,mDAAC;AAAA,sBAAE;AAAA;AAAA,wBAAE,MAAM;AAAA;AAAA,uBAAX;AAAA;AAAA;AAAA;AAAA,2BAAe;AAAA;AAAA,mBAFjB;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA;AAAA,eAZF;AAAA;AAAA;AAAA;AAAA,mBAaA;AAAA;AAAA,WA1BF;AAAA;AAAA;AAAA;AAAA,eA2BA;AAAA;AAAA,OA9BF;AAAA;AAAA;AAAA;AAAA,WA+BA;AAAA,KAhCF;AAAA;AAAA;AAAA;AAAA,SAiCA;AAEJ;;;AHpEA,+DAUaC,UAAyB,OAAO,EAAE,OAAO,OAM7C,EAAE,MALI,MAAM,iBAAiB,QAGlC,kBAAkB,EAAE,IAAI,OAAO,QAAkB,CAAC,EAEtC,IAGH,sBAAsB,MAAM;AAnBzC;AAqBE,MAAM,SAAQ,eADD,6BAAc,EACR,SAAL,mBAAW,WAAX,mBAAmB;AAEjC,SACE,mDAAC;AAAA,IACE,kBACC,mDAAC;AAAA,MAAa;AAAA,MAAc,SAAS;AAAA,OAArC;AAAA;AAAA;AAAA;AAAA,WAA2C,IAE3C,mDAAC;AAAA,MAAI,WAAU;AAAA,MACb,6DAAC;AAAA,QAAE;AAAA,SAAH;AAAA;AAAA;AAAA;AAAA,aAA0C;AAAA,OAD5C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,KANJ;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ,GAEO,kBAAQ;;;AIpCf;AAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA,IAAAC,gBAAkE;;;AC0jB3D,IAAM,wBAAwB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,oBAAmB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,GACtY,sBAAsB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,kBAAiB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,GACnf,qBAAqB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,iBAAgB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,GAC9X,qBAAqB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,iBAAgB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,GACtb,sBAAsB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,kBAAiB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,GACtb,sBAAsB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,kBAAiB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,GACpY,uBAAuB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,mBAAkB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,GAC1iB,mBAAmB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,GACp2B,oBAAoB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,eAAc,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,GAAG,iBAAiB,WAAW,EAAC,GAClhB,mBAAmB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,GAAG,iBAAiB,WAAW,EAAC,GACtrB,oBAAoB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,eAAc,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,GAAG,iBAAiB,WAAW,EAAC,GAClhB,iCAAiC,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,sBAAqB,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,6BAA4B,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,GAAG,sBAAsB,aAAY,GAAG,oBAAoB,aAAY,GAAG,iBAAiB,WAAW,EAAC,GACz1D,6BAA6B,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,kBAAiB,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,yBAAwB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,yBAAwB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,GACl9B,qBAAqB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,mBAAkB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,EAAC,GAAE,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,EAAC,GAAE,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,EAAC,GAAE,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,EAAC,GAAE,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,EAAC,GAAE,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,EAAC,GAAE,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,sBAAqB,EAAC,GAAE,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,kBAAiB,EAAC,CAAC,EAAC,EAAC,GAAE,GAAG,sBAAsB,aAAY,GAAG,oBAAoB,aAAY,GAAG,mBAAmB,aAAY,GAAG,mBAAmB,aAAY,GAAG,oBAAoB,aAAY,GAAG,oBAAoB,aAAY,GAAG,qBAAqB,aAAY,GAAG,kBAAkB,aAAY,GAAG,kBAAkB,aAAY,GAAG,+BAA+B,aAAY,GAAG,2BAA2B,WAAW,EAAC,GACt5C,0BAA0B,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,eAAc,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,sBAAqB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,GAAG,mBAAmB,WAAW,EAAC,GACzpB,uBAAuB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,sBAAqB,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,eAAc,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,GAAG,mBAAmB,aAAY,GAAG,wBAAwB,WAAW,EAAC;;;AC80C/oB,IAAM,kBAAkB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,uBAAsB,WAAY,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,qBAAsB,CAAC,EAAC,MAAO,sBAAqB,UAAW,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,MAAO,EAAC,MAAO,eAAc,MAAO,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,EAAC,EAAC,EAAC,GAAE,EAAC,MAAO,sBAAqB,UAAW,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,MAAO,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,eAAc,EAAC,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,OAAQ,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,GAAE,OAAQ,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,EAAC,GAAE,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,OAAQ,EAAC,MAAO,eAAc,OAAQ,MAAK,OAAQ,GAAK,EAAC,GAAE,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,OAAQ,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,OAAQ,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,GAAE,OAAQ,EAAC,MAAO,eAAc,OAAQ,SAAQ,OAAQ,GAAK,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,OAAQ,EAAC,MAAO,QAAO,OAAQ,OAAM,GAAE,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,GAAE,OAAQ,EAAC,MAAO,eAAc,OAAQ,QAAO,OAAQ,GAAK,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,OAAQ,EAAC,MAAO,QAAO,OAAQ,QAAO,GAAE,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,GAAE,OAAQ,EAAC,MAAO,eAAc,OAAQ,aAAY,OAAQ,GAAK,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,kBAAiB,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,iBAAgB,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,gBAAe,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,OAAQ,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,GAAE,OAAQ,EAAC,MAAO,eAAc,OAAQ,WAAU,OAAQ,GAAK,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,kBAAiB,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,uBAAsB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,kBAAiB,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,iBAAgB,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,MAAK,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,GAAG,qBAAqB,WAAW,EAAC;;;ACt5D7sO,oBAAmB,sCACnB,cAAiB,oCACjB,gBAAmB;AAEZ,SAAS,qBACd,KAC+B;AAC/B,SAAO,IAAI,SAAS;AACtB;AAEO,IAAM,mBAAe,cAAAC;AAAA,EAC1B,CAAC,QAAQ,IAAI,SAAS;AACxB,GAEa,0BAAsB,YAAAC;AAAA,MACjC,cAAAD,SAA+C,oBAAoB;AAAA,MACnE,cAAAE,SAA+B,CAAC,QAAQ,IAAI,IAAI;AAClD;AAEO,SAAS,sBAAsB,KAAiC;AACrE,SAAI,kBAAkB,MAAY,MAE3B,OAAO,OAAO,KAAK;AAAA,IACxB,cAAc;AAAA,IACd,aAAa;AAAA,MACX,GAAG,aAAa,IAAI,WAAW;AAAA,MAC/B,GAAG,oBAAoB,IAAI,WAAW;AAAA,IACxC;AAAA,EACF,CAAC;AACH;;;AC9BA,IAAAC,oCAAmC,mDACnCC,sBAAsB;;;ACAf,IAAM,mBAAmB,CAI9B,GACA,MAEO,KAAK,EAAE,eAAkB,IAC3B,IACD;;;ACVN,uCAAmC;AAGnC,yBAAsB,qCACtB,sBAAwB,kCAJxB,2DAYa,cAAc,CAAC,EAAE,MAAM,MAAM,MAEtC,mDAAC;AAAA,EAAI,WAAU;AAAA,EACZ;AAAA;AAAA,MACC,6BAAM;AAAA,MACN;AAAA,IACF,EAAE,WAAW,IAAI,CAAC,WAAW,UAAO;AAlB1C;AAmBQ,gEAAC;AAAA,QAAgB,WAAU;AAAA,QACzB;AAAA,6DAAC;AAAA,YAAI,WAAU;AAAA,YACZ;AAAA,wBAAU,SACT,mDAAC;AAAA,gBAAG,WAAU;AAAA,gBACX,iDAAW,MAAM;AAAA,iBADpB;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAED,UAAU,QACT,mDAAC;AAAA,gBACC,6DAAC;AAAA,kBAAmB,OAAM,eAAU,SAAV,mBAAgB;AAAA,mBAA1C;AAAA;AAAA;AAAA;AAAA,uBAAyD;AAAA,iBAD3D;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA;AAAA,aATJ;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UACC,UAAU,UACT,mDAAC;AAAA,YAAI,WAAU;AAAA,YACZ,uDAAW,WAAX,mBAAmB,IAAI,CAAC,UACvB,mDAAC;AAAA,cACE,GAAG;AAAA,cACJ,OAAM;AAAA,cACN,WAAU;AAAA,cACV,SAAQ;AAAA,eAJV;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,aAPJ;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA,UAED,UAAU,UACT,mDAAC;AAAA,YAAI,WAAU;AAAA,YACb,6DAAC,oBAAAC,SAAA;AAAA,cACC,UAAQ;AAAA,cACR,MACE,uCAAW,YACX,uCAAW,OAAO,UAAS,MAC3B,uCAAW,OAAO,GAAG,UAAU;AAAA,cAEjC,OAAM;AAAA,cACN,QAAO;AAAA,cACP,QACE,uCAAW,YACX,uCAAW,OAAO,UAAS,MAC3B,uCAAW,OAAO,GAAG,gBACrB,uCAAW,OAAO,GAAG,WAAW,UAAS,MACzC,uCAAW,OAAO,GAAG,WAAW,GAAG;AAAA,cAErC,SAAS;AAAA,eAhBX;AAAA;AAAA;AAAA;AAAA,mBAiBA;AAAA,aAlBF;AAAA;AAAA;AAAA;AAAA,iBAmBA;AAAA;AAAA,SA7CM,OAAV;AAAA;AAAA;AAAA;AAAA,aA+CA;AAAA,KACD;AAAA,IACA,iBAAiB,+BAAO,SAAS,wBAAwB,EAAE,SAAS;AAAA,MACnE,CAAC,SAAS,UACR,mDAAC;AAAA,QAEC,WAAU;AAAA,QAEV;AAAA,6DAAC;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAG,WAAU;AAAA,gBAA2B,6CAAS;AAAA,iBAAlD;AAAA;AAAA;AAAA;AAAA,qBAAwD;AAAA,cACxD,mDAAC;AAAA,gBAAE,WAAU;AAAA,gBAAS;AAAA,iBAAtB;AAAA;AAAA;AAAA;AAAA,qBAA4B;AAAA;AAAA,aAF9B;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,mDAAC;AAAA,YAAI,WAAU;AAAA,YACZ,kBAAQ,WAAW,IAAI,CAAC,UAAUC,WACjC,mDAAC;AAAA,cAEC,WAAU;AAAA,cAEV;AAAA,mEAAC;AAAA,kBAAG,mBAAS;AAAA,mBAAb;AAAA;AAAA;AAAA;AAAA,uBAAiB;AAAA,gBACjB,mDAAC;AAAA,kBAAG,mBAAS;AAAA,mBAAb;AAAA;AAAA;AAAA;AAAA,uBAAmB;AAAA;AAAA,eAJdA,QADP;AAAA;AAAA;AAAA;AAAA,mBAMA,CACD;AAAA,aATH;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA;AAAA,SAjBK,OADP;AAAA;AAAA;AAAA;AAAA,aAmBA;AAAA,IAEJ;AAAA;AAAA,GA7EF;AAAA;AAAA;AAAA;AAAA,OA8EA;;;AC5FJ,qBAAoB,oCAApB;AAGA,SAAS,iBAAiB,UAAU;AAClC,SAAO,SAAS,OAAO,CAAC,KAAK,YAAY;AACvC,QAAM,QAAQ;AACd,mBAAQ,WAAW,QAAQ,CAAC,EAAE,WAAW,MAAM,MAAM;AACnD,UAAM,mBAAmB,MAAM;AAC/B,UAAI,CAAC,kBAAkB;AACrB,cAAM,aAAa,CAAC,KAAK;AACzB;AAAA,MACF;AAGA,MADoB,iBAAiB,KAAK,CAAC,QAAQ,QAAQ,KAAK,KAE9D,MAAM,WAAW,KAAK,KAAK;AAAA,IAE/B,CAAC,GAEM;AAAA,EACT,GAAG,CAAC,CAAC;AACP;AAEA,SAAS,mBAAmB,EAAE,WAAW,GAAG;AAC1C,SAAO,OAAO;AAAA,IACZ,CAAC;AAAA,IACD,GAAG,WAAW,IAAI,CAAC,EAAE,WAAW,MAAM,OAAO,EAAE,CAAC,YAAY,MAAM,EAAE;AAAA,EACtE;AACF;AAEO,IAAM,kBAAkB,CAAC;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,MAAM,aAAa,iBAAiB,QAAQ;AAE5C,WAAS,kBAAkB,EAAE,WAAW,OAAO,EAAE,GAAG;AAClD,QAAM,qBAAqB,mBAAmB,eAAe;AAE7D,uBAAmB,aAAa;AAEhC,QAAI,UAAU,SAAS,KAAK,CAACC,aACvB,qBAAAC,SAAQ,oBAAoB,mBAAmBD,QAAO,CAAC,CAI5D;AAED,IAAI,WACF,gBAAgB,OAAO;AAAA,EAE3B;AAEA,SACE,mDAAC;AAAA,IACE,iBAAO,KAAK,UAAU,EAAE,IAAI,CAAC,cAAc;AAC1C,UAAM,OAAO,WAAW,YAClB,eAAe,gBAAgB,WAAW;AAAA,QAC9C,CAAC,MAAM,EAAE,cAAc;AAAA,MACzB;AAEA,aAAK,eAKH,mDAAC;AAAA,QAAoB,WAAU;AAAA,QAC7B;AAAA,6DAAC;AAAA,YACC,6DAAC;AAAA,cAAG,WAAU;AAAA,cAAqC;AAAA,eAAnD;AAAA;AAAA;AAAA;AAAA,mBAA6D;AAAA,aAD/D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAEA,mDAAC;AAAA,YAAI,WAAU;AAAA,YACZ,eAAK,IAAI,CAAC,UACT,mDAAC;AAAA,cAEC,SAAS,CAAC,MACR,kBAAkB;AAAA,gBAChB;AAAA,gBACA;AAAA,gBACA;AAAA,cACF,CAAC;AAAA,cAEH,MAAK;AAAA,cACL,WAAU;AAAA,cACV,OAAO;AAAA,gBACL,QACE,UAAU,aAAa,QACnB,8BACA;AAAA,cACR;AAAA,cAEC;AAAA,eAjBI,OADP;AAAA;AAAA;AAAA;AAAA,mBAmBA,CACD;AAAA,aAtBH;AAAA;AAAA;AAAA;AAAA,iBAuBA;AAAA;AAAA,SA5BQ,WAAV;AAAA;AAAA;AAAA;AAAA,aA6BA,IAjCO;AAAA,IAmCX,CAAC;AAAA,KA3CH;AAAA;AAAA;AAAA;AAAA,SA4CA;AAEJ;;;ACnGA,IAAAE,sBAAsB,qCACtBC,gBAAqB,yBAHrB,2DAUa,kBAAkB,CAAC,EAAE,QAAQ,MAGtC,mDAAC;AAAA,EAAI,WAAU;AAAA,EACZ,2BAAiB,QAAQ,SAAS,sBAAsB,EAAE,MAAM;AAAA,IAC/D,CAAC,MAAM,UAAO;AAftB;AAgBU,gEAAC;AAAA,QACC,UAAS;AAAA,QACT,IAAI,KAAK;AAAA,QAET,WAAU;AAAA,QAEV,6DAAC;AAAA,UAAI,WAAU;AAAA,UACb;AAAA,+DAAC;AAAA,cAAI,WAAU;AAAA,cACb;AAAA,mEAAC;AAAA,kBAAI,WAAU;AAAA,kBACZ,qBAAK,WAAL,mBAAa,IAAI,CAAC,UACjB,mDAAC;AAAA,oBACC,WAAU;AAAA,oBAGT,gBAAM;AAAA,qBAFF,MAAM,MAFb;AAAA;AAAA;AAAA;AAAA,yBAKA;AAAA,mBAPJ;AAAA;AAAA;AAAA;AAAA,uBASA;AAAA,gBACA,mDAAC;AAAA,kBAAI;AAAA;AAAA,oBACD,iBAAiB,MAAM,SAAS,EAAE,eAAe;AAAA;AAAA,mBADrD;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA;AAAA,eAbF;AAAA;AAAA;AAAA;AAAA,mBAcA;AAAA,YAEA,mDAAC;AAAA,cACE,GAAG,iBAAiB,MAAM,SAAS,EAAE,eAAe;AAAA,cACrD,OAAM;AAAA,cACN,SAAQ;AAAA,eAHV;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,YACA,mDAAC;AAAA,cAAG,WAAU;AAAA,cAA6B,eAAK;AAAA,eAAhD;AAAA;AAAA;AAAA;AAAA,mBAAqD;AAAA;AAAA,WAtBvD;AAAA;AAAA;AAAA;AAAA,eAuBA;AAAA,SA1BK,OAHP;AAAA;AAAA;AAAA;AAAA,aA8BA;AAAA;AAAA,EAEJ;AAAA,GAnCF;AAAA;AAAA;AAAA;AAAA,OAoCA;;;AJzCJ,IAAAC,gBAAyB,kBACzBC,gBAA4B,yBAC5B,eAAyB,sCAVzB,2DAiBa,UAAU,CAAC,EAAE,QAAQ,MAAoB;AAjBtD;AAkBE,MAAI,OAAO,iBAAiB,SAAS,SAAS,GAC1C,eAAW,2BAAY,GAErB,CAAC,iBAAiB,kBAAkB,QAAI,wBAAS,KAAK,SAAS,EAAE,GACjE,SAAS,UAAU,GAEnB,kBAAkB,CAAC,YAAY,mBAAmB,OAAO,GAEzD,MAAM,MAAM;AA1BpB,QAAAC;AA2BI,KAAAA,MAAA,iCAAQ,YAAR,QAAAA,IAAiB,QAAQ;AAAA,MACvB,IAAI,gBAAgB;AAAA,MACpB,KAAK,gBAAgB;AAAA,MACrB,MAAM,KAAK;AAAA,MACX,wBAAwB;AAAA,MACxB,OAAO,gBAAgB;AAAA,IACzB,IACA,SAAS,SAAS,EAAE,SAAS,GAAM,CAAC;AAAA,EACtC,GAEM,UAAU,EAAE,MAAM,KAAK,SAAS,GAAG,YAAY,GAAG;AACxD,WAAS,cAAc,SAAS;AAC9B,WAAO,QAAQ,OAAO,OAAO,EAAE,KAAK,GAAG;AAAA,EACzC;AAEA,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb;AAAA,yDAAC;AAAA,QAAI,cAAW;AAAA,QACd,6DAAC;AAAA,UACC,MAAK;AAAA,UACL,WAAU;AAAA,UAEV;AAAA,+DAAC;AAAA,cACC,6DAAC;AAAA,gBAAI,WAAU;AAAA,gBACb;AAAA,qEAAC;AAAA,oBAAE,MAAK;AAAA,oBAAI,WAAU;AAAA,oBAAyC;AAAA,qBAA/D;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,kBACA,mDAAC;AAAA,oBACC,OAAO;AAAA,oBACP,QAAQ;AAAA,oBACR,SAAQ;AAAA,oBACR,MAAK;AAAA,oBACL,OAAM;AAAA,oBACN,eAAY;AAAA,oBACZ,WAAU;AAAA,oBAEV,6DAAC;AAAA,sBAAK,GAAE;AAAA,uBAAR;AAAA;AAAA;AAAA;AAAA,2BAA2D;AAAA,qBAT7D;AAAA;AAAA;AAAA;AAAA,yBAUA;AAAA;AAAA,iBAdF;AAAA;AAAA;AAAA;AAAA,qBAeA;AAAA,eAhBF;AAAA;AAAA;AAAA;AAAA,mBAiBA;AAAA,YACA,mDAAC;AAAA,cAAG,WAAU;AAAA,cACZ,6DAAC;AAAA,gBACC,MAAM,KAAK;AAAA,gBACX,gBAAa;AAAA,gBACb,WAAU;AAAA,gBAET,eAAK;AAAA,iBALR;AAAA;AAAA;AAAA;AAAA,qBAMA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA,mBAQA;AAAA;AAAA,WA9BF;AAAA;AAAA;AAAA;AAAA,eA+BA;AAAA,SAhCF;AAAA;AAAA;AAAA;AAAA,aAiCA;AAAA,MAGA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACb,6DAAC;AAAA,UAAI,WAAU;AAAA,UACb,6DAAC;AAAA,YACE,GAAG,KAAK,eAAe;AAAA,YACxB,WAAU;AAAA,aAFZ;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,WAJF;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MAGA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACb;AAAA,6DAAC;AAAA,YAAI,WAAU;AAAA,YACb,6DAAC;AAAA,cAAG,WAAU;AAAA,cACX,eAAK;AAAA,eADR;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UAGA,mDAAC;AAAA,YAAI,WAAU;AAAA,YACb;AAAA,iEAAC;AAAA,gBAAG,WAAU;AAAA,gBAAU;AAAA,iBAAxB;AAAA;AAAA;AAAA;AAAA,qBAA2C;AAAA,cAC3C,mDAAC;AAAA,gBAAE,WAAU;AAAA,gBACV;AAAA,kCAAgB;AAAA,kBAAM;AAAA;AAAA,iBADzB;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAGA,mDAAC;AAAA,gBAAI,WAAU;AAAA,gBACb;AAAA,qEAAC;AAAA,oBAAG,WAAU;AAAA,oBAAU;AAAA,qBAAxB;AAAA;AAAA;AAAA;AAAA,yBAA+B;AAAA,kBAC/B,mDAAC;AAAA,oBAAI,WAAU;AAAA,oBACb;AAAA,yEAAC;AAAA,wBAAI,WAAU;AAAA,wBACZ,WAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,WACpB,mDAAC;AAAA,0BAEC,WAAW;AAAA,4BACT,QAAQ,UAAU,SAAS,oBAAoB;AAAA,4BAC/C;AAAA,0BACF;AAAA,0BACA,eAAY;AAAA,2BALP,QADP;AAAA;AAAA;AAAA;AAAA,+BAOA,CACD;AAAA,yBAVH;AAAA;AAAA;AAAA;AAAA,6BAWA;AAAA,sBACA,mDAAC;AAAA,wBAAE,WAAU;AAAA,wBAAW;AAAA,kCAAQ;AAAA,0BAAQ;AAAA;AAAA,yBAAxC;AAAA;AAAA;AAAA;AAAA,6BAAuD;AAAA,sBACvD,mDAAC;AAAA,wBAAE,MAAM,QAAQ;AAAA,wBAAM,WAAU;AAAA,wBAC9B;AAAA,kCAAQ;AAAA,0BAAW;AAAA;AAAA,yBADtB;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA;AAAA,qBAhBF;AAAA;AAAA;AAAA;AAAA,yBAiBA;AAAA;AAAA,iBAnBF;AAAA;AAAA;AAAA;AAAA,qBAoBA;AAAA,cAGA,mDAAC;AAAA,gBAAI,WAAU;AAAA,gBACb,6DAAC;AAAA,kBACC,UAAU,KAAK;AAAA,kBACf;AAAA,kBACA;AAAA,mBAHF;AAAA;AAAA;AAAA;AAAA,uBAIA;AAAA,iBALF;AAAA;AAAA;AAAA;AAAA,qBAMA;AAAA,cAEA,mDAAC;AAAA,gBACC,SAAS,MAAM,IAAI;AAAA,gBACnB,WAAU;AAAA,gBACX;AAAA,iBAHD;AAAA;AAAA;AAAA;AAAA,qBAKA;AAAA;AAAA,aA3CF;AAAA;AAAA;AAAA;AAAA,iBA4CA;AAAA,UAEA,mDAAC;AAAA,YAAI,WAAU;AAAA,YAEb,6DAAC;AAAA,cACC;AAAA,mEAAC;AAAA,kBAAG,WAAU;AAAA,kBAAU;AAAA,mBAAxB;AAAA;AAAA;AAAA;AAAA,uBAAmC;AAAA,gBAEnC,mDAAC;AAAA,kBAAI,WAAU;AAAA,kBACb,6DAAC;AAAA,oBACC,OACE,sBAAiB,KAAK,QAAQ,SAAS,iBAAiB,MAAxD,mBACI;AAAA,qBAHR;AAAA;AAAA;AAAA;AAAA,yBAKA;AAAA,mBANF;AAAA;AAAA;AAAA;AAAA,uBAOA;AAAA,gBACA,mDAAC;AAAA,kBAAY,MAAM,KAAK;AAAA,kBAAM,OAAO,KAAK;AAAA,mBAA1C;AAAA;AAAA;AAAA;AAAA,uBAAiD;AAAA;AAAA,eAXnD;AAAA;AAAA;AAAA;AAAA,mBAYA;AAAA,aAdF;AAAA;AAAA;AAAA;AAAA,iBAeA;AAAA;AAAA,SArEF;AAAA;AAAA;AAAA;AAAA,aAsEA;AAAA,MACA,mDAAC;AAAA,QACC,6DAAC;AAAA,UAAE,WAAU;AAAA,UAA+B;AAAA,WAA5C;AAAA;AAAA;AAAA;AAAA,eAA0D;AAAA,SAD5D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAgB,SAAS,KAAK;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA;AAAA,KAzH1C;AAAA;AAAA;AAAA;AAAA,SA0HA;AAEJ;;;AKvKA,4BAAkB;AAwBX,SAAS,sBAAsB,QAAgB,cAAsB,MAAqF;AAE7J,SAAI,QAAQ,IAAI,uBAAuB,WAO5B;AAAA,IACH,SAAS;AAAA,MACL,iBAAiB,uBAAmB,sBAAAC,SAAM,QAAQ,GAAG,mBAAe,sBAAAA,SAAM,cAAc,GAAG,iCAA6B,sBAAAA,SAAM,QAAQ,GAAG,yBAAqB,sBAAAA,SAAM,cAAc,GAAG;AAAA,MACrL,qBAAqB,eAAW,sBAAAA,SAAM,cAAc,GAAG,iCAA6B,sBAAAA,SAAM,cAAc,GAAG;AAAA,MAC3G,iBAAiB,KAAK,KAAK,GAAG;AAAA,IAClC;AAAA,EACJ,IAGA,QAAQ,IAAI,uBAAuB,YAK5B;AAAA,IACH,SAAS;AAAA,MACL,iBAAiB,uBAAmB,sBAAAA,SAAM,QAAQ,GAAG,mBAAe,sBAAAA,SAAM,cAAc,GAAG,iCAA6B,sBAAAA,SAAM,QAAQ,GAAG;AAAA,MACzI,MAAQ,KAAK,KAAK,GAAG;AAAA,IACzB;AAAA,EACJ,IAGG;AAAA,IACH,SAAS;AAAA,MACL,iBAAiB,uBAAmB,sBAAAA,SAAM,QAAQ,GAAG,mBAAe,sBAAAA,SAAM,cAAc,GAAG,iCAA6B,sBAAAA,SAAM,QAAQ,GAAG;AAAA,IAC7I;AAAA,EACJ;AACJ;;;AT5DA,+DAYWC,UAAyB,OAAO,EAAE,QAAQ,QAAQ,MAAM;AAIjE,MAAM,UAHM,IAAI,IAAI,QAAQ,GAAG,EAEX,aAAa,IAAI,SAAS,IACpB,UAAU,aAC9B,OAAO,WAAW,OAAO,SACzB,OAAO,MAAM,gBAAgB;AAAA,IACjC,sBAAsB,eAAe;AAAA,IACrC,EAAE,MAAM,QAAQ;AAAA,EAClB;AAEA,aAAO;AAAA,IACL,EAAE,GAAG,MAAM,KAAK;AAAA,IAChB,sBAAsB,OAAO,MAAM,CAAC,WAAW,aAAa,OAAO,OAAO,CAAC;AAAA,EAC7E;AACF,GAEWC,QAAqB,CAAC,EAAE,KAAK,MAAM;AA7B9C;AA8BE,MAAI,EAAE,QAAQ,IAAI,MACd,eAAc;AAAA,KAChB,wCAAS,YAAT,mBAAkB;AAAA,IAClB;AAAA,EACF,MAHkB,mBAGf,UAAU,IACT,SAAQ,wCAAS,mBAAT,mBAAyB,WAAW;AAEhD,SAAO;AAAA,IACL,OAAO,GAAG,mCAAS;AAAA,IACnB,aAAa,GAAG;AAAA,IAChB,kBAAkB,GAAG;AAAA,IACrB,YAAY,GAAG;AAAA,EACjB;AACF;AAEO,SAAS,UAAU;AACxB,SAAO,sBAAsB,MAAM,MAAM,CAAC,WAAW,eAAe,CAAC,EAClE;AACL;AAEe,SAAR,QAAyB;AAC9B,MAAI,WAAO,6BAAc;AAEzB,SACE,mDAAC;AAAA,IACC,6DAAC;AAAA,MAAQ,SAAS,KAAK;AAAA,OAAvB;AAAA;AAAA;AAAA;AAAA,WAAgC;AAAA,KADlC;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;;;AU1DA;AAAA;AAAA;AAAA;AACA,IAAAC,gBAAqB;;;ACDrB,IAAAC,gBAAyB;;;ACAzB,IAAAC,gBAA2C;;;ACuBpC,IAAM,6BAA6B,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,uBAAsB,WAAY,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,qBAAoB,GAAE,qBAAsB,CAAC,EAAC,MAAO,sBAAqB,UAAW,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,gBAAe,EAAC,GAAE,MAAO,EAAC,MAAO,eAAc,MAAO,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,qBAAoB,EAAC,EAAC,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,mBAAkB,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,gBAAe,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,gBAAe,GAAE,OAAQ,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,gBAAe,EAAC,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC;;;ADd7kC,IAAAC,gBAAgC,yBAThC,2DAiBa,cAAc,CAAC;AAAA,EAC3B;AAAA,EACA,UAAU,CAAC,UAAU,QAAQ,IAAI,KAAK;AACvC,MAAiB;AAEhB,MAAM,CAAC,QAAQ,SAAS,QAAI,wBAAgC,MAAM;AAkClE,SACC,mDAAC;AAAA,IAAK,QAAO;AAAA,IAAO,UAjCmC,OAAO,UAAU;AACxE,YAAM,eAAe,GAErB,GAAG;AAEH,qBAAe,KAAK;AACnB,kBAAU,YAAY;AAOtB,YAAM,WAAW,MAAM,iBAAiB,QAGtC,4BAA4B;AAAA,UAC7B;AAAA,QACD,CAAC,GAEK,EAAE,SAAS,QAAQ,IACxB,SAAS,iBAAiB,QAAQ;AAEnC,QAAI,UACH,OAAO,SAAS,QAAQ,iBAAiB,SAAS,KAElD,UAAU,MAAM,GAChB,QAAQ,IAAI,MAAM,SAAS,CAAC;AAAA,MAE9B;AAAA,IACD;AAAA,IAKE,6DAAC;AAAA,MACA,MAAK;AAAA,MACL,UAAU,WAAW;AAAA,MACrB,WAAU;AAAA,MAET,qBAAW,SAAS,oFAAmB;AAAA,OALzC;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,KARD;AAAA;AAAA;AAAA;AAAA,SASA;AAEF,GAEa,gBAAgB,CAAC,EAAE,eAAe,UAAU,MAGvD,mDAAC;AAAA,EACA;AAAA,EACA;AAAA,GAFD;AAAA;AAAA;AAAA;AAAA,OAGA,GAIW,UAAU,CAAC,EAAE,eAAe,UAAU,MAC3C,mDAAC;AAAA,EAAc;AAAA,EAA8B;AAAA,GAA7C;AAAA;AAAA;AAAA;AAAA,OAAmE;;;ADjF3E,+DAMa,WAAW,CAAC,UAAwB;AAC/C,MAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,EAAE;AAEzC,SACE;AAAA,IACG,6DAAC;AAAA,MAAS,GAAG;AAAA,OAAb;AAAA;AAAA;AAAA;AAAA,WAAoB;AAAA,KADvB;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;;;ADXA,IAAAC,gBAAyB,kBAHzB;AAOe,SAAR,WAA4B;AACjC,MAAM,CAAC,OAAO,QAAQ,QAAI,wBAAS;AAAA,IACjC,WAAW;AAAA,IACX,UAAU;AAAA,IACV,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,YAAY;AAAA,EACd,CAAC,GAEK,EAAE,WAAW,UAAU,OAAO,QAAQ,MAAM,WAAW,IAAI,OAE3D,SAAS,UAAU;AAEzB,WAAS,OAAO,MAAc;AAC5B,WAAI,OAAO,SAAW,MAAoB,KACnC,GAAG,qCAAU,aAAa,qCAAU,OAAO;AAAA,EACpD;AAEA,MAAM,gBAAoC;AAAA,IACxC,aAAa,OAAO;AAAA,IACpB,UAAU;AAAA,MACR;AAAA,MACA;AAAA,MACA,WAAW;AAAA,QACT,EAAE,MAAM,WAAW,MAAM;AAAA,QACzB;AAAA,UACE,MAAM;AAAA,UACN;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,iBAAiB,OAAO,oCAAoC;AAAA,IAC5D,aAAa,OAAO,WAAW;AAAA,IAC/B,UAAU,OAAO,QAAQ;AAAA,EAC3B;AAEA,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb;AAAA,yDAAC;AAAA,QAAG,WAAU;AAAA,QAAiD;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACb,6DAAC;AAAA,UAAK,QAAO;AAAA,UAAO,WAAU;AAAA,UAC5B;AAAA,+DAAC;AAAA,cACC,MAAK;AAAA,cACL,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,WAAU;AAAA,cACV,UAAU,CAAC,MAAM,SAAS,EAAE,GAAG,OAAO,WAAW,EAAE,OAAO,MAAM,CAAC;AAAA,eALnE;AAAA;AAAA;AAAA;AAAA,mBAMA;AAAA,YACA,mDAAC;AAAA,cACC,MAAK;AAAA,cACL,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,WAAU;AAAA,cACV,UAAU,CAAC,MAAM,SAAS,EAAE,GAAG,OAAO,UAAU,EAAE,OAAO,MAAM,CAAC;AAAA,eALlE;AAAA;AAAA;AAAA;AAAA,mBAMA;AAAA,YACA,mDAAC;AAAA,cACC,MAAK;AAAA,cACL,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,WAAU;AAAA,cACV,UAAU,CAAC,MAAM,SAAS,EAAE,GAAG,OAAO,OAAO,EAAE,OAAO,MAAM,CAAC;AAAA,eAL/D;AAAA;AAAA;AAAA;AAAA,mBAMA;AAAA,YACC,mDAAC;AAAA,cACA,MAAK;AAAA,cACL,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,WAAU;AAAA,cACV,UAAU,CAAC,MAAM,SAAS,EAAE,GAAG,OAAO,QAAQ,EAAE,OAAO,MAAM,CAAC;AAAA,eAL/D;AAAA;AAAA;AAAA;AAAA,mBAMD;AAAA;AAAA,WA5BF;AAAA;AAAA;AAAA;AAAA,eA6BA;AAAA,SA9BF;AAAA;AAAA;AAAA;AAAA,aA+BA;AAAA,MACA,mDAAC;AAAA,QACC;AAAA,QACA,WAAW,MAAM,QAAQ,IAAI,SAAS;AAAA,QACtC,SAAS,MAAM;AAAA,QAAC;AAAA,SAHlB;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KAxCF;AAAA;AAAA;AAAA;AAAA,SAyCA;AAEJ;;;AI1FA;AAAA;AAAA,iBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA,IAAAC,iBAAkE;;;AC65B3D,IAAM,oBAAoB,EAAC,MAAO,YAAW,aAAc,CAAC,EAAC,MAAO,uBAAsB,WAAY,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,qBAAsB,CAAC,EAAC,MAAO,sBAAqB,UAAW,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,MAAO,EAAC,MAAO,eAAc,MAAO,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,EAAC,EAAC,EAAC,GAAE,EAAC,MAAO,sBAAqB,UAAW,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,MAAO,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,eAAc,EAAC,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,GAAE,OAAQ,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,EAAC,GAAE,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,OAAQ,EAAC,MAAO,eAAc,OAAQ,MAAK,OAAQ,GAAK,EAAC,GAAE,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,OAAQ,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,OAAQ,EAAC,MAAO,QAAO,OAAQ,OAAM,GAAE,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,GAAE,OAAQ,EAAC,MAAO,eAAc,OAAQ,QAAO,OAAQ,GAAK,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,OAAQ,EAAC,MAAO,QAAO,OAAQ,OAAM,GAAE,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,GAAE,OAAQ,EAAC,MAAO,eAAc,OAAQ,QAAO,OAAQ,GAAK,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,uBAAsB,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,kBAAiB,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,OAAQ,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,GAAE,OAAQ,EAAC,MAAO,eAAc,OAAQ,SAAQ,OAAQ,GAAK,EAAC,GAAE,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,OAAQ,EAAC,MAAO,eAAc,OAAQ,MAAK,OAAQ,GAAK,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,WAAU,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,OAAQ,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,MAAO,EAAC,MAAO,QAAO,OAAQ,YAAW,GAAE,WAAY,CAAC,EAAC,MAAO,YAAW,MAAO,EAAC,MAAO,QAAO,OAAQ,KAAI,GAAE,OAAQ,EAAC,MAAO,eAAc,OAAQ,UAAS,OAAQ,GAAK,EAAC,CAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,kBAAiB,eAAgB,EAAC,MAAO,aAAY,MAAO,EAAC,MAAO,QAAO,OAAQ,UAAS,EAAC,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,SAAQ,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,OAAM,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,iBAAgB,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,aAAY,GAAE,cAAe,EAAC,MAAO,gBAAe,YAAa,CAAC,EAAC,MAAO,kBAAiB,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,CAAC,EAAC,EAAC,GAAE,EAAC,MAAO,SAAQ,MAAO,EAAC,MAAO,QAAO,OAAQ,QAAO,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,CAAC,EAAC,EAAC,GAAE,GAAG,qBAAqB,aAAY,GAAG,iBAAiB,aAAY,GAAG,mBAAmB,WAAW,EAAC;;;ADt5BpgL,IAAAC,gBAAiB;;;AEPjB,IAAAC,sBAAsB,qCACtBC,iBAAqB,yBADrB,2DAIa,WAAW,CAAC,EAAE,KAAK,MAAM;AAJtC;AAKE,SACE,mDAAC;AAAA,IAAK,IAAI,KAAK,KAAK;AAAA,IAAM,UAAS;AAAA,IACjC;AAAA,yDAAC;AAAA,QAAI,WAAU;AAAA,QACb;AAAA,6DAAC;AAAA,YACE,IAAG,UAAK,KAAK,SAAS,OAAnB,mBAAuB,OAAO;AAAA,YAClC,SAAQ;AAAA,YACR,WAAU;AAAA,aAHZ;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,mDAAC;AAAA,YAAI,WAAU;AAAA,YACb,6DAAC;AAAA,cAAI,WAAU;AAAA,cACZ,qBAAK,KAAK,WAAV,mBAAkB,IAAI,CAAC,UACtB,mDAAC;AAAA,gBACC,WAAU;AAAA,gBAGT,gBAAM;AAAA,iBAFF,MAAM,MAFb;AAAA;AAAA;AAAA;AAAA,qBAKA;AAAA,eAPJ;AAAA;AAAA;AAAA;AAAA,mBASA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA;AAAA,SAjBF;AAAA;AAAA;AAAA;AAAA,aAkBA;AAAA,MACA,mDAAC;AAAA,QAAG,WAAU;AAAA,QAAwC,eAAK,KAAK;AAAA,SAAhE;AAAA;AAAA;AAAA;AAAA,aAAqE;AAAA,MACrE,mDAAC;AAAA,QAAE,WAAU;AAAA,QACV;AAAA,qBAAK,KAAK,SAAS,OAAnB,mBAAuB;AAAA,UAAM;AAAA;AAAA,SADhC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KAvBF;AAAA;AAAA;AAAA;AAAA,SAwBA;AAEJ;;;AC9BA,IAAAC,sBAAsB,qCACtBC,iBAAqB,yBAHrB,2DAUa,WAAW,CAAC,EAAE,OAAO,MAAqB;AAVvD;AAWE,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb;AAAA,yDAAC;AAAA,QAAE,WAAU;AAAA,QAA8B;AAAA,SAA3C;AAAA;AAAA;AAAA;AAAA,aAAwD;AAAA,MACxD,mDAAC;AAAA,QAAI,WAAU;AAAA,QACZ,iDAAQ,aAAR,mBAAkB;AAAA,UAAI,CAAC,OAAO,UAAO;AAf9C,gBAAAC,KAAA;AAgBU,sBAAC,uBAAiBA,MAAA,+BAAO,WAAP,gBAAAA,IAAe,SAAS,gBAAgB,MAAzD,WAA4D,UAC7D,MAAM,SACJ,mDAAC;AAAA,cACC,IAAI,iBAAiB,OAAO,SAAS,EAAE;AAAA,cACvC,UAAS;AAAA,cACT,WAAU;AAAA,cAGV,6DAAC;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAI,WAAU;AAAA,oBACb;AAAA,yEAAC;AAAA,wBAAI,WAAU;AAAA,wBACZ,+CAAO,WAAP,mBAAe,IAAI,CAAC,OAAOC,WAC1B,mDAAC;AAAA,0BACC,WAAU;AAAA,0BAGT,gBAAM;AAAA,2BAFFA,QAFP;AAAA;AAAA;AAAA;AAAA,+BAKA;AAAA,yBAPJ;AAAA;AAAA;AAAA;AAAA,6BASA;AAAA,sBACA,mDAAC;AAAA,wBAAE,WAAU;AAAA,wBAAW;AAAA;AAAA,2BACpB,sBAAiB,OAAO,SAAS,MAAjC,mBAAoC,eAAe;AAAA;AAAA,yBADvD;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA;AAAA,qBAbF;AAAA;AAAA;AAAA;AAAA,yBAcA;AAAA,kBACA,mDAAC;AAAA,oBACE,IAAG,sBAAiB,OAAO,SAAS,MAAjC,mBAAoC,eACrC;AAAA,oBACH,OAAM;AAAA,qBAHR;AAAA;AAAA;AAAA;AAAA,yBAIA;AAAA,kBACA,mDAAC;AAAA,oBAAG,WAAU;AAAA,oBACX,iCAAiB,OAAO,SAAS,MAAjC,mBAAoC;AAAA,qBADvC;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA;AAAA,iBAvBF;AAAA;AAAA;AAAA;AAAA,qBAwBA;AAAA,eA1BK,OAJP;AAAA;AAAA;AAAA;AAAA,mBA+BA,IACE;AAAA;AAAA;AAAA,SApCR;AAAA;AAAA;AAAA;AAAA,aAsCA;AAAA;AAAA,KAxCF;AAAA;AAAA;AAAA;AAAA,SAyCA;AAEJ;;;AHvDA,+DAcWC,UAAyB,OAAO,EAAE,QAAQ,MAAM;AAIzD,MAAM,UAHM,IAAI,IAAI,QAAQ,GAAG,EAEX,aAAa,IAAI,SAAS,IACpB,UAAU,aAC9B,OAAO,cACP,OAAO,MAAM,gBAAgB;AAAA,IACjC,sBAAsB,iBAAiB;AAAA,IACvC,EAAE,MAAM,QAAQ;AAAA,EAClB;AAEA,aAAO;AAAA,IACL,EAAE,GAAG,MAAM,KAAK;AAAA,IAChB,sBAAsB,OAAO,MAAM,CAAC,WAAW,CAAC;AAAA,EAClD;AACF,GAEWC,QAAqB,CAAC,EAAE,KAAK,MAAM;AA/B9C;AAgCE,MAAI;AAAA,IACF,WAAW,EAAE,MAAAA,MAAK;AAAA,EACpB,IAAI,MACA,WAAW,iBAAiBA,MAAK,SAAS,qBAAqB,EAChE,OAAO;AAEV,SAAO;AAAA,IACL,OAAO,GAAG,iBAAiB,SAAS,GAAG,SAAS,mBAAmB,EAAE;AAAA,IACrE,aAAa,GACX,iBAAiB,SAAS,GAAG,SAAS,iBAAiB,EAAE,UAAU;AAAA,IAErE,YAAY,IACV,4BAAiB,SAAS,GAAG,SAAS,cAAc,MAApD,mBAAuD,OAAO,OAA9D,mBAAkE;AAAA,EAEtE;AACF;AAEO,SAASC,WAAU;AACxB,SAAO,sBAAsB,MAAM,MAAM,CAAC,OAAO,CAAC,EAAE;AACtD;AAEe,SAARC,SAAyB;AAC9B,MAAI,EAAE,WAAW,OAAO,QAAI,8BAAc,GACtC,EAAE,KAAK,IAAI,WAET,WAAW,CAAC,EAAE,MAAM,MACjB,MAAM,IAAI,CAAC,MAAM,UACtB,mDAAC;AAAA,IACC,OAAO;AAAA,MACL,YAAY,QAAQ,KAAK,OAAO;AAAA,MAChC,SAAS,QAAQ,KAAK,OAAO;AAAA,IAC/B;AAAA,IACA,IAAG;AAAA,IAGH,6DAAC;AAAA,MAAS;AAAA,OAAV;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,KAFjB,SAAS,OANhB;AAAA;AAAA;AAAA;AAAA,SASA,CACD;AAGH,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb;AAAA,yDAAC,cAAAC,SAAA;AAAA,QAAK,OAAO,KAAK,QAAQ,MAAM;AAAA,QAAI,WAAU;AAAA,QAC3C;AAAA,SADH;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAS;AAAA,SAAV;AAAA;AAAA;AAAA;AAAA,aAA0B;AAAA;AAAA,KAJ5B;AAAA;AAAA;AAAA;AAAA,SAKA;AAEJ;;;AIhFA;AAAA;AAAA;AAAA;AACA,IAAAC,iBAAqB,yBADrB;AAKe,SAAR,OAAwB;AAC7B,MAAI,SAAS,UAAU;AACvB,SAAK,OAAO,KAAK,SAQf,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb;AAAA,yDAAC;AAAA,QAAG,WAAU;AAAA,QAA4B;AAAA;AAAA,UACzB,OAAO,KAAK;AAAA,UAAO;AAAA;AAAA,SADpC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACZ;AAAA,iBAAO,KAAK,IAAI,CAAC,MAAM,UAAO;AApBvC;AAqBU,sEAAC;AAAA,cAAgB,WAAU;AAAA,cACzB;AAAA,mEAAC;AAAA,kBAAI,WAAU;AAAA,kBACb;AAAA,uEAAC;AAAA,sBAAE,WAAU;AAAA,sBACV;AAAA,6BAAK;AAAA,wBAAK;AAAA,wBAAI,KAAK;AAAA;AAAA,uBADtB;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,oBACA,mDAAC;AAAA,sBAAI,WAAU;AAAA,sBACZ,qBAAK,eAAL,mBAAiB,IAAI,CAAC,MAAMC,WAC3B,mDAAC;AAAA,wBACC,WAAU;AAAA,wBAGT,eAAK;AAAA,yBAFDA,QAFP;AAAA;AAAA;AAAA;AAAA,6BAKA;AAAA,uBAPJ;AAAA;AAAA;AAAA;AAAA,2BASA;AAAA;AAAA,mBAbF;AAAA;AAAA;AAAA;AAAA,uBAcA;AAAA,gBACA,mDAAC;AAAA,kBAAE;AAAA;AAAA,oBAAE,KAAK,MAAM,QAAQ,KAAK;AAAA;AAAA,mBAA7B;AAAA;AAAA;AAAA;AAAA,uBAAsC;AAAA;AAAA,eAhB9B,OAAV;AAAA;AAAA;AAAA;AAAA,mBAiBA;AAAA,WACD;AAAA,UACD,mDAAC;AAAA,YAAI,WAAU;AAAA,YACb;AAAA,iEAAC;AAAA,gBAAE,WAAU;AAAA,gBAAwB;AAAA,iBAArC;AAAA;AAAA;AAAA;AAAA,qBAA0C;AAAA,cAC1C,mDAAC;AAAA,gBAAE;AAAA;AAAA,kBAAE,OAAO,MAAM;AAAA;AAAA,iBAAlB;AAAA;AAAA;AAAA;AAAA,qBAAwB;AAAA;AAAA,aAF1B;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,mDAAC;AAAA,YACC,IAAG;AAAA,YACH,WAAU;AAAA,YACX;AAAA,aAHD;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA;AAAA,SA9BF;AAAA;AAAA;AAAA;AAAA,aA+BA;AAAA;AAAA,KAnCF;AAAA;AAAA;AAAA;AAAA,SAoCA,IA1CE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb,6DAAC;AAAA,MAAG,WAAU;AAAA,MAA+B;AAAA,OAA7C;AAAA;AAAA;AAAA;AAAA,WAA2D;AAAA,KAD7D;AAAA;AAAA;AAAA;AAAA,SAEA;AA0CN;;;ACrDA,IAAO,0BAAQ,EAAC,SAAU,YAAW,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,kCAAkC,EAAC,GAAE,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAK,kBAAmB,GAAI,GAAE,eAAc,EAAC,IAAK,eAAc,UAAW,QAAO,MAAO,QAAO,OAAQ,QAAU,eAAgB,QAAU,QAAS,kCAAiC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,mBAAkB,EAAC,IAAK,mBAAkB,UAAW,QAAO,MAAO,YAAW,OAAQ,QAAU,eAAgB,QAAU,QAAS,sCAAqC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,gCAA+B,EAAC,IAAK,gCAA+B,UAAW,QAAO,MAAO,yBAAwB,OAAQ,QAAU,eAAgB,QAAU,QAAS,mDAAkD,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,gBAAe,EAAC,IAAK,gBAAe,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,wBAAuB,EAAC,IAAK,wBAAuB,UAAW,QAAO,MAAO,iBAAgB,OAAQ,QAAU,eAAgB,QAAU,QAAS,2CAA0C,SAAU,CAAC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,EAAC,GAAE,KAAM,8BAA6B;;;ACS7gE,IAAM,uBAAuB,gBACvB,aAAa,WACb,QAAQ,EAAE,QAAQ,qBAAY,GAC9B,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gCAAgC;AAAA,IAC5B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,wBAAwB;AAAA,IACpB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,mBAAmB;AAAA,IACf,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,eAAe;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;",
  "names": ["import_remix", "produce", "json", "React", "locale", "import_remix", "loader", "import_remix", "import_react", "loader", "loader", "meta", "import_remix", "filter", "pipe", "uniqBy", "import_react_content_transformer", "import_react_image", "ReactPlayer", "index", "variant", "isEqual", "import_react_image", "import_remix", "import_react", "import_remix", "_a", "parse", "loader", "meta", "import_remix", "import_react", "import_react", "import_remix", "import_react", "Index", "headers", "loader", "meta", "import_remix", "import_react", "import_react_image", "import_remix", "import_react_image", "import_remix", "_a", "index", "loader", "meta", "headers", "Index", "Grid", "import_remix", "index"]
}
